
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "goal_symbolAND ARRAY ARROW ASSIGN BEGIN BODY BOX CHAR DOTDOT ELSE END FLOAT FOR FUNCTION GEQ IDENTIFIER IF IN INT IS LAMBDA LEQ LL LOOP MOD NEQ OF OR PRAGMA PROCEDURE RECORD RETURN RR STARSTAR STRING THEN TICK TYPE USE WHILE WITHgoal_symbol : compilation\n\tpragma : PRAGMA IDENTIFIER ';'\n\t   | PRAGMA simple_name '(' pragma_arg_s ')' ';'\n\tpragma_arg_s : pragma_arg\n\t   | pragma_arg_s ',' pragma_arg\n\tpragma_arg : simple_expression\n\t   | simple_name ARROW simple_expression\n\tpragma_s :\n\t   | pragma_s pragma\n\tdecl : object_decl\n\t   | record_decl\n\t   | subprog_decl\n\t   | lambda_decl\n\tobject_decl : def_id_s ':' object_type_def ';'   \n\tdef_id_s : def_id\n\t   | def_id_s ',' def_id\n\tdef_id  : IDENTIFIER\n\tobject_type_def : type_ind\n\t   | array_type\n\trecord_decl : TYPE IDENTIFIER IS record_def ';'\n\ttype_ind : name\n\trange : simple_expression DOTDOT simple_expression\n\tarray_type : ARRAY iter_index_constraint OF type_ind\n\titer_index_constraint : '(' range_s ')'\n\trange_s : range\n\t   | range_s ',' range\n\trecord_def : RECORD param_s ';' END RECORD\n\tdecl_part :\n\t   | decl_item_or_body_s\n\tdecl_item : decl\n\t   | use_clause\n\t   | pragma\n\tdecl_item_or_body_s : decl_item_or_body\n\t   | decl_item_or_body_s decl_item_or_body\n\tdecl_item_or_body : body\n\t   | decl_item\n\tbody : subprog_body\n\tname : compound_name\n\t   | indexed_comp\n\tmark : name\n\tsimple_name : IDENTIFIER\n\tcompound_name : simple_name\n\t   | compound_name '.' simple_name\n\tc_name_list : compound_name\n\t    | c_name_list ',' compound_name\n\tindexed_comp : name '(' value_s ')'\n\t\t| name '(' STRING ')'\n\tvalue_s : value\n\t   | value_s ',' value\n\tvalue : simple_expression\n\tliteral : numeric_lit\n\t\t\t\t| char_lit\n\tchar_lit : CHAR\n\tnumeric_lit : INT\n\tnumeric_lit : FLOAT\n\t M : \n\texpression : relation\n\t   | expression logical M relation\n\tlogical : AND\n\t   | OR\n\trelation : simple_expression relational simple_expression\n\trelational : '='\n\t   | NEQ\n\t   | '<'\n\t   | LEQ\n\t   | '>'\n\t   | GEQ\n\tsimple_expression : term\n\t   | simple_expression adding term\n\tadding  : '+'\n\t   | '-'\n\tterm : factor\n\t   | term multiplying factor\n\tmultiplying : '*'\n\t   | '/'\n\t   | MOD\n\t   | STARSTAR\n\tfactor : primary\n\tprimary : literal\n\t   | name\n\t   | parenthesized_primary\n\tparenthesized_primary : '(' simple_expression ')'\n\tstatement_s : statement\n\t   | statement_s M statement\n\tstatement : simple_stmt\n\t\t| compound_stmt\n\tsimple_stmt : assign_stmt\n\t   | return_stmt\n\t   | procedure_call\n\tcompound_stmt : if_stmt\n\t   | loop_stmt\n\tlambda_decl : lambda_begin simple_expression ';'\n\tlambda_begin : def_id ASSIGN LAMBDA param ':'\n\tassign_stmt : name ASSIGN simple_expression ';'\n\tif_stmt : IF cond_clause else_opt END IF ';'\n\tN :\n\tcond_clause : condition THEN M statement_s N\n\tcondition : expression\n\telse_opt :\n\t   | ELSE M statement_s\n\tloop_stmt : iteration M basic_loop ';'\n\titeration : WHILE M condition\n\t\t| FOR IDENTIFIER IN range\n\tbasic_loop : LOOP statement_s END LOOP\n\tblock_body : BEGIN statement_s\n\treturn_stmt : RETURN ';'\n\t   | RETURN simple_expression ';'\n\tsubprog_decl : subprog_spec ';'\n\tsubprog_spec : PROCEDURE def_id formal_part_opt\n\t   | FUNCTION def_id formal_part_opt RETURN name\n\tformal_part_opt : \n\t   | formal_part\n\tformal_part : '(' param_s ')'\n\tparam_s : param\n\t   | param_s ';' param\n\tparam : def_id_s ':' mark\n\tsubprog_spec_is_push : subprog_spec IS\n\tsubprog_body : subprog_spec_is_push decl_part block_body END ';'\n\tprocedure_call : name ';'\n\tuse_clause : USE name_s ';'\n\tname_s : name\n\t   | name_s ',' name\n\tcompilation :\n\t   | compilation comp_unit\n\t   | pragma pragma_s\n\tcomp_unit : context_spec unit pragma_s\n\t   | unit pragma_s\n\tcontext_spec : with_clause use_clause_opt\n\t   | context_spec with_clause use_clause_opt\n\t   | context_spec pragma\n\twith_clause : WITH c_name_list ';'\n\tuse_clause_opt :\n\t   | use_clause_opt use_clause\n\tunit : subprog_decl\n\t   | subprog_body\n\t"
    
_lr_action_items = {'LOOP':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,136,143,144,145,162,163,171,175,177,202,215,219,225,226,230,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-56,-82,-69,-73,-98,-57,206,-46,-47,-102,-61,-103,-22,-58,234,]),'OF':([158,211,],[184,-24,]),'/':([27,28,56,58,59,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,175,177,],[-41,-42,-81,-53,-42,-52,-51,-79,-38,-54,101,-78,-55,-72,-39,-80,-43,-82,101,-73,-46,-47,]),'TYPE':([17,20,30,31,41,43,44,45,46,47,48,50,51,52,53,54,92,115,122,141,157,174,183,],[37,-2,-108,-117,-10,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,37,-34,-92,-120,-3,-14,-118,-20,]),',':([23,26,27,28,29,36,40,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,88,89,108,110,111,112,121,140,142,143,144,145,146,147,148,160,175,177,185,186,208,224,225,],[-17,79,-41,-42,-44,-15,87,-4,-81,93,-53,-42,-52,-51,-79,-6,-38,-54,-68,-78,-55,-72,-39,-80,-121,123,-15,87,-45,-43,-16,-5,-7,-82,-69,-73,176,-50,-48,-122,-46,-47,212,-25,-49,-26,-22,]),'OR':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,162,163,175,177,215,226,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,191,-57,-46,-47,-61,-58,]),'STRING':([105,],[149,]),':':([23,27,28,36,40,65,71,108,110,112,121,154,175,177,179,180,],[-17,-41,-42,-15,86,-38,-39,-15,153,-43,-16,181,-46,-47,-116,-40,]),'RECORD':([114,223,],[155,231,]),'$end':([0,2,3,4,7,13,15,16,18,20,21,30,34,35,82,141,174,],[-123,-8,0,-1,-125,-124,-8,-134,-135,-2,-9,-108,-8,-127,-126,-3,-118,]),'+':([27,28,56,58,59,60,61,62,64,65,66,67,68,69,70,71,72,85,96,112,142,143,144,145,147,164,170,175,177,187,207,215,225,],[-41,-42,-81,-53,-42,-52,-51,-79,98,-38,-54,-68,-78,-55,-72,-39,-80,98,98,-43,98,-82,-69,-73,98,98,98,-46,-47,98,98,98,98,]),'ELSE':([124,125,126,128,131,132,134,138,166,169,172,188,204,220,222,227,232,233,],[-86,-88,-83,-85,-91,-90,-89,-87,201,-106,-119,-84,-107,-101,-94,-96,-97,-95,]),'INT':([19,39,63,93,95,97,98,99,100,101,102,103,104,105,129,130,135,159,167,173,176,181,189,190,191,192,193,194,195,196,197,198,203,212,213,214,],[66,66,66,66,66,-71,-70,66,66,-75,-76,-74,-77,66,66,-56,66,66,66,66,66,-93,-56,-59,-60,66,-66,-62,-63,-67,-64,-65,66,66,66,66,]),'WHILE':([90,124,125,126,127,128,131,132,134,138,161,169,172,188,199,201,204,206,216,218,220,221,222,227,229,233,],[130,-86,-88,-83,-56,-85,-91,-90,-89,-87,130,-106,-119,-84,-56,-56,-107,130,130,130,-101,-56,-94,-56,-56,-95,]),'ARROW':([27,59,],[-41,95,]),'FLOAT':([19,39,63,93,95,97,98,99,100,101,102,103,104,105,129,130,135,159,167,173,176,181,189,190,191,192,193,194,195,196,197,198,203,212,213,214,],[69,69,69,69,69,-71,-70,69,69,-75,-76,-74,-77,69,69,-56,69,69,69,69,69,-93,-56,-59,-60,69,-66,-62,-63,-67,-64,-65,69,69,69,69,]),'.':([27,28,29,59,65,111,112,],[-41,-42,80,-42,80,80,-43,]),'FOR':([90,124,125,126,127,128,131,132,134,138,161,169,172,188,199,201,204,206,216,218,220,221,222,227,229,233,],[133,-86,-88,-83,-56,-85,-91,-90,-89,-87,133,-106,-119,-84,-56,-56,-107,133,133,133,-101,-56,-94,-56,-56,-95,]),'PROCEDURE':([0,2,4,7,9,13,14,15,16,17,18,20,21,24,30,31,32,33,34,35,41,43,44,45,46,47,48,50,51,52,53,54,76,78,81,82,92,115,122,141,157,174,183,],[-123,-8,10,-125,-132,-124,10,-8,-134,10,-135,-2,-9,-128,-108,-117,-132,-130,-8,-127,-10,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,10,-133,-131,-129,-126,-34,-92,-120,-3,-14,-118,-20,]),'RETURN':([22,23,73,74,90,124,125,126,127,128,131,132,134,138,151,161,169,172,188,199,201,204,206,216,218,220,221,222,227,229,233,],[-111,-17,106,-112,135,-86,-88,-83,-56,-85,-91,-90,-89,-87,-113,135,-106,-119,-84,-56,-56,-107,135,135,135,-101,-56,-94,-56,-56,-95,]),'USE':([9,17,20,24,30,31,32,41,43,44,45,46,47,48,50,51,52,53,54,76,78,81,92,115,122,141,157,174,183,],[-132,42,-2,42,-108,-117,-132,-10,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,42,-133,-131,42,-34,-92,-120,-3,-14,-118,-20,]),'BEGIN':([17,20,30,31,41,43,44,45,46,47,48,49,50,51,52,53,54,92,115,122,141,157,174,183,],[-28,-2,-108,-117,-10,-12,-33,-36,-32,-13,-11,90,-30,-35,-31,-37,-29,-34,-92,-120,-3,-14,-118,-20,]),')':([27,28,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,96,107,109,112,140,142,143,144,145,146,147,148,149,175,177,178,179,180,185,186,208,224,225,],[-41,-42,-4,-81,94,-53,-42,-52,-51,-79,-6,-38,-54,-68,-78,-55,-72,-39,-80,143,151,-114,-43,-5,-7,-82,-69,-73,175,-50,-48,177,-46,-47,-115,-116,-40,211,-25,-49,-26,-22,]),'LEQ':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,198,-46,-47,]),'IN':([168,],[203,]),'FUNCTION':([0,2,4,7,9,13,14,15,16,17,18,20,21,24,30,31,32,33,34,35,41,43,44,45,46,47,48,50,51,52,53,54,76,78,81,82,92,115,122,141,157,174,183,],[-123,-8,8,-125,-132,-124,8,-8,-134,8,-135,-2,-9,-128,-108,-117,-132,-130,-8,-127,-10,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,8,-133,-131,-129,-126,-34,-92,-120,-3,-14,-118,-20,]),'LAMBDA':([83,],[113,]),'MOD':([27,28,56,58,59,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,175,177,],[-41,-42,-81,-53,-42,-52,-51,-79,-38,-54,102,-78,-55,-72,-39,-80,-43,-82,102,-73,-46,-47,]),'CHAR':([19,39,63,93,95,97,98,99,100,101,102,103,104,105,129,130,135,159,167,173,176,181,189,190,191,192,193,194,195,196,197,198,203,212,213,214,],[58,58,58,58,58,-71,-70,58,58,-75,-76,-74,-77,58,58,-56,58,58,58,58,58,-93,-56,-59,-60,58,-66,-62,-63,-67,-64,-65,58,58,58,58,]),'NEQ':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,195,-46,-47,]),'PRAGMA':([0,2,7,9,14,15,16,17,18,20,21,24,30,31,32,33,34,35,41,43,44,45,46,47,48,50,51,52,53,54,76,78,81,82,92,115,122,141,157,174,183,],[1,-8,1,-132,1,-8,-134,1,-135,-2,-9,-128,-108,-117,-132,-130,-8,1,-10,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,1,-133,-131,-129,1,-34,-92,-120,-3,-14,-118,-20,]),'IS':([12,23,25,27,28,38,65,71,74,77,84,112,150,151,175,177,],[31,-17,-111,-41,-42,31,-38,-39,-112,-109,114,-43,-110,-113,-46,-47,]),'IDENTIFIER':([1,8,10,11,17,19,20,30,31,37,39,41,42,43,44,45,46,47,48,50,51,52,53,54,63,75,79,80,86,87,90,92,93,95,97,98,99,100,101,102,103,104,105,106,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,141,152,153,155,157,159,161,167,169,172,173,174,176,181,183,184,188,189,190,191,192,193,194,195,196,197,198,199,201,203,204,206,209,212,213,214,216,218,220,221,222,227,229,233,],[6,23,23,27,23,27,-2,-108,-117,84,27,-10,27,-12,-33,-36,-32,-13,-11,-30,-35,-31,-37,23,27,23,27,27,27,23,27,-34,27,27,-71,-70,27,27,-75,-76,-74,-77,27,27,23,-92,-120,27,-86,-88,-83,-56,-85,27,-56,-91,-90,168,-89,27,-87,-3,23,27,23,-14,27,27,27,-106,-119,27,-118,27,-93,-20,27,-84,-56,-59,-60,27,-66,-62,-63,-67,-64,-65,-56,-56,27,-107,27,23,27,27,27,27,27,-101,-56,-94,-56,-56,-95,]),'THEN':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,162,163,165,175,177,215,226,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,-98,-57,199,-46,-47,-61,-58,]),'GEQ':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,196,-46,-47,]),'IF':([90,124,125,126,127,128,131,132,134,138,161,169,172,188,199,201,204,206,216,217,218,220,221,222,227,229,233,],[129,-86,-88,-83,-56,-85,-91,-90,-89,-87,129,-106,-119,-84,-56,-56,-107,129,129,228,129,-101,-56,-94,-56,-56,-95,]),'ARRAY':([86,],[120,]),'(':([5,6,19,22,23,25,27,28,39,59,63,65,71,72,88,93,95,97,98,99,100,101,102,103,104,105,112,119,120,129,130,135,137,150,159,160,167,173,175,176,177,180,181,189,190,191,192,193,194,195,196,197,198,203,212,213,214,],[19,-41,63,75,-17,75,-41,-42,63,-42,63,-38,-39,105,105,63,63,-71,-70,63,63,-75,-76,-74,-77,63,-43,105,159,63,-56,63,105,105,63,105,63,63,-46,63,-47,105,-93,-56,-59,-60,63,-66,-62,-63,-67,-64,-65,63,63,63,63,]),'DOTDOT':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,175,177,187,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,-46,-47,213,]),'STARSTAR':([27,28,56,58,59,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,175,177,],[-41,-42,-81,-53,-42,-52,-51,-79,-38,-54,104,-78,-55,-72,-39,-80,-43,-82,104,-73,-46,-47,]),';':([6,12,23,25,26,27,28,29,38,56,58,60,61,62,65,66,67,68,69,70,71,72,74,77,85,88,89,94,107,109,111,112,116,117,118,119,135,137,139,143,144,145,150,151,156,160,170,175,177,178,179,180,182,205,207,210,228,231,234,],[20,30,-17,-111,78,-41,-42,-44,30,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-112,-109,115,-121,122,141,152,-114,-45,-43,157,-18,-19,-21,169,172,174,-82,-69,-73,-110,-113,183,-122,204,-46,-47,-115,-116,-40,209,220,222,-23,233,-27,-104,]),'>':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,193,-46,-47,]),'-':([27,28,56,58,59,60,61,62,64,65,66,67,68,69,70,71,72,85,96,112,142,143,144,145,147,164,170,175,177,187,207,215,225,],[-41,-42,-81,-53,-42,-52,-51,-79,97,-38,-54,-68,-78,-55,-72,-39,-80,97,97,-43,97,-82,-69,-73,97,97,97,-46,-47,97,97,97,97,]),'*':([27,28,56,58,59,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,175,177,],[-41,-42,-81,-53,-42,-52,-51,-79,-38,-54,103,-78,-55,-72,-39,-80,-43,-82,103,-73,-46,-47,]),'=':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,194,-46,-47,]),'END':([91,124,125,126,127,128,131,132,134,138,166,169,172,188,200,204,209,220,221,222,227,229,232,233,],[139,-86,-88,-83,-105,-85,-91,-90,-89,-87,-99,-106,-119,-84,217,-107,223,-101,230,-94,-96,-100,-97,-95,]),'<':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,164,175,177,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,197,-46,-47,]),'AND':([27,28,56,58,60,61,62,65,66,67,68,69,70,71,72,112,143,144,145,162,163,175,177,215,226,],[-41,-42,-81,-53,-52,-51,-79,-38,-54,-68,-78,-55,-72,-39,-80,-43,-82,-69,-73,190,-57,-46,-47,-61,-58,]),'WITH':([0,2,4,7,9,13,14,15,16,18,20,21,24,30,32,33,34,35,76,78,81,82,122,141,174,],[-123,-8,11,-125,-132,-124,11,-8,-134,-135,-2,-9,-128,-108,-132,-130,-8,-127,-133,-131,-129,-126,-120,-3,-118,]),'ASSIGN':([23,27,28,36,65,71,112,137,175,177,],[-17,-41,-42,83,-38,-39,-43,173,-46,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'def_id':([8,10,17,54,75,87,113,152,155,209,],[22,25,36,36,108,121,108,108,108,108,]),'range_s':([159,],[185,]),'with_clause':([4,14,],[9,32,]),'block_body':([49,],[91,]),'simple_stmt':([90,161,206,216,218,],[128,128,128,128,128,]),'simple_name':([1,11,19,39,42,63,79,80,86,90,93,95,99,100,105,106,123,129,135,153,159,161,167,173,176,184,192,203,206,212,213,214,216,218,],[5,28,59,28,28,28,28,112,28,28,59,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'statement':([90,161,206,216,218,],[126,188,126,126,126,]),'condition':([129,167,],[165,202,]),'pragma_arg':([19,93,],[55,140,]),'M':([127,130,136,189,199,201,221,227,229,],[161,167,171,214,216,218,161,161,161,]),'statement_s':([90,206,216,218,],[127,221,227,229,]),'c_name_list':([11,],[26,]),'subprog_spec':([4,14,17,54,],[12,12,38,38,]),'relational':([164,],[192,]),'return_stmt':([90,161,206,216,218,],[125,125,125,125,125,]),'comp_unit':([4,],[13,]),'numeric_lit':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'literal':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'expression':([129,167,],[162,162,]),'N':([227,],[232,]),'compound_name':([11,19,39,42,63,79,86,90,93,95,99,100,105,106,123,129,135,153,159,161,167,173,176,184,192,203,206,212,213,214,216,218,],[29,65,65,65,65,111,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'param':([75,113,152,155,209,],[109,154,178,109,178,]),'term':([19,39,63,93,95,99,105,129,135,159,167,173,176,192,203,212,213,214,],[67,67,67,67,67,144,67,67,67,67,67,67,67,67,67,67,67,67,]),'decl_part':([17,],[49,]),'multiplying':([67,144,],[100,100,]),'unit':([4,14,],[15,34,]),'lambda_begin':([17,54,],[39,39,]),'type_ind':([86,184,],[117,210,]),'indexed_comp':([19,39,42,63,86,90,93,95,99,100,105,106,123,129,135,153,159,161,167,173,176,184,192,203,206,212,213,214,216,218,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'def_id_s':([17,54,75,113,152,155,209,],[40,40,110,110,110,110,110,]),'object_decl':([17,54,],[41,41,]),'iteration':([90,161,206,216,218,],[136,136,136,136,136,]),'if_stmt':([90,161,206,216,218,],[132,132,132,132,132,]),'subprog_decl':([4,14,17,54,],[16,16,43,43,]),'decl_item_or_body':([17,54,],[44,92,]),'array_type':([86,],[118,]),'name':([19,39,42,63,86,90,93,95,99,100,105,106,123,129,135,153,159,161,167,173,176,184,192,203,206,212,213,214,216,218,],[72,72,88,72,119,137,72,72,72,72,72,150,160,72,72,180,72,137,72,72,72,119,72,72,137,72,72,72,137,137,]),'record_def':([114,],[156,]),'assign_stmt':([90,161,206,216,218,],[138,138,138,138,138,]),'pragma_s':([2,15,34,],[7,35,82,]),'object_type_def':([86,],[116,]),'compound_stmt':([90,161,206,216,218,],[124,124,124,124,124,]),'else_opt':([166,],[200,]),'formal_part_opt':([22,25,],[73,77,]),'pragma':([0,7,14,17,35,54,82,],[2,21,33,46,21,46,21,]),'pragma_arg_s':([19,],[57,]),'iter_index_constraint':([120,],[158,]),'goal_symbol':([0,],[3,]),'lambda_decl':([17,54,],[47,47,]),'name_s':([42,],[89,]),'basic_loop':([171,],[205,]),'value_s':([105,],[146,]),'decl_item':([17,54,],[45,45,]),'loop_stmt':([90,161,206,216,218,],[131,131,131,131,131,]),'char_lit':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'relation':([129,167,214,],[163,163,226,]),'simple_expression':([19,39,63,93,95,105,129,135,159,167,173,176,192,203,212,213,214,],[64,85,96,64,142,147,164,170,187,164,207,147,215,187,187,225,164,]),'context_spec':([4,],[14,]),'decl':([17,54,],[50,50,]),'value':([105,176,],[148,208,]),'primary':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'parenthesized_primary':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'adding':([64,85,96,142,147,164,170,187,207,215,225,],[99,99,99,99,99,99,99,99,99,99,99,]),'body':([17,54,],[51,51,]),'formal_part':([22,25,],[74,74,]),'factor':([19,39,63,93,95,99,100,105,129,135,159,167,173,176,192,203,212,213,214,],[70,70,70,70,70,70,145,70,70,70,70,70,70,70,70,70,70,70,70,]),'mark':([153,],[179,]),'procedure_call':([90,161,206,216,218,],[134,134,134,134,134,]),'use_clause_opt':([9,32,],[24,81,]),'param_s':([75,155,],[107,182,]),'use_clause':([17,24,54,81,],[52,76,52,76,]),'compilation':([0,],[4,]),'cond_clause':([129,],[166,]),'subprog_spec_is_push':([4,14,17,54,],[17,17,17,17,]),'subprog_body':([4,14,17,54,],[18,18,53,53,]),'range':([159,203,212,],[186,219,224,]),'logical':([162,],[189,]),'record_decl':([17,54,],[48,48,]),'decl_item_or_body_s':([17,],[54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal_symbol","S'",1,None,None,None),
  ('goal_symbol -> compilation','goal_symbol',1,'p_goal_symbol','grammar.py',18),
  ('pragma -> PRAGMA IDENTIFIER ;','pragma',3,'p_pragma','grammar.py',27),
  ('pragma -> PRAGMA simple_name ( pragma_arg_s ) ;','pragma',6,'p_pragma','grammar.py',28),
  ('pragma_arg_s -> pragma_arg','pragma_arg_s',1,'p_pragma_arg_s','grammar.py',32),
  ('pragma_arg_s -> pragma_arg_s , pragma_arg','pragma_arg_s',3,'p_pragma_arg_s','grammar.py',33),
  ('pragma_arg -> simple_expression','pragma_arg',1,'p_pragma_arg','grammar.py',38),
  ('pragma_arg -> simple_name ARROW simple_expression','pragma_arg',3,'p_pragma_arg','grammar.py',39),
  ('pragma_s -> <empty>','pragma_s',0,'p_pragma_s','grammar.py',43),
  ('pragma_s -> pragma_s pragma','pragma_s',2,'p_pragma_s','grammar.py',44),
  ('decl -> object_decl','decl',1,'p_decl','grammar.py',48),
  ('decl -> record_decl','decl',1,'p_decl','grammar.py',49),
  ('decl -> subprog_decl','decl',1,'p_decl','grammar.py',50),
  ('decl -> lambda_decl','decl',1,'p_decl','grammar.py',51),
  ('object_decl -> def_id_s : object_type_def ;','object_decl',4,'p_object_decl','grammar.py',56),
  ('def_id_s -> def_id','def_id_s',1,'p_def_id_s','grammar.py',91),
  ('def_id_s -> def_id_s , def_id','def_id_s',3,'p_def_id_s','grammar.py',92),
  ('def_id -> IDENTIFIER','def_id',1,'p_def_id','grammar.py',97),
  ('object_type_def -> type_ind','object_type_def',1,'p_object_type_def','grammar.py',102),
  ('object_type_def -> array_type','object_type_def',1,'p_object_type_def','grammar.py',103),
  ('record_decl -> TYPE IDENTIFIER IS record_def ;','record_decl',5,'p_record_decl','grammar.py',108),
  ('type_ind -> name','type_ind',1,'p_type_ind','grammar.py',124),
  ('range -> simple_expression DOTDOT simple_expression','range',3,'p_range','grammar.py',129),
  ('array_type -> ARRAY iter_index_constraint OF type_ind','array_type',4,'p_array_type','grammar.py',140),
  ('iter_index_constraint -> ( range_s )','iter_index_constraint',3,'p_iter_index_constraint','grammar.py',153),
  ('range_s -> range','range_s',1,'p_range_s','grammar.py',158),
  ('range_s -> range_s , range','range_s',3,'p_range_s','grammar.py',159),
  ('record_def -> RECORD param_s ; END RECORD','record_def',5,'p_record_def','grammar.py',164),
  ('decl_part -> <empty>','decl_part',0,'p_decl_part','grammar.py',169),
  ('decl_part -> decl_item_or_body_s','decl_part',1,'p_decl_part','grammar.py',170),
  ('decl_item -> decl','decl_item',1,'p_decl_item','grammar.py',174),
  ('decl_item -> use_clause','decl_item',1,'p_decl_item','grammar.py',175),
  ('decl_item -> pragma','decl_item',1,'p_decl_item','grammar.py',176),
  ('decl_item_or_body_s -> decl_item_or_body','decl_item_or_body_s',1,'p_decl_item_or_body_s','grammar.py',181),
  ('decl_item_or_body_s -> decl_item_or_body_s decl_item_or_body','decl_item_or_body_s',2,'p_decl_item_or_body_s','grammar.py',182),
  ('decl_item_or_body -> body','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',187),
  ('decl_item_or_body -> decl_item','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',188),
  ('body -> subprog_body','body',1,'p_body','grammar.py',193),
  ('name -> compound_name','name',1,'p_name','grammar.py',199),
  ('name -> indexed_comp','name',1,'p_name','grammar.py',200),
  ('mark -> name','mark',1,'p_mark','grammar.py',208),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','grammar.py',213),
  ('compound_name -> simple_name','compound_name',1,'p_compound_name','grammar.py',218),
  ('compound_name -> compound_name . simple_name','compound_name',3,'p_compound_name','grammar.py',219),
  ('c_name_list -> compound_name','c_name_list',1,'p_c_name_list','grammar.py',227),
  ('c_name_list -> c_name_list , compound_name','c_name_list',3,'p_c_name_list','grammar.py',228),
  ('indexed_comp -> name ( value_s )','indexed_comp',4,'p_indexed_comp','grammar.py',233),
  ('indexed_comp -> name ( STRING )','indexed_comp',4,'p_indexed_comp','grammar.py',234),
  ('value_s -> value','value_s',1,'p_value_s','grammar.py',309),
  ('value_s -> value_s , value','value_s',3,'p_value_s','grammar.py',310),
  ('value -> simple_expression','value',1,'p_value','grammar.py',315),
  ('literal -> numeric_lit','literal',1,'p_literal','grammar.py',320),
  ('literal -> char_lit','literal',1,'p_literal','grammar.py',321),
  ('char_lit -> CHAR','char_lit',1,'p_char_lit','grammar.py',326),
  ('numeric_lit -> INT','numeric_lit',1,'p_numeric_lit1','grammar.py',331),
  ('numeric_lit -> FLOAT','numeric_lit',1,'p_numeric_lit2','grammar.py',336),
  ('M -> <empty>','M',0,'p_M','grammar.py',341),
  ('expression -> relation','expression',1,'p_expression','grammar.py',346),
  ('expression -> expression logical M relation','expression',4,'p_expression','grammar.py',347),
  ('logical -> AND','logical',1,'p_logical','grammar.py',369),
  ('logical -> OR','logical',1,'p_logical','grammar.py',370),
  ('relation -> simple_expression relational simple_expression','relation',3,'p_relation','grammar.py',375),
  ('relational -> =','relational',1,'p_relational','grammar.py',390),
  ('relational -> NEQ','relational',1,'p_relational','grammar.py',391),
  ('relational -> <','relational',1,'p_relational','grammar.py',392),
  ('relational -> LEQ','relational',1,'p_relational','grammar.py',393),
  ('relational -> >','relational',1,'p_relational','grammar.py',394),
  ('relational -> GEQ','relational',1,'p_relational','grammar.py',395),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','grammar.py',400),
  ('simple_expression -> simple_expression adding term','simple_expression',3,'p_simple_expression','grammar.py',401),
  ('adding -> +','adding',1,'p_adding','grammar.py',448),
  ('adding -> -','adding',1,'p_adding','grammar.py',449),
  ('term -> factor','term',1,'p_term','grammar.py',454),
  ('term -> term multiplying factor','term',3,'p_term','grammar.py',455),
  ('multiplying -> *','multiplying',1,'p_multiplying','grammar.py',491),
  ('multiplying -> /','multiplying',1,'p_multiplying','grammar.py',492),
  ('multiplying -> MOD','multiplying',1,'p_multiplying','grammar.py',493),
  ('multiplying -> STARSTAR','multiplying',1,'p_multiplying','grammar.py',494),
  ('factor -> primary','factor',1,'p_factor','grammar.py',500),
  ('primary -> literal','primary',1,'p_primary','grammar.py',505),
  ('primary -> name','primary',1,'p_primary','grammar.py',506),
  ('primary -> parenthesized_primary','primary',1,'p_primary','grammar.py',507),
  ('parenthesized_primary -> ( simple_expression )','parenthesized_primary',3,'p_parenthesized_primary','grammar.py',512),
  ('statement_s -> statement','statement_s',1,'p_statement_s','grammar.py',517),
  ('statement_s -> statement_s M statement','statement_s',3,'p_statement_s','grammar.py',518),
  ('statement -> simple_stmt','statement',1,'p_statement','grammar.py',527),
  ('statement -> compound_stmt','statement',1,'p_statement','grammar.py',528),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',534),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',535),
  ('simple_stmt -> procedure_call','simple_stmt',1,'p_simple_stmt','grammar.py',536),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',541),
  ('compound_stmt -> loop_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',542),
  ('lambda_decl -> lambda_begin simple_expression ;','lambda_decl',3,'p_lambda_decl','grammar.py',547),
  ('lambda_begin -> def_id ASSIGN LAMBDA param :','lambda_begin',5,'p_lambda_begin','grammar.py',555),
  ('assign_stmt -> name ASSIGN simple_expression ;','assign_stmt',4,'p_assign_stmt','grammar.py',567),
  ('if_stmt -> IF cond_clause else_opt END IF ;','if_stmt',6,'p_if_stmt','grammar.py',586),
  ('N -> <empty>','N',0,'p_N','grammar.py',594),
  ('cond_clause -> condition THEN M statement_s N','cond_clause',5,'p_cond_clause','grammar.py',601),
  ('condition -> expression','condition',1,'p_condition','grammar.py',608),
  ('else_opt -> <empty>','else_opt',0,'p_else_opt','grammar.py',619),
  ('else_opt -> ELSE M statement_s','else_opt',3,'p_else_opt','grammar.py',620),
  ('loop_stmt -> iteration M basic_loop ;','loop_stmt',4,'p_loop_stmt','grammar.py',630),
  ('iteration -> WHILE M condition','iteration',3,'p_iteration','grammar.py',639),
  ('iteration -> FOR IDENTIFIER IN range','iteration',4,'p_iteration','grammar.py',640),
  ('basic_loop -> LOOP statement_s END LOOP','basic_loop',4,'p_basic_loop','grammar.py',658),
  ('block_body -> BEGIN statement_s','block_body',2,'p_block_body','grammar.py',663),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt','grammar.py',668),
  ('return_stmt -> RETURN simple_expression ;','return_stmt',3,'p_return_stmt','grammar.py',669),
  ('subprog_decl -> subprog_spec ;','subprog_decl',2,'p_subprog_decl','grammar.py',678),
  ('subprog_spec -> PROCEDURE def_id formal_part_opt','subprog_spec',3,'p_subprog_spec','grammar.py',683),
  ('subprog_spec -> FUNCTION def_id formal_part_opt RETURN name','subprog_spec',5,'p_subprog_spec','grammar.py',684),
  ('formal_part_opt -> <empty>','formal_part_opt',0,'p_formal_part_opt','grammar.py',702),
  ('formal_part_opt -> formal_part','formal_part_opt',1,'p_formal_part_opt','grammar.py',703),
  ('formal_part -> ( param_s )','formal_part',3,'p_formal_part','grammar.py',708),
  ('param_s -> param','param_s',1,'p_param_s','grammar.py',713),
  ('param_s -> param_s ; param','param_s',3,'p_param_s','grammar.py',714),
  ('param -> def_id_s : mark','param',3,'p_param','grammar.py',722),
  ('subprog_spec_is_push -> subprog_spec IS','subprog_spec_is_push',2,'p_subprog_spec_is_push','grammar.py',736),
  ('subprog_body -> subprog_spec_is_push decl_part block_body END ;','subprog_body',5,'p_subprog_body','grammar.py',746),
  ('procedure_call -> name ;','procedure_call',2,'p_procedure_call','grammar.py',754),
  ('use_clause -> USE name_s ;','use_clause',3,'p_use_clause','grammar.py',763),
  ('name_s -> name','name_s',1,'p_name_s','grammar.py',768),
  ('name_s -> name_s , name','name_s',3,'p_name_s','grammar.py',769),
  ('compilation -> <empty>','compilation',0,'p_compilation','grammar.py',774),
  ('compilation -> compilation comp_unit','compilation',2,'p_compilation','grammar.py',775),
  ('compilation -> pragma pragma_s','compilation',2,'p_compilation','grammar.py',776),
  ('comp_unit -> context_spec unit pragma_s','comp_unit',3,'p_comp_unit','grammar.py',780),
  ('comp_unit -> unit pragma_s','comp_unit',2,'p_comp_unit','grammar.py',781),
  ('context_spec -> with_clause use_clause_opt','context_spec',2,'p_context_spec','grammar.py',785),
  ('context_spec -> context_spec with_clause use_clause_opt','context_spec',3,'p_context_spec','grammar.py',786),
  ('context_spec -> context_spec pragma','context_spec',2,'p_context_spec','grammar.py',787),
  ('with_clause -> WITH c_name_list ;','with_clause',3,'p_with_clause','grammar.py',791),
  ('use_clause_opt -> <empty>','use_clause_opt',0,'p_use_clause_opt','grammar.py',795),
  ('use_clause_opt -> use_clause_opt use_clause','use_clause_opt',2,'p_use_clause_opt','grammar.py',796),
  ('unit -> subprog_decl','unit',1,'p_unit','grammar.py',800),
  ('unit -> subprog_body','unit',1,'p_unit','grammar.py',801),
]
