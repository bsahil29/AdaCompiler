// Abstract Syntax Tree
digraph {
	"0x7f7f2c4df048" [label=START]
	"0x7f7f2c35bb70" [label=compilation]
	"0x7f7f2c4df048" -> "0x7f7f2c35bb70"
	"0x7f7f2c35b860" [label=compilation]
	"0x7f7f2c35bb70" -> "0x7f7f2c35b860"
	"0x7f7f2c35ba58" [label=comp_unit]
	"0x7f7f2c35bb70" -> "0x7f7f2c35ba58"
	"0x7f7f2c35b9b0" [label=context_spec]
	"0x7f7f2c35ba58" -> "0x7f7f2c35b9b0"
	"0x7f7f2c90b128" [label=with]
	"0x7f7f2c35b9b0" -> "0x7f7f2c90b128"
	"0x7f7f2de36b70" [label="Ada.Text_IO, Ada.Integer_Text_IO"]
	"0x7f7f2c90b128" -> "0x7f7f2de36b70"
	"0x7f7f2c35bfd0" [label=unit]
	"0x7f7f2c35ba58" -> "0x7f7f2c35bfd0"
	"0x7f7f2c35bba8" [label=IS]
	"0x7f7f2c35bfd0" -> "0x7f7f2c35bba8"
	"0x7f7f2c35bbe0" [label=procedure]
	"0x7f7f2c35bba8" -> "0x7f7f2c35bbe0"
	"0x7f7f2c35ba20" [label=Hello]
	"0x7f7f2c35bbe0" -> "0x7f7f2c35ba20"
	"0x7f7f2c35bdd8" [label=":"]
	"0x7f7f2c35bfd0" -> "0x7f7f2c35bdd8"
	"0x7f7f2c35b8d0" [label=a]
	"0x7f7f2c35bdd8" -> "0x7f7f2c35b8d0"
	"0x7f7f2c35bc88" [label=Integer]
	"0x7f7f2c35bdd8" -> "0x7f7f2c35bc88"
	"0x7f7f2c35be48" [label=begin]
	"0x7f7f2c35bfd0" -> "0x7f7f2c35be48"
	"0x7f7f2c35be80" [label=":="]
	"0x7f7f2c35be48" -> "0x7f7f2c35be80"
	"0x7f7f2c35bda0" [label=a]
	"0x7f7f2c35be80" -> "0x7f7f2c35bda0"
	"0x7f7f2c35bc50" [label=5]
	"0x7f7f2c35be80" -> "0x7f7f2c35bc50"
	"0x7f7f2c35bf60" [label=Hello]
	"0x7f7f2c35bfd0" -> "0x7f7f2c35bf60"
	"0x7f7f2c35bd68" [label=pragma_s]
	"0x7f7f2c35ba58" -> "0x7f7f2c35bd68"
}
