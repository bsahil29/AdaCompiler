
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "goal_symbolABORT ABS ABSTRACT ACCEPT ACCESS ALIASED ALL AND ARRAY ARROW ASSIGN AT BEGIN BODY BOX CASE CHAR CONSTANT DECLARE DELAY DELTA DIGITS DO DOTDOT ELSE ELSIF END ENTRY EXCEPTION EXIT FLOAT FOR FUNCTION GENERIC GEQ IDENTIFIER IF IN INT IS LAMBDA LEQ LIMITED LL LOOP MOD NEQ NEW NOT NuLL OF OR OTHERS OUT PACKAGE PRAGMA PRIVATE PROCEDURE PROTECTED RAISE RANGE RECORD REM RENAMES REQUEUE RETURN REVERSE RR SELECT SEPARATE STARSTAR STRING SUBTYPE TAGGED TASK TERMINATE THEN TICK TYPE UNTIL USE WHEN WHILE WITH XORgoal_symbol : compilation\n\tpragma : PRAGMA IDENTIFIER ';'\n\t   | PRAGMA simple_name '(' pragma_arg_s ')' ';'\n\tpragma_arg_s : pragma_arg\n\t   | pragma_arg_s ',' pragma_arg\n\tpragma_arg : simple_expression\n\t   | simple_name ARROW simple_expression\n\tpragma_s :\n\t   | pragma_s pragma\n\tdecl : object_decl\n\t   | type_decl\n\t   | subtype_decl\n\t   | subprog_decl\n\t   | lambda_stmt\n\tobject_decl : def_id_s ':' object_subtype_def ';'   \n\tdef_id_s : def_id\n\t   | def_id_s ',' def_id\n\tdef_id  : IDENTIFIER\n\tobject_subtype_def : subtype_ind\n\t   | array_type\n\ttype_decl : TYPE IDENTIFIER discrim_part_opt type_completion ';'\n\tdiscrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\ttype_completion :\n\t   | IS type_def\n\ttype_def : integer_type\n\t   | array_type\n\t   | record_type\n\tsubtype_decl : SUBTYPE IDENTIFIER IS subtype_ind ';'\n\tsubtype_ind : name\n\trange_constraint : RANGE range\n\trange : simple_expression DOTDOT simple_expression\n\tinteger_type : range_spec\n\t   | MOD expression\n\trange_spec : range_constraint\n\tarray_type : constr_array_type\n\tconstr_array_type : ARRAY iter_index_constraint OF component_subtype_def\n\tcomponent_subtype_def : subtype_ind\n\titer_index_constraint : '(' range_s ')'\n\trange_s : range\n\t   | range_s ',' range\n\trecord_type : record_def\n\trecord_def : RECORD pragma_s comp_list END RECORD\n\t   | NuLL RECORD\n\tcomp_list : NuLL ';' pragma_s\n\tdiscrim_part : '(' discrim_spec_s ')'\n\tdiscrim_spec_s : discrim_spec\n\t   | discrim_spec_s ';' discrim_spec\n\tdiscrim_spec : def_id_s ':' mark\n\tdecl_part :\n\t   | decl_item_or_body_s\n\tdecl_item : decl\n\t   | use_clause\n\t   | pragma\n\tdecl_item_or_body_s : decl_item_or_body\n\t   | decl_item_or_body_s decl_item_or_body\n\tdecl_item_or_body : body\n\t   | decl_item\n\tbody : subprog_body\n\tname : simple_name\n\t   | indexed_comp\n\t   | selected_comp\n\t   | operator_symbol\n\tmark : simple_name\n\t   | mark '.' simple_name\n\tsimple_name : IDENTIFIER\n\tcompound_name : simple_name\n\t   | compound_name '.' simple_name\n\tc_name_list : compound_name\n\t    | c_name_list ',' compound_name\n\tused_char : CHAR\n\toperator_symbol : STRING\n\tindexed_comp : name '(' value_s ')'\n\tvalue_s : value\n\t   | value_s ',' value\n\tvalue : simple_expression\n\tselected_comp : name '.' simple_name\n\t   | name '.' used_char\n\t   | name '.' operator_symbol\n\t   | name '.' ALL\n\tliteral : numeric_lit\n\tnumeric_lit : INT\n\tnumeric_lit : FLOAT\n\t M : \n\texpression : relation\n\t   | expression logical M relation\n\tlogical : AND\n\t   | OR\n\trelation : simple_expression relational simple_expression\n\trelational : '='\n\t   | NEQ\n\t   | '<'\n\t   | LEQ\n\t   | '>'\n\t   | GEQ\n\tsimple_expression : term\n\t   | simple_expression adding term\n\tadding  : '+'\n\t   | '-'\n\t   | '&'\n\tterm : factor\n\t   | term multiplying factor\n\tmultiplying : '*'\n\t   | '/'\n\t   | MOD\n\t   | STARSTAR\n\tfactor : primary\n\t\t\t| NOT primary\n\tprimary : literal\n\t   | name\n\t   | parenthesized_primary\n\tparenthesized_primary : '(' simple_expression ')'\n\tstatement_s : statement\n\t   | statement_s M statement\n\tstatement : simple_stmt\n\t\t| compound_stmt\n\tsimple_stmt : assign_stmt\n\t   | return_stmt\n\t   | procedure_call\n\tcompound_stmt : if_stmt\n\t   | loop_stmt\n\t   | block\n\tlambda_stmt : lambda_begin simple_expression ';'\n\tlambda_begin : def_id ASSIGN LAMBDA param ':'\n\tassign_stmt : name ASSIGN simple_expression ';'\n\tif_stmt : IF cond_clause else_opt END IF ';'\n\tN :\n\tcond_clause : condition THEN M statement_s N\n\tcondition : expression\n\telse_opt :\n\t   | ELSE M statement_s\n\tloop_stmt : iteration M basic_loop ';'\n\titeration : WHILE M condition\n\tbasic_loop : LOOP statement_s END LOOP\n\tblock : block_decl block_body END ';'\n\tblock_decl :\n\t   | DECLARE decl_part\n\tblock_body : BEGIN statement_s\n\treturn_stmt : RETURN ';'\n\t   | RETURN simple_expression ';'\n\tsubprog_decl : subprog_spec ';'\n\tsubprog_spec : PROCEDURE def_id formal_part_opt\n\t   | FUNCTION def_id formal_part_opt RETURN name\n\tformal_part_opt : \n\t   | formal_part\n\tformal_part : '(' param_s ')'\n\tparam_s : param\n\t   | param_s ';' param\n\tparam : def_id_s ':' mark\n\tsubprog_spec_is_push : subprog_spec IS\n\tsubprog_body : subprog_spec_is_push decl_part block_body END ';'\n\tprocedure_call : name ';'\n\tuse_clause : USE name_s ';'\n\t   | USE TYPE name_s ';'\n\tname_s : name\n\t   | name_s ',' name\n\tcompilation :\n\t   | compilation comp_unit\n\t   | pragma pragma_s\n\tcomp_unit : context_spec unit pragma_s\n\t   | unit pragma_s\n\tcontext_spec : with_clause use_clause_opt\n\t   | context_spec with_clause use_clause_opt\n\t   | context_spec pragma\n\twith_clause : WITH c_name_list ';'\n\tuse_clause_opt :\n\t   | use_clause_opt use_clause\n\tunit : subprog_decl\n\t   | subprog_body\n\t"
    
_lr_action_items = {'+':([53,57,59,60,61,62,63,64,65,67,68,69,71,72,74,75,84,85,100,114,156,157,158,159,160,161,162,165,166,169,183,189,203,210,228,262,273,],[-67,-61,-63,-84,-111,-102,103,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,103,-109,103,103,-78,-81,-72,-79,-80,103,-98,-103,-113,103,103,-74,103,103,103,103,]),'NOT':([19,34,73,99,102,103,104,105,106,107,108,109,110,111,112,132,136,141,174,186,187,202,217,218,219,220,221,222,223,224,225,226,232,240,248,253,255,261,],[58,58,58,58,58,-99,-100,58,-101,-104,-106,58,-105,-107,58,58,-85,58,58,58,58,58,-85,-88,-89,-92,-93,-95,-96,-91,-94,58,58,58,-125,58,58,58,]),'STRING':([19,34,50,58,73,83,87,92,99,101,102,103,104,105,106,107,108,109,110,111,112,130,131,132,133,134,136,137,139,140,141,142,143,144,145,151,155,174,179,185,186,187,190,202,207,211,214,215,217,218,219,220,221,222,223,224,225,226,227,230,232,240,248,253,255,256,257,258,259,261,263,264,275,278,282,],[72,72,72,72,72,72,72,72,72,72,72,-99,-100,72,-101,-104,-106,72,-105,-107,72,-85,-117,72,-116,-123,-85,-119,-120,-122,72,-121,-114,-118,72,72,72,72,72,-153,72,72,-140,72,72,72,-115,-85,-85,-88,-89,-92,-93,-95,-96,-91,-94,72,-85,-141,72,72,-125,72,72,-85,-133,-136,72,72,72,-126,-85,-85,-127,]),'ELSE':([131,133,134,137,139,140,142,143,144,180,185,190,214,230,257,258,264,278,282,283,],[-117,-116,-123,-119,-120,-122,-121,-114,-118,215,-153,-140,-115,-141,-133,-136,-126,-128,-127,-129,]),'&':([53,57,59,60,61,62,63,64,65,67,68,69,71,72,74,75,84,85,100,114,156,157,158,159,160,161,162,165,166,169,183,189,203,210,228,262,273,],[-67,-61,-63,-84,-111,-102,106,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,106,-109,106,106,-78,-81,-72,-79,-80,106,-98,-103,-113,106,106,-74,106,106,106,106,]),'IF':([87,130,131,133,134,137,139,140,142,143,144,179,185,190,211,214,215,227,230,256,257,258,259,260,263,264,275,278,282,],[132,-85,-117,-116,-123,-119,-120,-122,-121,-114,-118,132,-153,-140,132,-115,-85,-85,-141,-85,-133,-136,132,276,132,-126,-85,-85,-127,]),'>':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,222,-74,]),'DOTDOT':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,203,210,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,-74,255,]),'$end':([0,2,3,4,9,12,14,16,18,20,21,24,26,56,78,168,176,],[-158,0,-1,-8,-8,-170,-169,-159,-160,-2,-142,-162,-8,-9,-161,-3,-152,]),'AND':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,181,182,203,262,268,277,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,218,-86,-74,-90,218,-87,]),'FUNCTION':([0,3,4,8,9,10,12,13,14,16,18,20,21,22,23,24,25,26,27,32,33,35,36,37,39,40,41,42,43,44,45,46,56,76,77,78,88,97,126,138,152,168,175,176,199,231,243,],[-158,17,-8,-167,-8,17,-170,17,-169,-159,-160,-2,-142,-151,-163,-162,-167,-8,-165,-59,-14,-55,-54,-56,-58,-53,-10,17,-11,-13,-60,-12,-9,-168,-164,-161,-57,-166,-124,17,-154,-3,-15,-152,-155,-30,-21,]),'PROCEDURE':([0,3,4,8,9,10,12,13,14,16,18,20,21,22,23,24,25,26,27,32,33,35,36,37,39,40,41,42,43,44,45,46,56,76,77,78,88,97,126,138,152,168,175,176,199,231,243,],[-158,11,-8,-167,-8,11,-170,11,-169,-159,-160,-2,-142,-151,-163,-162,-167,-8,-165,-59,-14,-55,-54,-56,-58,-53,-10,11,-11,-13,-60,-12,-9,-168,-164,-161,-57,-166,-124,11,-154,-3,-15,-152,-155,-30,-21,]),'IDENTIFIER':([1,11,13,15,17,19,20,21,22,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,50,58,73,81,82,83,87,88,92,95,96,99,101,102,103,104,105,106,107,108,109,110,111,112,126,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,148,149,151,152,155,168,170,172,174,175,176,179,185,186,187,190,199,202,207,211,214,215,217,218,219,220,221,222,223,224,225,226,227,230,231,232,240,243,245,246,248,250,253,255,256,257,258,259,261,263,264,275,278,282,],[6,29,29,53,29,53,-2,-142,-151,-59,-14,53,-55,-54,-56,-58,-53,-10,29,-11,-13,-60,-12,89,90,53,53,53,29,29,53,53,-57,53,53,53,53,53,53,-99,-100,53,-101,-104,-106,53,-105,-107,53,-124,-85,-117,53,-116,-123,-85,-119,29,-120,-122,53,-121,-114,-118,53,29,29,53,-154,53,-3,29,53,53,-15,-152,53,-153,53,53,-140,-155,53,53,53,-115,-85,-85,-88,-89,-92,-93,-95,-96,-91,-94,53,-85,-141,-30,53,53,-21,53,29,-125,53,53,53,-85,-133,-136,53,53,53,-126,-85,-85,-127,]),'ALL':([101,],[158,]),'LEQ':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,225,-74,]),'PRAGMA':([0,4,8,9,10,12,13,14,18,20,21,22,23,24,25,26,27,32,33,35,36,37,39,40,41,42,43,44,45,46,56,76,77,78,88,97,126,138,152,168,175,176,199,231,235,243,266,284,286,],[1,-8,-167,-8,1,-170,1,-169,1,-2,-142,-151,-163,1,-167,-8,-165,-59,-14,-55,-54,-56,-58,-53,-10,1,-11,-13,-60,-12,-9,-168,-164,1,-57,-166,-124,1,-154,-3,-15,-152,-155,-30,-8,-21,1,-8,1,]),'.':([51,52,53,57,59,61,71,72,74,84,93,120,135,153,154,157,158,159,160,161,200,201,203,205,206,269,271,],[-68,95,-67,-61,-63,101,-62,-73,-64,-61,101,101,101,-69,95,-78,-81,-72,-79,-80,101,101,-74,-65,250,250,-66,]),';':([6,7,28,29,30,51,52,53,54,59,60,61,62,64,65,67,68,69,71,72,74,75,79,80,84,85,90,93,94,100,113,116,118,120,121,123,124,125,127,135,141,146,147,150,153,154,157,158,159,160,161,165,166,169,171,182,189,191,193,195,197,200,201,203,204,205,206,212,213,228,233,234,236,238,239,241,242,244,247,251,252,262,265,267,268,269,270,271,273,276,277,279,281,287,],[20,21,-145,-18,21,-68,-70,-67,97,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-146,-143,-61,126,-22,-156,152,-109,168,170,-148,-31,-19,-37,175,-20,176,185,190,-25,-23,199,-69,-71,-78,-81,-72,-79,-80,-98,-103,-113,-147,-86,230,231,243,-48,246,-157,-144,-74,-149,-65,-150,257,258,264,-36,-26,-27,-29,-34,-43,-28,-24,-47,-38,-39,-90,-32,-45,-35,-50,-49,-66,-33,282,-87,284,-135,-44,]),'ARROW':([53,57,],[-67,99,]),'THEN':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,181,182,184,203,262,277,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,-130,-86,227,-74,-90,-87,]),'*':([53,57,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,203,],[-67,-61,-63,-84,-111,-102,-110,-82,107,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,107,-103,-113,-74,]),'<':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,221,-74,]),'RETURN':([29,55,79,87,98,130,131,133,134,137,139,140,142,143,144,171,179,185,190,211,214,215,227,230,256,257,258,259,263,264,275,278,282,],[-18,-145,-146,141,155,-85,-117,-116,-123,-119,-120,-122,-121,-114,-118,-147,141,-153,-140,141,-115,-85,-85,-141,-85,-133,-136,141,141,-126,-85,-85,-127,]),'OR':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,181,182,203,262,268,277,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,219,-86,-74,-90,219,-87,]),')':([53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,84,100,114,116,118,156,157,158,159,160,161,162,163,164,165,166,167,169,194,195,197,203,204,205,206,208,209,249,269,270,271,272,273,],[-67,-61,-63,-84,-111,-102,-6,-110,-82,-4,-97,-108,-112,113,-62,-73,-64,-83,-61,-109,169,171,-148,-7,-78,-81,-72,-79,-80,-77,203,-75,-98,-103,-5,-113,244,-48,247,-74,-149,-65,-150,-41,254,-76,-50,-49,-66,-42,-33,]),'=':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,224,-74,]),'LOOP':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,128,157,158,159,160,161,165,166,169,177,181,182,203,229,262,274,277,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-85,-78,-81,-72,-79,-80,-98,-103,-113,211,-130,-86,-74,-134,-90,281,-87,]),',':([29,31,49,51,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,84,93,94,100,115,117,119,150,153,154,156,157,158,159,160,161,162,163,164,165,166,167,169,196,200,203,208,209,249,272,273,],[-18,82,-16,-68,-70,-67,96,-61,-63,-84,-111,-102,-6,-110,-82,-4,-97,-108,-112,112,-62,-73,-64,-83,-61,-156,151,-109,-16,82,-17,151,-69,-71,-7,-78,-81,-72,-79,-80,-77,202,-75,-98,-103,-5,-113,82,-157,-74,-41,253,-76,-42,-33,]),'DECLARE':([87,130,131,133,134,137,139,140,142,143,144,179,185,190,211,214,215,227,230,256,257,258,259,263,264,275,278,282,],[138,-85,-117,-116,-123,-119,-120,-122,-121,-114,-118,138,-153,-140,138,-115,-85,-85,-141,-85,-133,-136,138,138,-126,-85,-85,-127,]),'ASSIGN':([29,49,53,59,71,72,74,84,135,157,158,159,160,161,203,],[-18,91,-67,-63,-62,-73,-64,-61,186,-78,-81,-72,-79,-80,-74,]),'RANGE':([192,],[232,]),'FLOAT':([19,34,58,73,99,102,103,104,105,106,107,108,109,110,111,112,132,136,141,174,186,187,202,217,218,219,220,221,222,223,224,225,226,232,240,248,253,255,261,],[60,60,60,60,60,60,-99,-100,60,-101,-104,-106,60,-105,-107,60,60,-85,60,60,60,60,60,-85,-88,-89,-92,-93,-95,-96,-91,-94,60,60,60,-125,60,60,60,]),':':([29,31,49,53,115,117,119,196,198,205,206,271,],[-18,83,-16,-67,-16,172,-17,245,248,-65,-150,-66,]),'NuLL':([20,56,168,192,235,266,],[-2,-9,-3,237,-8,279,]),'NEQ':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,220,-74,]),'RECORD':([192,237,285,],[235,267,287,]),'BOX':([148,],[194,]),'GEQ':([53,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,183,203,],[-67,-63,-84,-111,-102,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,-98,-103,-113,223,-74,]),'-':([53,57,59,60,61,62,63,64,65,67,68,69,71,72,74,75,84,85,100,114,156,157,158,159,160,161,162,165,166,169,183,189,203,210,228,262,273,],[-67,-61,-63,-84,-111,-102,104,-110,-82,-97,-108,-112,-62,-73,-64,-83,-61,104,-109,104,104,-78,-81,-72,-79,-80,104,-98,-103,-113,104,104,-74,104,104,104,104,]),'WHILE':([87,130,131,133,134,137,139,140,142,143,144,179,185,190,211,214,215,227,230,256,257,258,259,263,264,275,278,282,],[136,-85,-117,-116,-123,-119,-120,-122,-121,-114,-118,136,-153,-140,136,-115,-85,-85,-141,-85,-133,-136,136,136,-126,-85,-85,-127,]),'BEGIN':([13,20,21,22,32,33,35,36,37,38,39,40,41,42,43,44,45,46,87,88,126,129,130,131,133,134,137,138,139,140,142,143,144,152,168,175,176,179,185,188,190,199,211,214,215,227,230,231,243,256,257,258,259,263,264,275,278,282,],[-51,-2,-142,-151,-59,-14,-55,-54,-56,87,-58,-53,-10,-52,-11,-13,-60,-12,-137,-57,-124,87,-85,-117,-116,-123,-119,-51,-120,-122,-121,-114,-118,-154,-3,-15,-152,-137,-153,-138,-140,-155,-137,-115,-85,-85,-141,-30,-21,-85,-133,-136,-137,-137,-126,-85,-85,-127,]),'STARSTAR':([53,57,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,203,],[-67,-61,-63,-84,-111,-102,-110,-82,111,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,111,-103,-113,-74,]),'(':([5,6,19,28,29,34,53,55,57,58,59,61,71,72,73,74,84,90,93,99,102,103,104,105,106,107,108,109,110,111,112,120,122,132,135,136,141,157,158,159,160,161,174,186,187,200,201,202,203,217,218,219,220,221,222,223,224,225,226,232,240,248,253,255,261,],[19,-67,73,81,-18,73,-67,81,-61,73,-63,102,-62,-73,73,-64,-61,148,102,73,73,-99,-100,73,-101,-104,-106,73,-105,-107,73,102,174,73,102,-85,73,-78,-81,-72,-79,-80,73,73,73,102,102,73,-74,-85,-88,-89,-92,-93,-95,-96,-91,-94,73,73,73,-125,73,73,73,]),'OF':([173,254,],[207,-40,]),'SUBTYPE':([13,20,21,22,32,33,35,36,37,39,40,41,42,43,44,45,46,88,126,138,152,168,175,176,199,231,243,],[47,-2,-142,-151,-59,-14,-55,-54,-56,-58,-53,-10,47,-11,-13,-60,-12,-57,-124,47,-154,-3,-15,-152,-155,-30,-21,]),'MOD':([53,57,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,192,203,],[-67,-61,-63,-84,-111,-102,-110,-82,108,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,108,-103,-113,240,-74,]),'IS':([7,28,29,30,53,59,71,72,74,79,80,84,89,90,146,147,157,158,159,160,161,171,201,203,244,247,],[22,-145,-18,22,-67,-63,-62,-73,-64,-146,-143,-61,145,-22,192,-23,-78,-81,-72,-79,-80,-147,-144,-74,-24,-47,]),'TYPE':([13,20,21,22,32,33,35,36,37,39,40,41,42,43,44,45,46,50,88,126,138,152,168,175,176,199,231,243,],[48,-2,-142,-151,-59,-14,-55,-54,-56,-58,-53,-10,48,-11,-13,-60,-12,92,-57,-124,48,-154,-3,-15,-152,-155,-30,-21,]),'WITH':([0,3,4,8,9,10,12,14,16,18,20,21,23,24,25,26,27,56,76,77,78,97,152,168,176,199,],[-158,15,-8,-167,-8,15,-170,-169,-159,-160,-2,-142,-163,-162,-167,-8,-165,-9,-168,-164,-161,-166,-154,-3,-152,-155,]),'CHAR':([101,],[159,]),'ARRAY':([83,192,],[122,122,]),'INT':([19,34,58,73,99,102,103,104,105,106,107,108,109,110,111,112,132,136,141,174,186,187,202,217,218,219,220,221,222,223,224,225,226,232,240,248,253,255,261,],[75,75,75,75,75,75,-99,-100,75,-101,-104,-106,75,-105,-107,75,75,-85,75,75,75,75,75,-85,-88,-89,-92,-93,-95,-96,-91,-94,75,75,75,-125,75,75,75,]),'USE':([8,13,20,21,22,23,25,32,33,35,36,37,39,40,41,42,43,44,45,46,76,77,88,97,126,138,152,168,175,176,199,231,243,],[-167,50,-2,-142,-151,50,-167,-59,-14,-55,-54,-56,-58,-53,-10,50,-11,-13,-60,-12,-168,50,-57,-166,-124,50,-154,-3,-15,-152,-155,-30,-21,]),'/':([53,57,59,60,61,62,64,65,67,68,69,71,72,74,75,84,100,157,158,159,160,161,165,166,169,203,],[-67,-61,-63,-84,-111,-102,-110,-82,110,-108,-112,-62,-73,-64,-83,-61,-109,-78,-81,-72,-79,-80,110,-103,-113,-74,]),'END':([20,56,86,130,131,133,134,137,139,140,142,143,144,168,178,180,185,190,214,216,230,256,257,258,264,275,278,280,282,283,284,286,],[-2,-9,127,-139,-117,-116,-123,-119,-120,-122,-121,-114,-118,-3,213,-131,-153,-140,-115,260,-141,274,-133,-136,-126,-132,-128,285,-127,-129,-8,-46,]),'LAMBDA':([91,],[149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'subprog_spec':([3,10,13,42,138,],[7,7,30,30,30,]),'if_stmt':([87,179,211,259,263,],[142,142,142,142,142,]),'range_constraint':([192,],[233,]),'compound_stmt':([87,179,211,259,263,],[131,131,131,131,131,]),'with_clause':([3,10,],[8,25,]),'block':([87,179,211,259,263,],[134,134,134,134,134,]),'c_name_list':([15,],[54,]),'simple_expression':([19,34,73,99,102,112,132,141,174,186,187,202,226,232,240,253,255,261,],[63,85,114,156,162,63,183,189,210,228,183,162,262,210,183,210,273,183,]),'unit':([3,10,],[9,26,]),'M':([128,130,136,215,217,227,256,275,278,],[177,179,187,259,261,263,179,179,179,]),'discrim_spec_s':([148,],[197,]),'range_spec':([192,],[239,]),'pragma_arg':([19,112,],[66,167,]),'goal_symbol':([0,],[2,]),'def_id_s':([13,42,81,138,148,149,170,246,],[31,31,117,31,196,117,117,196,]),'component_subtype_def':([207,],[251,]),'parenthesized_primary':([19,34,58,73,99,102,105,109,112,132,141,174,186,187,202,226,232,240,253,255,261,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'lambda_stmt':([13,42,138,],[33,33,33,]),'decl_part':([13,138,],[38,188,]),'condition':([132,187,],[184,229,]),'body':([13,42,138,],[39,39,39,]),'decl':([13,42,138,],[40,40,40,]),'array_type':([83,192,],[125,242,]),'object_decl':([13,42,138,],[41,41,41,]),'N':([278,],[283,]),'block_decl':([87,179,211,259,263,],[129,129,129,129,129,]),'discrim_part_opt':([90,],[146,]),'cond_clause':([132,],[180,]),'factor':([19,34,73,99,102,105,109,112,132,141,174,186,187,202,226,232,240,253,255,261,],[62,62,62,62,62,62,166,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'selected_comp':([19,34,50,58,73,83,87,92,99,102,105,109,112,132,141,145,151,155,174,179,186,187,202,207,211,226,232,240,253,255,259,261,263,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'decl_item_or_body_s':([13,138,],[42,42,]),'simple_stmt':([87,179,211,259,263,],[133,133,133,133,133,]),'use_clause_opt':([8,25,],[23,77,]),'indexed_comp':([19,34,50,58,73,83,87,92,99,102,105,109,112,132,141,145,151,155,174,179,186,187,202,207,211,226,232,240,253,255,259,261,263,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'block_body':([38,129,],[86,178,]),'multiplying':([67,165,],[109,109,]),'type_decl':([13,42,138,],[43,43,43,]),'subprog_decl':([3,10,13,42,138,],[14,14,44,44,44,]),'subprog_body':([3,10,13,42,138,],[12,12,45,45,45,]),'param':([81,149,170,],[118,198,204,]),'iter_index_constraint':([122,],[173,]),'numeric_lit':([19,34,58,73,99,102,105,109,112,132,141,174,186,187,202,226,232,240,253,255,261,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'lambda_begin':([13,42,138,],[34,34,34,]),'value_s':([102,],[163,]),'term':([19,34,73,99,102,105,112,132,141,174,186,187,202,226,232,240,253,255,261,],[67,67,67,67,67,165,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'pragma_arg_s':([19,],[70,]),'compilation':([0,],[3,]),'else_opt':([180,],[216,]),'assign_stmt':([87,179,211,259,263,],[144,144,144,144,144,]),'adding':([63,85,114,156,162,183,189,210,228,262,273,],[105,105,105,105,105,105,105,105,105,105,105,]),'range':([174,232,253,],[208,265,272,]),'logical':([181,268,],[217,217,]),'range_s':([174,],[209,]),'expression':([132,187,240,],[181,181,268,]),'pragma_s':([4,9,26,235,284,],[18,24,78,266,286,]),'decl_item':([13,42,138,],[32,32,32,]),'context_spec':([3,],[10,]),'relation':([132,187,240,261,],[182,182,182,277,]),'name':([19,34,50,58,73,83,87,92,99,102,105,109,112,132,141,145,151,155,174,179,186,187,202,207,211,226,232,240,253,255,259,261,263,],[61,61,93,61,61,120,135,93,61,61,61,61,61,61,61,120,200,201,61,135,61,61,61,120,135,61,61,61,61,61,135,61,135,]),'subtype_ind':([83,145,207,],[121,191,252,]),'integer_type':([192,],[236,]),'formal_part_opt':([28,55,],[80,98,]),'return_stmt':([87,179,211,259,263,],[137,137,137,137,137,]),'pragma':([0,10,13,18,24,42,78,138,266,286,],[4,27,35,56,56,35,56,35,56,56,]),'subprog_spec_is_push':([3,10,13,42,138,],[13,13,13,13,13,]),'statement_s':([87,211,259,263,],[130,256,275,278,]),'compound_name':([15,96,],[52,154,]),'operator_symbol':([19,34,50,58,73,83,87,92,99,101,102,105,109,112,132,141,145,151,155,174,179,186,187,202,207,211,226,232,240,253,255,259,261,263,],[74,74,74,74,74,74,74,74,74,161,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'value':([102,202,],[164,249,]),'mark':([172,245,],[206,269,]),'type_completion':([146,],[193,]),'use_clause':([13,23,42,77,138,],[36,76,36,76,36,]),'param_s':([81,],[116,]),'subtype_decl':([13,42,138,],[46,46,46,]),'record_def':([192,],[241,]),'def_id':([11,13,17,42,81,82,138,148,149,170,246,],[28,49,55,49,115,119,49,115,115,115,115,]),'iteration':([87,179,211,259,263,],[128,128,128,128,128,]),'type_def':([192,],[234,]),'simple_name':([1,15,19,34,50,58,73,83,87,92,95,96,99,101,102,105,109,112,132,141,145,151,155,172,174,179,186,187,202,207,211,226,232,240,245,250,253,255,259,261,263,],[5,51,57,84,84,84,84,84,84,84,153,51,84,157,84,84,84,57,84,84,84,84,84,205,84,84,84,84,84,84,84,84,84,84,205,271,84,84,84,84,84,]),'literal':([19,34,58,73,99,102,105,109,112,132,141,174,186,187,202,226,232,240,253,255,261,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'discrim_spec':([148,246,],[195,270,]),'comp_list':([266,],[280,]),'relational':([183,],[226,]),'used_char':([101,],[160,]),'discrim_part':([90,],[147,]),'procedure_call':([87,179,211,259,263,],[139,139,139,139,139,]),'record_type':([192,],[238,]),'constr_array_type':([83,192,],[123,123,]),'loop_stmt':([87,179,211,259,263,],[140,140,140,140,140,]),'primary':([19,34,58,73,99,102,105,109,112,132,141,174,186,187,202,226,232,240,253,255,261,],[68,68,100,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'comp_unit':([3,],[16,]),'name_s':([50,92,],[94,150,]),'statement':([87,179,211,259,263,],[143,214,143,143,143,]),'object_subtype_def':([83,],[124,]),'basic_loop':([177,],[212,]),'formal_part':([28,55,],[79,79,]),'decl_item_or_body':([13,42,138,],[37,88,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal_symbol","S'",1,None,None,None),
  ('goal_symbol -> compilation','goal_symbol',1,'p_goal_symbol','grammar.py',16),
  ('pragma -> PRAGMA IDENTIFIER ;','pragma',3,'p_pragma','grammar.py',22),
  ('pragma -> PRAGMA simple_name ( pragma_arg_s ) ;','pragma',6,'p_pragma','grammar.py',23),
  ('pragma_arg_s -> pragma_arg','pragma_arg_s',1,'p_pragma_arg_s','grammar.py',27),
  ('pragma_arg_s -> pragma_arg_s , pragma_arg','pragma_arg_s',3,'p_pragma_arg_s','grammar.py',28),
  ('pragma_arg -> simple_expression','pragma_arg',1,'p_pragma_arg','grammar.py',33),
  ('pragma_arg -> simple_name ARROW simple_expression','pragma_arg',3,'p_pragma_arg','grammar.py',34),
  ('pragma_s -> <empty>','pragma_s',0,'p_pragma_s','grammar.py',38),
  ('pragma_s -> pragma_s pragma','pragma_s',2,'p_pragma_s','grammar.py',39),
  ('decl -> object_decl','decl',1,'p_decl','grammar.py',43),
  ('decl -> type_decl','decl',1,'p_decl','grammar.py',44),
  ('decl -> subtype_decl','decl',1,'p_decl','grammar.py',45),
  ('decl -> subprog_decl','decl',1,'p_decl','grammar.py',46),
  ('decl -> lambda_stmt','decl',1,'p_decl','grammar.py',47),
  ('object_decl -> def_id_s : object_subtype_def ;','object_decl',4,'p_object_decl','grammar.py',51),
  ('def_id_s -> def_id','def_id_s',1,'p_def_id_s','grammar.py',65),
  ('def_id_s -> def_id_s , def_id','def_id_s',3,'p_def_id_s','grammar.py',66),
  ('def_id -> IDENTIFIER','def_id',1,'p_def_id','grammar.py',71),
  ('object_subtype_def -> subtype_ind','object_subtype_def',1,'p_object_subtype_def','grammar.py',76),
  ('object_subtype_def -> array_type','object_subtype_def',1,'p_object_subtype_def','grammar.py',77),
  ('type_decl -> TYPE IDENTIFIER discrim_part_opt type_completion ;','type_decl',5,'p_type_decl','grammar.py',82),
  ('discrim_part_opt -> <empty>','discrim_part_opt',0,'p_discrim_part_opt','grammar.py',86),
  ('discrim_part_opt -> discrim_part','discrim_part_opt',1,'p_discrim_part_opt','grammar.py',87),
  ('discrim_part_opt -> ( BOX )','discrim_part_opt',3,'p_discrim_part_opt','grammar.py',88),
  ('type_completion -> <empty>','type_completion',0,'p_type_completion','grammar.py',92),
  ('type_completion -> IS type_def','type_completion',2,'p_type_completion','grammar.py',93),
  ('type_def -> integer_type','type_def',1,'p_type_def','grammar.py',97),
  ('type_def -> array_type','type_def',1,'p_type_def','grammar.py',98),
  ('type_def -> record_type','type_def',1,'p_type_def','grammar.py',99),
  ('subtype_decl -> SUBTYPE IDENTIFIER IS subtype_ind ;','subtype_decl',5,'p_subtype_decl','grammar.py',104),
  ('subtype_ind -> name','subtype_ind',1,'p_subtype_ind','grammar.py',108),
  ('range_constraint -> RANGE range','range_constraint',2,'p_range_constraint','grammar.py',113),
  ('range -> simple_expression DOTDOT simple_expression','range',3,'p_range','grammar.py',117),
  ('integer_type -> range_spec','integer_type',1,'p_integer_type','grammar.py',124),
  ('integer_type -> MOD expression','integer_type',2,'p_integer_type','grammar.py',125),
  ('range_spec -> range_constraint','range_spec',1,'p_range_spec','grammar.py',129),
  ('array_type -> constr_array_type','array_type',1,'p_array_type','grammar.py',133),
  ('constr_array_type -> ARRAY iter_index_constraint OF component_subtype_def','constr_array_type',4,'p_constr_array_type','grammar.py',138),
  ('component_subtype_def -> subtype_ind','component_subtype_def',1,'p_component_subtype_def','grammar.py',151),
  ('iter_index_constraint -> ( range_s )','iter_index_constraint',3,'p_iter_index_constraint','grammar.py',156),
  ('range_s -> range','range_s',1,'p_range_s','grammar.py',161),
  ('range_s -> range_s , range','range_s',3,'p_range_s','grammar.py',162),
  ('record_type -> record_def','record_type',1,'p_record_type','grammar.py',167),
  ('record_def -> RECORD pragma_s comp_list END RECORD','record_def',5,'p_record_def','grammar.py',171),
  ('record_def -> NuLL RECORD','record_def',2,'p_record_def','grammar.py',172),
  ('comp_list -> NuLL ; pragma_s','comp_list',3,'p_comp_list','grammar.py',176),
  ('discrim_part -> ( discrim_spec_s )','discrim_part',3,'p_discrim_part','grammar.py',180),
  ('discrim_spec_s -> discrim_spec','discrim_spec_s',1,'p_discrim_spec_s','grammar.py',184),
  ('discrim_spec_s -> discrim_spec_s ; discrim_spec','discrim_spec_s',3,'p_discrim_spec_s','grammar.py',185),
  ('discrim_spec -> def_id_s : mark','discrim_spec',3,'p_discrim_spec','grammar.py',190),
  ('decl_part -> <empty>','decl_part',0,'p_decl_part','grammar.py',194),
  ('decl_part -> decl_item_or_body_s','decl_part',1,'p_decl_part','grammar.py',195),
  ('decl_item -> decl','decl_item',1,'p_decl_item','grammar.py',199),
  ('decl_item -> use_clause','decl_item',1,'p_decl_item','grammar.py',200),
  ('decl_item -> pragma','decl_item',1,'p_decl_item','grammar.py',201),
  ('decl_item_or_body_s -> decl_item_or_body','decl_item_or_body_s',1,'p_decl_item_or_body_s','grammar.py',205),
  ('decl_item_or_body_s -> decl_item_or_body_s decl_item_or_body','decl_item_or_body_s',2,'p_decl_item_or_body_s','grammar.py',206),
  ('decl_item_or_body -> body','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',211),
  ('decl_item_or_body -> decl_item','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',212),
  ('body -> subprog_body','body',1,'p_body','grammar.py',217),
  ('name -> simple_name','name',1,'p_name','grammar.py',222),
  ('name -> indexed_comp','name',1,'p_name','grammar.py',223),
  ('name -> selected_comp','name',1,'p_name','grammar.py',224),
  ('name -> operator_symbol','name',1,'p_name','grammar.py',225),
  ('mark -> simple_name','mark',1,'p_mark','grammar.py',231),
  ('mark -> mark . simple_name','mark',3,'p_mark','grammar.py',232),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','grammar.py',239),
  ('compound_name -> simple_name','compound_name',1,'p_compound_name','grammar.py',245),
  ('compound_name -> compound_name . simple_name','compound_name',3,'p_compound_name','grammar.py',246),
  ('c_name_list -> compound_name','c_name_list',1,'p_c_name_list','grammar.py',252),
  ('c_name_list -> c_name_list , compound_name','c_name_list',3,'p_c_name_list','grammar.py',253),
  ('used_char -> CHAR','used_char',1,'p_used_char','grammar.py',258),
  ('operator_symbol -> STRING','operator_symbol',1,'p_operator_symbol','grammar.py',262),
  ('indexed_comp -> name ( value_s )','indexed_comp',4,'p_indexed_comp','grammar.py',266),
  ('value_s -> value','value_s',1,'p_value_s','grammar.py',305),
  ('value_s -> value_s , value','value_s',3,'p_value_s','grammar.py',306),
  ('value -> simple_expression','value',1,'p_value','grammar.py',312),
  ('selected_comp -> name . simple_name','selected_comp',3,'p_selected_comp','grammar.py',317),
  ('selected_comp -> name . used_char','selected_comp',3,'p_selected_comp','grammar.py',318),
  ('selected_comp -> name . operator_symbol','selected_comp',3,'p_selected_comp','grammar.py',319),
  ('selected_comp -> name . ALL','selected_comp',3,'p_selected_comp','grammar.py',320),
  ('literal -> numeric_lit','literal',1,'p_literal','grammar.py',324),
  ('numeric_lit -> INT','numeric_lit',1,'p_numeric_lit1','grammar.py',329),
  ('numeric_lit -> FLOAT','numeric_lit',1,'p_numeric_lit2','grammar.py',334),
  ('M -> <empty>','M',0,'p_M','grammar.py',339),
  ('expression -> relation','expression',1,'p_expression','grammar.py',344),
  ('expression -> expression logical M relation','expression',4,'p_expression','grammar.py',345),
  ('logical -> AND','logical',1,'p_logical','grammar.py',363),
  ('logical -> OR','logical',1,'p_logical','grammar.py',364),
  ('relation -> simple_expression relational simple_expression','relation',3,'p_relation','grammar.py',370),
  ('relational -> =','relational',1,'p_relational','grammar.py',380),
  ('relational -> NEQ','relational',1,'p_relational','grammar.py',381),
  ('relational -> <','relational',1,'p_relational','grammar.py',382),
  ('relational -> LEQ','relational',1,'p_relational','grammar.py',383),
  ('relational -> >','relational',1,'p_relational','grammar.py',384),
  ('relational -> GEQ','relational',1,'p_relational','grammar.py',385),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','grammar.py',390),
  ('simple_expression -> simple_expression adding term','simple_expression',3,'p_simple_expression','grammar.py',391),
  ('adding -> +','adding',1,'p_adding','grammar.py',402),
  ('adding -> -','adding',1,'p_adding','grammar.py',403),
  ('adding -> &','adding',1,'p_adding','grammar.py',404),
  ('term -> factor','term',1,'p_term','grammar.py',409),
  ('term -> term multiplying factor','term',3,'p_term','grammar.py',410),
  ('multiplying -> *','multiplying',1,'p_multiplying','grammar.py',421),
  ('multiplying -> /','multiplying',1,'p_multiplying','grammar.py',422),
  ('multiplying -> MOD','multiplying',1,'p_multiplying','grammar.py',423),
  ('multiplying -> STARSTAR','multiplying',1,'p_multiplying','grammar.py',424),
  ('factor -> primary','factor',1,'p_factor','grammar.py',430),
  ('factor -> NOT primary','factor',2,'p_factor','grammar.py',431),
  ('primary -> literal','primary',1,'p_primary','grammar.py',437),
  ('primary -> name','primary',1,'p_primary','grammar.py',438),
  ('primary -> parenthesized_primary','primary',1,'p_primary','grammar.py',439),
  ('parenthesized_primary -> ( simple_expression )','parenthesized_primary',3,'p_parenthesized_primary','grammar.py',445),
  ('statement_s -> statement','statement_s',1,'p_statement_s','grammar.py',450),
  ('statement_s -> statement_s M statement','statement_s',3,'p_statement_s','grammar.py',451),
  ('statement -> simple_stmt','statement',1,'p_statement','grammar.py',460),
  ('statement -> compound_stmt','statement',1,'p_statement','grammar.py',461),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',467),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',468),
  ('simple_stmt -> procedure_call','simple_stmt',1,'p_simple_stmt','grammar.py',469),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',474),
  ('compound_stmt -> loop_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',475),
  ('compound_stmt -> block','compound_stmt',1,'p_compound_stmt','grammar.py',476),
  ('lambda_stmt -> lambda_begin simple_expression ;','lambda_stmt',3,'p_lambda_stmt','grammar.py',481),
  ('lambda_begin -> def_id ASSIGN LAMBDA param :','lambda_begin',5,'p_lambda_begin','grammar.py',489),
  ('assign_stmt -> name ASSIGN simple_expression ;','assign_stmt',4,'p_assign_stmt','grammar.py',502),
  ('if_stmt -> IF cond_clause else_opt END IF ;','if_stmt',6,'p_if_stmt','grammar.py',510),
  ('N -> <empty>','N',0,'p_N','grammar.py',518),
  ('cond_clause -> condition THEN M statement_s N','cond_clause',5,'p_cond_clause','grammar.py',525),
  ('condition -> expression','condition',1,'p_condition','grammar.py',532),
  ('else_opt -> <empty>','else_opt',0,'p_else_opt','grammar.py',537),
  ('else_opt -> ELSE M statement_s','else_opt',3,'p_else_opt','grammar.py',538),
  ('loop_stmt -> iteration M basic_loop ;','loop_stmt',4,'p_loop_stmt','grammar.py',548),
  ('iteration -> WHILE M condition','iteration',3,'p_iteration','grammar.py',557),
  ('basic_loop -> LOOP statement_s END LOOP','basic_loop',4,'p_basic_loop','grammar.py',563),
  ('block -> block_decl block_body END ;','block',4,'p_block','grammar.py',568),
  ('block_decl -> <empty>','block_decl',0,'p_block_decl','grammar.py',572),
  ('block_decl -> DECLARE decl_part','block_decl',2,'p_block_decl','grammar.py',573),
  ('block_body -> BEGIN statement_s','block_body',2,'p_block_body','grammar.py',577),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt','grammar.py',582),
  ('return_stmt -> RETURN simple_expression ;','return_stmt',3,'p_return_stmt','grammar.py',583),
  ('subprog_decl -> subprog_spec ;','subprog_decl',2,'p_subprog_decl','grammar.py',593),
  ('subprog_spec -> PROCEDURE def_id formal_part_opt','subprog_spec',3,'p_subprog_spec','grammar.py',600),
  ('subprog_spec -> FUNCTION def_id formal_part_opt RETURN name','subprog_spec',5,'p_subprog_spec','grammar.py',601),
  ('formal_part_opt -> <empty>','formal_part_opt',0,'p_formal_part_opt','grammar.py',612),
  ('formal_part_opt -> formal_part','formal_part_opt',1,'p_formal_part_opt','grammar.py',613),
  ('formal_part -> ( param_s )','formal_part',3,'p_formal_part','grammar.py',618),
  ('param_s -> param','param_s',1,'p_param_s','grammar.py',623),
  ('param_s -> param_s ; param','param_s',3,'p_param_s','grammar.py',624),
  ('param -> def_id_s : mark','param',3,'p_param','grammar.py',633),
  ('subprog_spec_is_push -> subprog_spec IS','subprog_spec_is_push',2,'p_subprog_spec_is_push','grammar.py',643),
  ('subprog_body -> subprog_spec_is_push decl_part block_body END ;','subprog_body',5,'p_subprog_body','grammar.py',653),
  ('procedure_call -> name ;','procedure_call',2,'p_procedure_call','grammar.py',660),
  ('use_clause -> USE name_s ;','use_clause',3,'p_use_clause','grammar.py',664),
  ('use_clause -> USE TYPE name_s ;','use_clause',4,'p_use_clause','grammar.py',665),
  ('name_s -> name','name_s',1,'p_name_s','grammar.py',669),
  ('name_s -> name_s , name','name_s',3,'p_name_s','grammar.py',670),
  ('compilation -> <empty>','compilation',0,'p_compilation','grammar.py',675),
  ('compilation -> compilation comp_unit','compilation',2,'p_compilation','grammar.py',676),
  ('compilation -> pragma pragma_s','compilation',2,'p_compilation','grammar.py',677),
  ('comp_unit -> context_spec unit pragma_s','comp_unit',3,'p_comp_unit','grammar.py',681),
  ('comp_unit -> unit pragma_s','comp_unit',2,'p_comp_unit','grammar.py',682),
  ('context_spec -> with_clause use_clause_opt','context_spec',2,'p_context_spec','grammar.py',686),
  ('context_spec -> context_spec with_clause use_clause_opt','context_spec',3,'p_context_spec','grammar.py',687),
  ('context_spec -> context_spec pragma','context_spec',2,'p_context_spec','grammar.py',688),
  ('with_clause -> WITH c_name_list ;','with_clause',3,'p_with_clause','grammar.py',692),
  ('use_clause_opt -> <empty>','use_clause_opt',0,'p_use_clause_opt','grammar.py',696),
  ('use_clause_opt -> use_clause_opt use_clause','use_clause_opt',2,'p_use_clause_opt','grammar.py',697),
  ('unit -> subprog_decl','unit',1,'p_unit','grammar.py',701),
  ('unit -> subprog_body','unit',1,'p_unit','grammar.py',702),
]
