
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "goal_symbolABORT ABS ABSTRACT ACCEPT ACCESS ALIASED ALL AND ARRAY ARROW ASSIGN AT BEGIN BODY BOX CASE CHAR CONSTANT DECLARE DELAY DELTA DIGITS DO DOTDOT ELSE ELSIF END ENTRY EXCEPTION EXIT FLOAT FOR FUNCTION GENERIC GEQ IDENTIFIER IF IN INT IS LEQ LIMITED LL LOOP MOD NEQ NEW NOT NuLL OF OR OTHERS OUT PACKAGE PRAGMA PRIVATE PROCEDURE PROTECTED RAISE RANGE RECORD REM RENAMES REQUEUE RETURN REVERSE RR SELECT SEPARATE STARSTAR STRING SUBTYPE TAGGED TASK TERMINATE THEN TICK TYPE UNTIL USE WHEN WHILE WITH XORgoal_symbol : compilation\n\tpragma : PRAGMA IDENTIFIER ';'\n\t   | PRAGMA simple_name '(' pragma_arg_s ')' ';'\n\tpragma_arg_s : pragma_arg\n\t   | pragma_arg_s ',' pragma_arg\n\tpragma_arg : expression\n\t   | simple_name ARROW expression\n\tpragma_s :\n\t   | pragma_s pragma\n\tdecl : object_decl\n\t   | type_decl\n\t   | subtype_decl\n\t   | subprog_decl\n\tobject_decl : def_id_s ':' object_subtype_def ';'   \n\tdef_id_s : def_id\n\t   | def_id_s ',' def_id\n\tdef_id  : IDENTIFIER\n\tobject_subtype_def : subtype_ind\n\t   | array_type\n\ttype_decl : TYPE IDENTIFIER discrim_part_opt type_completion ';'\n\tdiscrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\ttype_completion :\n\t   | IS type_def\n\ttype_def : integer_type\n\t   | array_type\n\t   | record_type\n\tsubtype_decl : SUBTYPE IDENTIFIER IS subtype_ind ';'\n\tsubtype_ind : name\n\trange_constraint : RANGE range\n\trange : simple_expression DOTDOT simple_expression\n\tinteger_type : range_spec\n\t   | MOD expression\n\trange_spec : range_constraint\n\tarray_type : constr_array_type\n\tconstr_array_type : ARRAY iter_index_constraint OF component_subtype_def\n\tcomponent_subtype_def : subtype_ind\n\titer_index_constraint : '(' range_s ')'\n\trange_s : range\n\t   | range_s ',' range\n\trecord_type : record_def\n\trecord_def : RECORD pragma_s comp_list END RECORD\n\t   | NuLL RECORD\n\tcomp_list : NuLL ';' pragma_s\n\tdiscrim_part : '(' discrim_spec_s ')'\n\tdiscrim_spec_s : discrim_spec\n\t   | discrim_spec_s ';' discrim_spec\n\tdiscrim_spec : def_id_s ':' mark\n\tdecl_part :\n\t   | decl_item_or_body_s\n\tdecl_item : decl\n\t   | use_clause\n\t   | pragma\n\tdecl_item_or_body_s : decl_item_or_body\n\t   | decl_item_or_body_s decl_item_or_body\n\tdecl_item_or_body : body\n\t   | decl_item\n\tbody : subprog_body\n\tname : simple_name\n\t   | indexed_comp\n\t   | selected_comp\n\t   | operator_symbol\n\tmark : simple_name\n\t   | mark '.' simple_name\n\tsimple_name : IDENTIFIER\n\tcompound_name : simple_name\n\t   | compound_name '.' simple_name\n\tc_name_list : compound_name\n\t    | c_name_list ',' compound_name\n\tused_char : CHAR\n\toperator_symbol : STRING\n\tindexed_comp : name '(' value_s ')'\n    value_s : value\n\t   | value_s ',' value\n\tvalue : simple_expression\n\tselected_comp : name '.' simple_name\n\t   | name '.' used_char\n\t   | name '.' operator_symbol\n\t   | name '.' ALL\n\tliteral : INT\n\t   | NuLL\n\t M : \n\texpression : relation\n\t   | expression logical M relation\n\tlogical : AND\n\t   | OR\n\trelation : simple_expression relational simple_expression\n\trelational : '='\n\t   | NEQ\n\t   | '<'\n\t   | LEQ\n\t   | '>'\n\t   | GEQ\n\tsimple_expression : term\n\t   | simple_expression adding term\n\tadding  : '+'\n\t   | '-'\n\t   | '&'\n\tterm : factor\n\t   | term multiplying factor\n\tmultiplying : '*'\n\t   | '/'\n\t   | MOD\n\t   | STARSTAR\n\tfactor : primary\n\tprimary : literal\n\t   | name\n\t   | parenthesized_primary\n\tparenthesized_primary : '(' simple_expression ')'\n\tstatement_s : statement\n\t   | statement_s M statement\n\tstatement : unlabeled\n\tunlabeled : simple_stmt\n\t   | compound_stmt\n\tsimple_stmt : assign_stmt\n\t   | return_stmt\n\t   | procedure_call\n\tcompound_stmt : if_stmt\n\t   | loop_stmt\n\t   | block\n\tassign_stmt : name ASSIGN simple_expression ';'\n\tif_stmt : IF cond_clause_s else_opt END IF ';'\n\tcond_clause_s : cond_clause\n\t   | cond_clause_s ELSIF M cond_clause\n\t N : \n\tcond_clause : cond_part M statement_s N\n\tcond_part : condition THEN\n\tcondition : expression\n\telse_opt :\n\t   | ELSE M statement_s\n\tloop_stmt : label_opt iteration basic_loop ';'\n\tlabel_opt :\n\t   | IDENTIFIER ':'\n\titeration :\n\t   | WHILE condition\n\tbasic_loop : LOOP statement_s END LOOP\n\tblock : label_opt block_decl block_body END ';'\n\tblock_decl :\n\t   | DECLARE decl_part\n\tblock_body : BEGIN statement_s\n\treturn_stmt : RETURN ';'\n\t   | RETURN simple_expression ';'\n\tsubprog_decl : subprog_spec ';'\n\tsubprog_spec : PROCEDURE def_id formal_part_opt\n\t   | FUNCTION def_id formal_part_opt RETURN name\n\t   | FUNCTION def_id\n\tformal_part_opt : \n\t   | formal_part\n\tformal_part : '(' param_s ')'\n\tparam_s : param\n\t   | param_s ';' param\n\tparam : def_id_s ':' mark\n\tsubprog_spec_is_push : subprog_spec IS\n\tsubprog_body : subprog_spec_is_push decl_part block_body END ';'\n\tprocedure_call : name ';'\n\tuse_clause : USE name_s ';'\n\t   | USE TYPE name_s ';'\n\tname_s : name\n\t   | name_s ',' name\n\tcompilation :\n\t   | compilation comp_unit\n\t   | pragma pragma_s\n\tcomp_unit : context_spec unit pragma_s\n\t   | unit pragma_s\n\tcontext_spec : with_clause use_clause_opt\n\t   | context_spec with_clause use_clause_opt\n\t   | context_spec pragma\n\twith_clause : WITH c_name_list ';'\n\tuse_clause_opt :\n\t   | use_clause_opt use_clause\n\tunit : subprog_decl\n\t   | subprog_body\n\t"
    
_lr_action_items = {'MOD':([47,55,56,59,60,61,62,63,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,194,207,],[-66,-100,-106,-108,-109,-63,-60,-62,-107,-61,-72,115,-81,-82,-60,-110,-80,-79,-71,-77,-78,115,-101,227,-73,]),';':([6,8,24,29,44,45,46,47,48,49,55,56,59,60,61,63,66,67,68,69,71,72,73,77,80,81,82,88,89,114,129,132,133,136,137,139,140,141,143,144,145,149,151,152,153,154,157,159,160,161,162,163,168,169,172,187,190,192,193,198,200,202,204,205,207,216,219,221,224,226,228,230,231,233,234,235,242,243,244,250,254,255,256,257,259,260,261,266,273,275,276,278,281,],[20,22,22,-17,-67,-69,86,-66,-148,-147,-100,-106,-108,-109,-63,-62,-107,-61,-72,-84,-95,-81,-82,-21,-159,147,-60,-149,-145,171,-66,184,186,188,-22,-24,-19,-36,-30,-18,197,199,-68,-70,201,-151,-110,-80,-79,-71,-77,-78,-96,-88,-101,220,-47,223,225,-160,241,-150,-146,-85,-73,251,253,-23,-46,-27,-25,-42,-35,-33,-26,-28,-152,-64,-153,270,-49,-48,-34,-31,-44,-38,-37,277,280,-32,-65,-137,-43,]),'BOX':([138,],[189,]),'(':([5,6,19,29,47,48,49,57,59,61,62,63,67,68,77,80,82,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,121,129,132,133,142,143,158,159,160,161,162,163,183,185,196,198,204,206,207,210,227,229,247,263,264,],[19,-66,57,-17,-66,90,90,57,100,-63,-60,-62,-61,-72,138,100,-60,-86,-87,-83,57,57,-99,57,-92,-98,-91,-90,-89,57,-94,-97,-93,57,-104,-102,-105,57,-103,57,-66,100,57,196,100,57,-80,-79,-71,-77,-78,57,57,57,100,100,57,-73,-83,57,57,57,57,57,]),'&':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,95,157,159,160,161,162,163,164,168,169,172,187,207,219,240,275,],[-66,-100,-106,-108,-109,-63,-60,-62,102,-107,-61,-72,-95,-81,-82,-60,102,-110,-80,-79,-71,-77,-78,102,-96,102,-101,102,-73,102,102,102,]),'SUBTYPE':([9,20,22,23,25,26,27,28,30,31,32,33,35,37,39,41,74,147,171,180,188,197,199,225,241,],[43,-2,-144,-154,-53,-58,-12,-57,-55,43,-10,-13,-54,-59,-52,-11,-56,-157,-3,43,-155,-14,-158,-20,-29,]),'PROCEDURE':([0,2,3,7,9,11,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,33,35,37,39,41,50,51,52,53,54,74,86,92,93,94,147,171,180,188,197,199,225,241,],[-161,-8,12,-163,12,-162,-170,-8,-173,-172,12,-2,-9,-144,-154,-53,-58,-12,-57,-55,12,-10,-13,-54,-59,-52,-11,-166,-165,-170,-8,-168,-56,-169,-171,-167,-164,-157,-3,12,-155,-14,-158,-20,-29,]),'IDENTIFIER':([1,9,10,12,13,19,20,22,23,25,26,27,28,30,31,32,33,35,36,37,39,40,41,43,57,74,75,78,79,83,85,87,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,133,134,135,138,147,148,150,156,158,171,173,176,180,183,184,185,186,188,196,197,199,201,203,206,208,210,211,212,213,217,220,222,223,225,227,229,237,241,247,248,249,251,252,253,263,264,265,268,270,277,],[6,29,47,29,29,47,-2,-144,-154,-53,-58,-12,-57,-55,29,-10,-13,-54,77,-59,-52,47,-11,84,47,-56,129,47,29,47,47,47,29,-86,-87,-83,47,47,47,-99,47,-92,-98,-91,-90,-89,47,-94,-97,-93,47,-104,-102,-105,47,-103,-83,47,-116,-115,-114,-120,-118,-119,-111,-121,47,-113,-117,29,-157,47,47,47,47,-3,129,-83,29,47,-156,47,-142,-155,47,-14,-158,29,47,47,-112,-83,-83,129,-128,129,-143,47,29,-20,47,47,47,-29,47,129,-83,-132,-83,-122,47,47,47,-83,-138,-123,]),'CHAR':([99,],[161,]),'PRAGMA':([0,2,7,9,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,33,35,37,39,41,50,51,52,53,54,74,86,92,93,94,147,171,180,188,197,199,225,232,241,258,280,282,],[1,-8,1,1,-170,-8,-173,-172,1,-2,-9,-144,-154,-53,-58,-12,-57,-55,1,-10,-13,-54,-59,-52,-11,-166,1,-170,-8,-168,-56,-169,-171,-167,1,-157,-3,1,-155,-14,-158,-20,-8,-29,1,-8,1,]),'BEGIN':([9,20,22,23,25,26,27,28,30,31,32,33,34,35,37,39,41,74,75,120,122,123,124,125,126,127,128,130,131,134,135,147,171,173,176,179,180,181,184,186,188,197,199,208,211,212,213,214,217,220,225,241,248,249,251,252,253,268,270,277,],[-50,-2,-144,-154,-53,-58,-12,-57,-55,-51,-10,-13,75,-54,-59,-52,-11,-56,-133,-83,-116,-115,-114,-120,-118,-119,-111,-139,-121,-113,-117,-157,-3,-133,-83,-134,-50,75,-156,-142,-155,-14,-158,-112,-83,-133,-128,-140,-133,-143,-20,-29,-133,-83,-132,-83,-122,-83,-138,-123,]),'STRING':([19,40,57,75,78,83,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,133,134,135,148,150,156,158,173,176,183,184,185,186,196,206,208,210,211,212,213,217,220,227,229,237,247,248,249,251,252,253,263,264,268,270,277,],[68,68,68,68,68,68,-86,-87,-83,68,68,68,-99,68,-92,-98,-91,-90,-89,68,-94,-97,-93,68,-104,-102,-105,68,-103,-83,68,-116,-115,-114,-120,-118,-119,-111,-121,68,-113,-117,68,68,68,68,68,-83,68,-156,68,-142,68,68,-112,-83,-83,68,-128,68,-143,68,68,68,68,68,-83,-132,-83,-122,68,68,-83,-138,-123,]),'GEQ':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,110,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),'END':([20,21,76,120,122,123,124,125,126,127,128,131,134,135,171,174,178,184,186,208,209,215,220,249,251,252,253,267,268,269,270,272,277,280,282,],[-2,-9,136,-141,-116,-115,-114,-120,-118,-119,-111,-121,-113,-117,-3,-130,-124,-156,-142,-112,246,250,-143,-126,-132,271,-122,-125,-131,-127,-138,279,-123,-8,-45,]),'ELSE':([122,123,124,125,126,127,128,131,134,135,174,178,184,186,208,220,249,251,253,267,269,270,277,],[-116,-115,-114,-120,-118,-119,-111,-121,-113,-117,211,-124,-156,-142,-112,-143,-126,-132,-122,-125,-127,-138,-123,]),'RETURN':([29,49,75,88,91,120,122,123,124,125,126,127,128,131,134,135,173,176,184,186,202,208,211,212,213,217,220,248,249,251,252,253,268,270,277,],[-17,-148,133,-149,156,-83,-116,-115,-114,-120,-118,-119,-111,-121,-113,-117,133,-83,-156,-142,-150,-112,-83,133,-128,133,-143,133,-83,-132,-83,-122,-83,-138,-123,]),'TYPE':([9,20,22,23,25,26,27,28,30,31,32,33,35,37,39,40,41,74,147,171,180,188,197,199,225,241,],[36,-2,-144,-154,-53,-58,-12,-57,-55,36,-10,-13,-54,-59,-52,83,-11,-56,-157,-3,36,-155,-14,-158,-20,-29,]),')':([47,55,56,58,59,60,61,63,65,66,67,68,69,70,71,72,73,82,95,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,172,189,190,192,205,207,238,239,242,243,244,245,254,255,274,275,276,],[-66,-100,-106,-6,-108,-109,-63,-62,114,-107,-61,-72,-84,-4,-95,-81,-82,-60,157,202,-151,-110,-80,-79,-71,-77,-78,-76,207,-74,-7,-96,-88,-5,-101,221,-47,224,-85,-73,-40,262,-152,-64,-153,-75,-49,-48,-41,-32,-65,]),'ASSIGN':([47,61,63,67,68,82,129,132,159,160,161,162,163,207,],[-66,-63,-62,-61,-72,-60,-66,185,-80,-79,-71,-77,-78,-73,]),'STARSTAR':([47,55,56,59,60,61,62,63,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,-107,-61,-72,117,-81,-82,-60,-110,-80,-79,-71,-77,-78,117,-101,-73,]),'-':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,95,157,159,160,161,162,163,164,168,169,172,187,207,219,240,275,],[-66,-100,-106,-108,-109,-63,-60,-62,105,-107,-61,-72,-95,-81,-82,-60,105,-110,-80,-79,-71,-77,-78,105,-96,105,-101,105,-73,105,105,105,]),'<':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,106,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),'$end':([0,2,3,4,7,11,15,16,17,20,21,22,51,53,94,171,188,],[-161,-8,-1,0,-163,-162,-8,-173,-172,-2,-9,-144,-165,-8,-164,-3,-155,]),'NEQ':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,107,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),'USE':([9,14,20,22,23,25,26,27,28,30,31,32,33,35,37,39,41,50,52,74,86,92,93,147,171,180,188,197,199,225,241,],[40,-170,-2,-144,-154,-53,-58,-12,-57,-55,40,-10,-13,-54,-59,-52,-11,40,-170,-56,-169,-171,40,-157,-3,40,-155,-14,-158,-20,-29,]),'*':([47,55,56,59,60,61,62,63,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,-107,-61,-72,116,-81,-82,-60,-110,-80,-79,-71,-77,-78,116,-101,-73,]),'ARRAY':([78,194,],[142,142,]),'RANGE':([194,],[229,]),'INT':([19,57,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,121,133,158,183,185,196,206,210,227,229,247,263,264,],[72,72,-86,-87,-83,72,72,-99,72,-92,-98,-91,-90,-89,72,-94,-97,-93,72,-104,-102,-105,72,-103,72,72,72,72,72,72,72,-83,72,72,72,72,72,]),'IF':([75,120,122,123,124,125,126,127,128,131,134,135,173,176,184,186,208,211,212,213,217,220,246,248,249,251,252,253,268,270,277,],[121,-83,-116,-115,-114,-120,-118,-119,-111,-121,-113,-117,121,-83,-156,-142,-112,-83,121,-128,121,-143,266,121,-83,-132,-83,-122,-83,-138,-123,]),'WITH':([0,2,3,7,11,14,15,16,17,18,20,21,22,50,51,52,53,54,86,92,93,94,147,171,188,199,],[-161,-8,10,-163,-162,-170,-8,-173,-172,10,-2,-9,-144,-166,-165,-170,-8,-168,-169,-171,-167,-164,-157,-3,-155,-158,]),'ELSIF':([122,123,124,125,126,127,128,131,134,135,174,178,184,186,208,220,249,251,253,267,269,270,277,],[-116,-115,-114,-120,-118,-119,-111,-121,-113,-117,210,-124,-156,-142,-112,-143,-126,-132,-122,-125,-127,-138,-123,]),'+':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,95,157,159,160,161,162,163,164,168,169,172,187,207,219,240,275,],[-66,-100,-106,-108,-109,-63,-60,-62,111,-107,-61,-72,-95,-81,-82,-60,111,-110,-80,-79,-71,-77,-78,111,-96,111,-101,111,-73,111,111,111,]),'LOOP':([47,55,56,59,60,61,63,66,67,68,69,71,72,73,75,82,120,122,123,124,125,126,127,128,130,131,134,135,157,159,160,161,162,163,168,169,172,173,175,176,179,182,184,186,205,207,208,211,212,213,217,218,220,248,249,251,252,253,268,270,271,277,],[-66,-100,-106,-108,-109,-63,-62,-107,-61,-72,-84,-95,-81,-82,-133,-60,-83,-116,-115,-114,-120,-118,-119,-111,-135,-121,-113,-117,-110,-80,-79,-71,-77,-78,-96,-88,-101,-133,-129,-83,-134,217,-156,-142,-85,-73,-112,-83,-133,-128,-133,-136,-143,-133,-83,-132,-83,-122,-83,-138,278,-123,]),'DOTDOT':([47,55,56,59,60,61,63,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,240,],[-66,-100,-106,-108,-109,-63,-62,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,264,]),'.':([44,45,47,59,61,62,63,67,68,80,82,129,132,143,151,152,159,160,161,162,163,198,204,207,243,244,254,276,],[-67,85,-66,99,-63,-60,-62,-61,-72,99,-60,-66,99,99,-68,85,-80,-79,-71,-77,-78,99,99,-73,-64,265,265,-65,]),'OR':([47,55,56,58,59,60,61,63,66,67,68,69,71,72,73,82,157,159,160,161,162,163,167,168,169,172,175,205,207,256,],[-66,-100,-106,97,-108,-109,-63,-62,-107,-61,-72,-84,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,97,-96,-88,-101,97,-85,-73,97,]),'DECLARE':([75,120,122,123,124,125,126,127,128,130,131,134,135,173,176,179,184,186,208,211,212,213,217,220,248,249,251,252,253,268,270,277,],[-133,-83,-116,-115,-114,-120,-118,-119,-111,180,-121,-113,-117,-133,-83,-134,-156,-142,-112,-83,-133,-128,-133,-143,-133,-83,-132,-83,-122,-83,-138,-123,]),'FUNCTION':([0,2,3,7,9,11,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,33,35,37,39,41,50,51,52,53,54,74,86,92,93,94,147,171,180,188,197,199,225,241,],[-161,-8,13,-163,13,-162,-170,-8,-173,-172,13,-2,-9,-144,-154,-53,-58,-12,-57,-55,13,-10,-13,-54,-59,-52,-11,-166,-165,-170,-8,-168,-56,-169,-171,-167,-164,-157,-3,13,-155,-14,-158,-20,-29,]),'OF':([195,262,],[237,-39,]),'ALL':([99,],[159,]),'AND':([47,55,56,58,59,60,61,63,66,67,68,69,71,72,73,82,157,159,160,161,162,163,167,168,169,172,175,205,207,256,],[-66,-100,-106,96,-108,-109,-63,-62,-107,-61,-72,-84,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,96,-96,-88,-101,96,-85,-73,96,]),':':([29,38,42,129,146,155,191,],[-17,78,-15,179,-16,203,222,]),'LEQ':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,104,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),'RECORD':([194,236,279,],[232,259,281,]),'THEN':([47,55,56,59,60,61,63,66,67,68,69,71,72,73,82,157,159,160,161,162,163,168,169,172,175,177,205,207,],[-66,-100,-106,-108,-109,-63,-62,-107,-61,-72,-84,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-88,-101,-129,213,-85,-73,]),'WHILE':([75,120,122,123,124,125,126,127,128,130,131,134,135,173,176,179,184,186,208,211,212,213,217,220,248,249,251,252,253,268,270,277,],[-133,-83,-116,-115,-114,-120,-118,-119,-111,183,-121,-113,-117,-133,-83,-134,-156,-142,-112,-83,-133,-128,-133,-143,-133,-83,-132,-83,-122,-83,-138,-123,]),'NuLL':([19,20,21,57,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,121,133,158,171,183,185,194,196,206,210,227,229,232,247,258,263,264,],[73,-2,-9,73,-86,-87,-83,73,73,-99,73,-92,-98,-91,-90,-89,73,-94,-97,-93,73,-104,-102,-105,73,-103,73,73,73,-3,73,73,236,73,73,-83,73,73,-8,73,273,73,73,]),'ARROW':([47,62,],[-66,101,]),'>':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,112,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),'=':([47,55,56,59,60,61,62,63,64,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,108,-107,-61,-72,-95,-81,-82,-60,-110,-80,-79,-71,-77,-78,-96,-101,-73,]),',':([29,38,42,44,45,46,47,55,56,58,59,60,61,63,65,66,67,68,69,70,71,72,73,80,81,82,146,149,151,152,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,191,198,205,207,238,239,245,274,275,],[-17,79,-15,-67,-69,87,-66,-100,-106,-6,-108,-109,-63,-62,113,-107,-61,-72,-84,-4,-95,-81,-82,-159,148,-60,-16,148,-68,-70,79,-110,-80,-79,-71,-77,-78,-76,206,-74,-7,-96,-88,-5,-101,79,-160,-85,-73,-40,263,-75,-41,-32,]),'IS':([8,24,29,47,48,49,61,63,67,68,77,82,84,88,89,137,139,159,160,161,162,163,202,204,207,221,224,],[23,23,-17,-66,-148,-147,-63,-62,-61,-72,-21,-60,150,-149,-145,-22,194,-80,-79,-71,-77,-78,-150,-146,-73,-23,-46,]),'/':([47,55,56,59,60,61,62,63,66,67,68,71,72,73,82,157,159,160,161,162,163,168,172,207,],[-66,-100,-106,-108,-109,-63,-60,-62,-107,-61,-72,119,-81,-82,-60,-110,-80,-79,-71,-77,-78,119,-101,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'subprog_spec':([3,9,18,31,180,],[8,24,8,24,24,]),'range':([196,229,263,],[238,257,274,]),'decl_item':([9,31,180,],[26,26,26,]),'comp_list':([258,],[272,]),'decl_item_or_body':([9,31,180,],[30,74,30,]),'range_constraint':([194,],[231,]),'simple_expression':([19,57,100,101,109,113,121,133,158,183,185,196,206,227,229,247,263,264,],[64,95,164,64,169,64,64,187,64,64,219,240,164,64,240,64,240,275,]),'M':([98,120,176,210,211,249,252,268,],[158,173,212,247,248,173,173,173,]),'pragma_s':([2,15,53,232,280,],[7,51,94,258,282,]),'decl_part':([9,180,],[34,214,]),'param':([90,201,],[154,242,]),'name_s':([40,83,],[81,149,]),'decl':([9,31,180,],[39,39,39,]),'compilation':([0,],[3,]),'integer_type':([194,],[234,]),'unlabeled':([75,173,212,217,248,],[134,134,134,134,134,]),'basic_loop':([182,],[216,]),'value':([100,206,],[166,245,]),'object_subtype_def':([78,],[145,]),'range_spec':([194,],[233,]),'record_type':([194,],[235,]),'iter_index_constraint':([142,],[195,]),'primary':([19,57,100,101,103,109,113,118,121,133,158,183,185,196,206,227,229,247,263,264,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'block_decl':([130,],[181,]),'range_s':([196,],[239,]),'compound_stmt':([75,173,212,217,248,],[123,123,123,123,123,]),'assign_stmt':([75,173,212,217,248,],[122,122,122,122,122,]),'parenthesized_primary':([19,57,100,101,103,109,113,118,121,133,158,183,185,196,206,227,229,247,263,264,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'comp_unit':([3,],[11,]),'procedure_call':([75,173,212,217,248,],[126,126,126,126,126,]),'with_clause':([3,18,],[14,52,]),'relational':([64,],[109,]),'component_subtype_def':([237,],[261,]),'decl_item_or_body_s':([9,180,],[31,31,]),'adding':([64,95,164,169,187,219,240,275,],[103,103,103,103,103,103,103,103,]),'cond_clause_s':([121,],[174,]),'record_def':([194,],[230,]),'relation':([19,101,113,121,158,183,227,247,],[69,69,69,69,205,69,69,69,]),'subprog_body':([3,9,18,31,180,],[16,37,16,37,37,]),'def_id_s':([9,31,90,138,180,201,223,],[38,38,155,191,38,155,191,]),'logical':([58,167,175,256,],[98,98,98,98,]),'param_s':([90,],[153,]),'value_s':([100,],[165,]),'subtype_ind':([78,150,237,],[144,200,260,]),'used_char':([99,],[163,]),'discrim_part':([77,],[137,]),'discrim_spec':([138,223,],[190,255,]),'statement_s':([75,212,217,248,],[120,249,252,268,]),'formal_part':([48,49,],[88,88,]),'use_clause':([9,31,50,93,180,],[25,25,92,92,25,]),'pragma_arg_s':([19,],[65,]),'multiplying':([71,168,],[118,118,]),'subtype_decl':([9,31,180,],[27,27,27,]),'body':([9,31,180,],[28,28,28,]),'simple_stmt':([75,173,212,217,248,],[124,124,124,124,124,]),'loop_stmt':([75,173,212,217,248,],[125,125,125,125,125,]),'operator_symbol':([19,40,57,75,78,83,99,100,101,103,109,113,118,121,133,148,150,156,158,173,183,185,196,206,212,217,227,229,237,247,248,263,264,],[61,61,61,61,61,61,160,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'subprog_spec_is_push':([3,9,18,31,180,],[9,9,9,9,9,]),'c_name_list':([10,],[46,]),'iteration':([130,],[182,]),'block_body':([34,181,],[76,215,]),'cond_part':([121,247,],[176,176,]),'object_decl':([9,31,180,],[32,32,32,]),'subprog_decl':([3,9,18,31,180,],[17,33,17,33,33,]),'formal_part_opt':([48,49,],[89,91,]),'indexed_comp':([19,40,57,75,78,83,100,101,103,109,113,118,121,133,148,150,156,158,173,183,185,196,206,212,217,227,229,237,247,248,263,264,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'pragma':([0,7,9,18,31,51,94,180,258,282,],[2,21,35,54,35,21,21,35,21,21,]),'label_opt':([75,173,212,217,248,],[130,130,130,130,130,]),'block':([75,173,212,217,248,],[131,131,131,131,131,]),'name':([19,40,57,75,78,83,100,101,103,109,113,118,121,133,148,150,156,158,173,183,185,196,206,212,217,227,229,237,247,248,263,264,],[59,80,59,132,143,80,59,59,59,59,59,59,59,59,198,143,204,59,132,59,59,59,59,132,132,59,59,143,59,132,59,59,]),'discrim_part_opt':([77,],[139,]),'N':([249,],[269,]),'type_decl':([9,31,180,],[41,41,41,]),'def_id':([9,12,13,31,79,90,138,180,201,223,],[42,48,49,42,146,42,42,42,42,42,]),'context_spec':([3,],[18,]),'return_stmt':([75,173,212,217,248,],[135,135,135,135,135,]),'array_type':([78,194,],[140,226,]),'else_opt':([174,],[209,]),'condition':([121,183,247,],[177,218,177,]),'compound_name':([10,87,],[45,152,]),'expression':([19,101,113,121,183,227,247,],[58,167,58,175,175,256,175,]),'type_def':([194,],[228,]),'constr_array_type':([78,194,],[141,141,]),'simple_name':([1,10,19,40,57,75,78,83,85,87,99,100,101,103,109,113,118,121,133,148,150,156,158,173,183,185,196,203,206,212,217,222,227,229,237,247,248,263,264,265,],[5,44,62,82,82,82,82,82,151,44,162,82,82,82,82,62,82,82,82,82,82,82,82,82,82,82,82,243,82,82,82,243,82,82,82,82,82,82,82,276,]),'goal_symbol':([0,],[4,]),'selected_comp':([19,40,57,75,78,83,100,101,103,109,113,118,121,133,148,150,156,158,173,183,185,196,206,212,217,227,229,237,247,248,263,264,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'if_stmt':([75,173,212,217,248,],[127,127,127,127,127,]),'factor':([19,57,100,101,103,109,113,118,121,133,158,183,185,196,206,227,229,247,263,264,],[55,55,55,55,55,55,55,172,55,55,55,55,55,55,55,55,55,55,55,55,]),'literal':([19,57,100,101,103,109,113,118,121,133,158,183,185,196,206,227,229,247,263,264,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'unit':([3,18,],[15,53,]),'statement':([75,173,212,217,248,],[128,208,128,128,128,]),'type_completion':([139,],[193,]),'use_clause_opt':([14,52,],[50,93,]),'discrim_spec_s':([138,],[192,]),'pragma_arg':([19,113,],[70,170,]),'term':([19,57,100,101,103,109,113,121,133,158,183,185,196,206,227,229,247,263,264,],[71,71,71,71,168,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'cond_clause':([121,247,],[178,267,]),'mark':([203,222,],[244,254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal_symbol","S'",1,None,None,None),
  ('goal_symbol -> compilation','goal_symbol',1,'p_goal_symbol','grammar.py',15),
  ('pragma -> PRAGMA IDENTIFIER ;','pragma',3,'p_pragma','grammar.py',21),
  ('pragma -> PRAGMA simple_name ( pragma_arg_s ) ;','pragma',6,'p_pragma','grammar.py',22),
  ('pragma_arg_s -> pragma_arg','pragma_arg_s',1,'p_pragma_arg_s','grammar.py',26),
  ('pragma_arg_s -> pragma_arg_s , pragma_arg','pragma_arg_s',3,'p_pragma_arg_s','grammar.py',27),
  ('pragma_arg -> expression','pragma_arg',1,'p_pragma_arg','grammar.py',32),
  ('pragma_arg -> simple_name ARROW expression','pragma_arg',3,'p_pragma_arg','grammar.py',33),
  ('pragma_s -> <empty>','pragma_s',0,'p_pragma_s','grammar.py',37),
  ('pragma_s -> pragma_s pragma','pragma_s',2,'p_pragma_s','grammar.py',38),
  ('decl -> object_decl','decl',1,'p_decl','grammar.py',42),
  ('decl -> type_decl','decl',1,'p_decl','grammar.py',43),
  ('decl -> subtype_decl','decl',1,'p_decl','grammar.py',44),
  ('decl -> subprog_decl','decl',1,'p_decl','grammar.py',45),
  ('object_decl -> def_id_s : object_subtype_def ;','object_decl',4,'p_object_decl','grammar.py',49),
  ('def_id_s -> def_id','def_id_s',1,'p_def_id_s','grammar.py',63),
  ('def_id_s -> def_id_s , def_id','def_id_s',3,'p_def_id_s','grammar.py',64),
  ('def_id -> IDENTIFIER','def_id',1,'p_def_id','grammar.py',69),
  ('object_subtype_def -> subtype_ind','object_subtype_def',1,'p_object_subtype_def','grammar.py',74),
  ('object_subtype_def -> array_type','object_subtype_def',1,'p_object_subtype_def','grammar.py',75),
  ('type_decl -> TYPE IDENTIFIER discrim_part_opt type_completion ;','type_decl',5,'p_type_decl','grammar.py',80),
  ('discrim_part_opt -> <empty>','discrim_part_opt',0,'p_discrim_part_opt','grammar.py',84),
  ('discrim_part_opt -> discrim_part','discrim_part_opt',1,'p_discrim_part_opt','grammar.py',85),
  ('discrim_part_opt -> ( BOX )','discrim_part_opt',3,'p_discrim_part_opt','grammar.py',86),
  ('type_completion -> <empty>','type_completion',0,'p_type_completion','grammar.py',90),
  ('type_completion -> IS type_def','type_completion',2,'p_type_completion','grammar.py',91),
  ('type_def -> integer_type','type_def',1,'p_type_def','grammar.py',95),
  ('type_def -> array_type','type_def',1,'p_type_def','grammar.py',96),
  ('type_def -> record_type','type_def',1,'p_type_def','grammar.py',97),
  ('subtype_decl -> SUBTYPE IDENTIFIER IS subtype_ind ;','subtype_decl',5,'p_subtype_decl','grammar.py',102),
  ('subtype_ind -> name','subtype_ind',1,'p_subtype_ind','grammar.py',106),
  ('range_constraint -> RANGE range','range_constraint',2,'p_range_constraint','grammar.py',111),
  ('range -> simple_expression DOTDOT simple_expression','range',3,'p_range','grammar.py',115),
  ('integer_type -> range_spec','integer_type',1,'p_integer_type','grammar.py',122),
  ('integer_type -> MOD expression','integer_type',2,'p_integer_type','grammar.py',123),
  ('range_spec -> range_constraint','range_spec',1,'p_range_spec','grammar.py',127),
  ('array_type -> constr_array_type','array_type',1,'p_array_type','grammar.py',131),
  ('constr_array_type -> ARRAY iter_index_constraint OF component_subtype_def','constr_array_type',4,'p_constr_array_type','grammar.py',136),
  ('component_subtype_def -> subtype_ind','component_subtype_def',1,'p_component_subtype_def','grammar.py',149),
  ('iter_index_constraint -> ( range_s )','iter_index_constraint',3,'p_iter_index_constraint','grammar.py',154),
  ('range_s -> range','range_s',1,'p_range_s','grammar.py',159),
  ('range_s -> range_s , range','range_s',3,'p_range_s','grammar.py',160),
  ('record_type -> record_def','record_type',1,'p_record_type','grammar.py',165),
  ('record_def -> RECORD pragma_s comp_list END RECORD','record_def',5,'p_record_def','grammar.py',169),
  ('record_def -> NuLL RECORD','record_def',2,'p_record_def','grammar.py',170),
  ('comp_list -> NuLL ; pragma_s','comp_list',3,'p_comp_list','grammar.py',174),
  ('discrim_part -> ( discrim_spec_s )','discrim_part',3,'p_discrim_part','grammar.py',178),
  ('discrim_spec_s -> discrim_spec','discrim_spec_s',1,'p_discrim_spec_s','grammar.py',182),
  ('discrim_spec_s -> discrim_spec_s ; discrim_spec','discrim_spec_s',3,'p_discrim_spec_s','grammar.py',183),
  ('discrim_spec -> def_id_s : mark','discrim_spec',3,'p_discrim_spec','grammar.py',188),
  ('decl_part -> <empty>','decl_part',0,'p_decl_part','grammar.py',192),
  ('decl_part -> decl_item_or_body_s','decl_part',1,'p_decl_part','grammar.py',193),
  ('decl_item -> decl','decl_item',1,'p_decl_item','grammar.py',197),
  ('decl_item -> use_clause','decl_item',1,'p_decl_item','grammar.py',198),
  ('decl_item -> pragma','decl_item',1,'p_decl_item','grammar.py',199),
  ('decl_item_or_body_s -> decl_item_or_body','decl_item_or_body_s',1,'p_decl_item_or_body_s','grammar.py',203),
  ('decl_item_or_body_s -> decl_item_or_body_s decl_item_or_body','decl_item_or_body_s',2,'p_decl_item_or_body_s','grammar.py',204),
  ('decl_item_or_body -> body','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',209),
  ('decl_item_or_body -> decl_item','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',210),
  ('body -> subprog_body','body',1,'p_body','grammar.py',215),
  ('name -> simple_name','name',1,'p_name','grammar.py',220),
  ('name -> indexed_comp','name',1,'p_name','grammar.py',221),
  ('name -> selected_comp','name',1,'p_name','grammar.py',222),
  ('name -> operator_symbol','name',1,'p_name','grammar.py',223),
  ('mark -> simple_name','mark',1,'p_mark','grammar.py',229),
  ('mark -> mark . simple_name','mark',3,'p_mark','grammar.py',230),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','grammar.py',237),
  ('compound_name -> simple_name','compound_name',1,'p_compound_name','grammar.py',243),
  ('compound_name -> compound_name . simple_name','compound_name',3,'p_compound_name','grammar.py',244),
  ('c_name_list -> compound_name','c_name_list',1,'p_c_name_list','grammar.py',250),
  ('c_name_list -> c_name_list , compound_name','c_name_list',3,'p_c_name_list','grammar.py',251),
  ('used_char -> CHAR','used_char',1,'p_used_char','grammar.py',256),
  ('operator_symbol -> STRING','operator_symbol',1,'p_operator_symbol','grammar.py',260),
  ('indexed_comp -> name ( value_s )','indexed_comp',4,'p_indexed_comp','grammar.py',264),
  ('value_s -> value','value_s',1,'p_value_s','grammar.py',298),
  ('value_s -> value_s , value','value_s',3,'p_value_s','grammar.py',299),
  ('value -> simple_expression','value',1,'p_value','grammar.py',305),
  ('selected_comp -> name . simple_name','selected_comp',3,'p_selected_comp','grammar.py',310),
  ('selected_comp -> name . used_char','selected_comp',3,'p_selected_comp','grammar.py',311),
  ('selected_comp -> name . operator_symbol','selected_comp',3,'p_selected_comp','grammar.py',312),
  ('selected_comp -> name . ALL','selected_comp',3,'p_selected_comp','grammar.py',313),
  ('literal -> INT','literal',1,'p_literal','grammar.py',317),
  ('literal -> NuLL','literal',1,'p_literal','grammar.py',318),
  ('M -> <empty>','M',0,'p_M','grammar.py',323),
  ('expression -> relation','expression',1,'p_expression','grammar.py',328),
  ('expression -> expression logical M relation','expression',4,'p_expression','grammar.py',329),
  ('logical -> AND','logical',1,'p_logical','grammar.py',348),
  ('logical -> OR','logical',1,'p_logical','grammar.py',349),
  ('relation -> simple_expression relational simple_expression','relation',3,'p_relation','grammar.py',355),
  ('relational -> =','relational',1,'p_relational','grammar.py',365),
  ('relational -> NEQ','relational',1,'p_relational','grammar.py',366),
  ('relational -> <','relational',1,'p_relational','grammar.py',367),
  ('relational -> LEQ','relational',1,'p_relational','grammar.py',368),
  ('relational -> >','relational',1,'p_relational','grammar.py',369),
  ('relational -> GEQ','relational',1,'p_relational','grammar.py',370),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','grammar.py',375),
  ('simple_expression -> simple_expression adding term','simple_expression',3,'p_simple_expression','grammar.py',376),
  ('adding -> +','adding',1,'p_adding','grammar.py',387),
  ('adding -> -','adding',1,'p_adding','grammar.py',388),
  ('adding -> &','adding',1,'p_adding','grammar.py',389),
  ('term -> factor','term',1,'p_term','grammar.py',394),
  ('term -> term multiplying factor','term',3,'p_term','grammar.py',395),
  ('multiplying -> *','multiplying',1,'p_multiplying','grammar.py',406),
  ('multiplying -> /','multiplying',1,'p_multiplying','grammar.py',407),
  ('multiplying -> MOD','multiplying',1,'p_multiplying','grammar.py',408),
  ('multiplying -> STARSTAR','multiplying',1,'p_multiplying','grammar.py',409),
  ('factor -> primary','factor',1,'p_factor','grammar.py',414),
  ('primary -> literal','primary',1,'p_primary','grammar.py',419),
  ('primary -> name','primary',1,'p_primary','grammar.py',420),
  ('primary -> parenthesized_primary','primary',1,'p_primary','grammar.py',421),
  ('parenthesized_primary -> ( simple_expression )','parenthesized_primary',3,'p_parenthesized_primary','grammar.py',427),
  ('statement_s -> statement','statement_s',1,'p_statement_s','grammar.py',432),
  ('statement_s -> statement_s M statement','statement_s',3,'p_statement_s','grammar.py',433),
  ('statement -> unlabeled','statement',1,'p_statement','grammar.py',442),
  ('unlabeled -> simple_stmt','unlabeled',1,'p_unlabeled','grammar.py',447),
  ('unlabeled -> compound_stmt','unlabeled',1,'p_unlabeled','grammar.py',448),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',452),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',453),
  ('simple_stmt -> procedure_call','simple_stmt',1,'p_simple_stmt','grammar.py',454),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',458),
  ('compound_stmt -> loop_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',459),
  ('compound_stmt -> block','compound_stmt',1,'p_compound_stmt','grammar.py',460),
  ('assign_stmt -> name ASSIGN simple_expression ;','assign_stmt',4,'p_assign_stmt','grammar.py',465),
  ('if_stmt -> IF cond_clause_s else_opt END IF ;','if_stmt',6,'p_if_stmt','grammar.py',472),
  ('cond_clause_s -> cond_clause','cond_clause_s',1,'p_cond_clause_s','grammar.py',479),
  ('cond_clause_s -> cond_clause_s ELSIF M cond_clause','cond_clause_s',4,'p_cond_clause_s','grammar.py',480),
  ('N -> <empty>','N',0,'p_N','grammar.py',489),
  ('cond_clause -> cond_part M statement_s N','cond_clause',4,'p_cond_clause','grammar.py',494),
  ('cond_part -> condition THEN','cond_part',2,'p_cond_part','grammar.py',501),
  ('condition -> expression','condition',1,'p_condition','grammar.py',506),
  ('else_opt -> <empty>','else_opt',0,'p_else_opt','grammar.py',511),
  ('else_opt -> ELSE M statement_s','else_opt',3,'p_else_opt','grammar.py',512),
  ('loop_stmt -> label_opt iteration basic_loop ;','loop_stmt',4,'p_loop_stmt','grammar.py',522),
  ('label_opt -> <empty>','label_opt',0,'p_label_opt','grammar.py',526),
  ('label_opt -> IDENTIFIER :','label_opt',2,'p_label_opt','grammar.py',527),
  ('iteration -> <empty>','iteration',0,'p_iteration','grammar.py',531),
  ('iteration -> WHILE condition','iteration',2,'p_iteration','grammar.py',532),
  ('basic_loop -> LOOP statement_s END LOOP','basic_loop',4,'p_basic_loop','grammar.py',536),
  ('block -> label_opt block_decl block_body END ;','block',5,'p_block','grammar.py',540),
  ('block_decl -> <empty>','block_decl',0,'p_block_decl','grammar.py',544),
  ('block_decl -> DECLARE decl_part','block_decl',2,'p_block_decl','grammar.py',545),
  ('block_body -> BEGIN statement_s','block_body',2,'p_block_body','grammar.py',549),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt','grammar.py',554),
  ('return_stmt -> RETURN simple_expression ;','return_stmt',3,'p_return_stmt','grammar.py',555),
  ('subprog_decl -> subprog_spec ;','subprog_decl',2,'p_subprog_decl','grammar.py',559),
  ('subprog_spec -> PROCEDURE def_id formal_part_opt','subprog_spec',3,'p_subprog_spec','grammar.py',566),
  ('subprog_spec -> FUNCTION def_id formal_part_opt RETURN name','subprog_spec',5,'p_subprog_spec','grammar.py',567),
  ('subprog_spec -> FUNCTION def_id','subprog_spec',2,'p_subprog_spec','grammar.py',568),
  ('formal_part_opt -> <empty>','formal_part_opt',0,'p_formal_part_opt','grammar.py',577),
  ('formal_part_opt -> formal_part','formal_part_opt',1,'p_formal_part_opt','grammar.py',578),
  ('formal_part -> ( param_s )','formal_part',3,'p_formal_part','grammar.py',583),
  ('param_s -> param','param_s',1,'p_param_s','grammar.py',588),
  ('param_s -> param_s ; param','param_s',3,'p_param_s','grammar.py',589),
  ('param -> def_id_s : mark','param',3,'p_param','grammar.py',598),
  ('subprog_spec_is_push -> subprog_spec IS','subprog_spec_is_push',2,'p_subprog_spec_is_push','grammar.py',607),
  ('subprog_body -> subprog_spec_is_push decl_part block_body END ;','subprog_body',5,'p_subprog_body','grammar.py',611),
  ('procedure_call -> name ;','procedure_call',2,'p_procedure_call','grammar.py',615),
  ('use_clause -> USE name_s ;','use_clause',3,'p_use_clause','grammar.py',619),
  ('use_clause -> USE TYPE name_s ;','use_clause',4,'p_use_clause','grammar.py',620),
  ('name_s -> name','name_s',1,'p_name_s','grammar.py',624),
  ('name_s -> name_s , name','name_s',3,'p_name_s','grammar.py',625),
  ('compilation -> <empty>','compilation',0,'p_compilation','grammar.py',630),
  ('compilation -> compilation comp_unit','compilation',2,'p_compilation','grammar.py',631),
  ('compilation -> pragma pragma_s','compilation',2,'p_compilation','grammar.py',632),
  ('comp_unit -> context_spec unit pragma_s','comp_unit',3,'p_comp_unit','grammar.py',636),
  ('comp_unit -> unit pragma_s','comp_unit',2,'p_comp_unit','grammar.py',637),
  ('context_spec -> with_clause use_clause_opt','context_spec',2,'p_context_spec','grammar.py',641),
  ('context_spec -> context_spec with_clause use_clause_opt','context_spec',3,'p_context_spec','grammar.py',642),
  ('context_spec -> context_spec pragma','context_spec',2,'p_context_spec','grammar.py',643),
  ('with_clause -> WITH c_name_list ;','with_clause',3,'p_with_clause','grammar.py',647),
  ('use_clause_opt -> <empty>','use_clause_opt',0,'p_use_clause_opt','grammar.py',651),
  ('use_clause_opt -> use_clause_opt use_clause','use_clause_opt',2,'p_use_clause_opt','grammar.py',652),
  ('unit -> subprog_decl','unit',1,'p_unit','grammar.py',656),
  ('unit -> subprog_body','unit',1,'p_unit','grammar.py',657),
]
