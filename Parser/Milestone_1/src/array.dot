// Abstract Syntax Tree
digraph {
	"0x7fc3e772d748" [label=START]
	"0x7fc3e7adfdd8" [label=compilation]
	"0x7fc3e772d748" -> "0x7fc3e7adfdd8"
	"0x7fc3e77bb6a0" [label=comp_unit]
	"0x7fc3e7adfdd8" -> "0x7fc3e77bb6a0"
	"0x7fc3e772d160" [label=context_spec]
	"0x7fc3e77bb6a0" -> "0x7fc3e772d160"
	"0x7fc3e7adff60" [label=with]
	"0x7fc3e772d160" -> "0x7fc3e7adff60"
	"0x7fc3e7adfe10" [label="Ada.Text_IO"]
	"0x7fc3e7adff60" -> "0x7fc3e7adfe10"
	"0x7fc3e7adfda0" [label=use_clause_opt]
	"0x7fc3e772d160" -> "0x7fc3e7adfda0"
	"0x7fc3e77bb1d0" [label=USE]
	"0x7fc3e7adfda0" -> "0x7fc3e77bb1d0"
	"0x7fc3e77bb0b8" [label="Ada.Text_IO"]
	"0x7fc3e77bb1d0" -> "0x7fc3e77bb0b8"
	"0x7fc3e77bb2b0" [label=UNIT]
	"0x7fc3e77bb6a0" -> "0x7fc3e77bb2b0"
	"0x7fc3e77bbe48" [label=subprog_body]
	"0x7fc3e77bb2b0" -> "0x7fc3e77bbe48"
	"0x7fc3e77bb048" [label=IS]
	"0x7fc3e77bbe48" -> "0x7fc3e77bb048"
	"0x7fc3e77bb278" [label=procedure]
	"0x7fc3e77bb048" -> "0x7fc3e77bb278"
	"0x7fc3e7adff98" [label=demo]
	"0x7fc3e77bb278" -> "0x7fc3e7adff98"
	"0x7fc3e77bb710" [label=":"]
	"0x7fc3e77bbe48" -> "0x7fc3e77bb710"
	"0x7fc3e77bb240" [label=squares]
	"0x7fc3e77bb710" -> "0x7fc3e77bb240"
	"0x7fc3e77bb5f8" [label=array]
	"0x7fc3e77bb710" -> "0x7fc3e77bb5f8"
	"0x7fc3e77bb550" [label=".."]
	"0x7fc3e77bb5f8" -> "0x7fc3e77bb550"
	"0x7fc3e77bb4a8" [label=1]
	"0x7fc3e77bb550" -> "0x7fc3e77bb4a8"
	"0x7fc3e77bb3c8" [label=10]
	"0x7fc3e77bb550" -> "0x7fc3e77bb3c8"
	"0x7fc3e77bb668" [label=component_subtype_def]
	"0x7fc3e77bb5f8" -> "0x7fc3e77bb668"
	"0x7fc3e77bb630" [label=integer]
	"0x7fc3e77bb668" -> "0x7fc3e77bb630"
	"0x7fc3e77bbbe0" [label=begin]
	"0x7fc3e77bbe48" -> "0x7fc3e77bbbe0"
	"0x7fc3e77bbda0" [label=handled_stmt_s]
	"0x7fc3e77bbbe0" -> "0x7fc3e77bbda0"
	"0x7fc3e77bbc88" [label=LOOP_STMT]
	"0x7fc3e77bbda0" -> "0x7fc3e77bbc88"
	"0x7fc3e77bb860" [label=iteration]
	"0x7fc3e77bbc88" -> "0x7fc3e77bb860"
	"0x7fc3e77bb7f0" [label="for i"]
	"0x7fc3e77bb860" -> "0x7fc3e77bb7f0"
	"0x7fc3e77bb6d8" [label=".."]
	"0x7fc3e77bb860" -> "0x7fc3e77bb6d8"
	"0x7fc3e77bb400" [label=1]
	"0x7fc3e77bb6d8" -> "0x7fc3e77bb400"
	"0x7fc3e77bb198" [label=10]
	"0x7fc3e77bb6d8" -> "0x7fc3e77bb198"
	"0x7fc3e77bbb00" [label=loop]
	"0x7fc3e77bbc88" -> "0x7fc3e77bbb00"
	"0x7fc3e77bba90" [label=statement_s]
	"0x7fc3e77bbb00" -> "0x7fc3e77bba90"
	"0x7fc3e77bb908" [label=":="]
	"0x7fc3e77bba90" -> "0x7fc3e77bb908"
	"0x7fc3e77bb978" [label="squares(i)"]
	"0x7fc3e77bb908" -> "0x7fc3e77bb978"
	"0x7fc3e77bbb70" [label="*"]
	"0x7fc3e77bb908" -> "0x7fc3e77bbb70"
	"0x7fc3e77bb9e8" [label=i]
	"0x7fc3e77bbb70" -> "0x7fc3e77bb9e8"
	"0x7fc3e77bb828" [label=2]
	"0x7fc3e77bbb70" -> "0x7fc3e77bb828"
	"0x7fc3e77bbd30" [label=":="]
	"0x7fc3e77bba90" -> "0x7fc3e77bbd30"
	"0x7fc3e77bbba8" [label=i]
	"0x7fc3e77bbd30" -> "0x7fc3e77bbba8"
	"0x7fc3e77bbc50" [label="+"]
	"0x7fc3e77bbd30" -> "0x7fc3e77bbc50"
	"0x7fc3e77bbac8" [label=i]
	"0x7fc3e77bbc50" -> "0x7fc3e77bbac8"
	"0x7fc3e77bb9b0" [label=5]
	"0x7fc3e77bbc50" -> "0x7fc3e77bb9b0"
	"0x7fc3e77bb780" [label=demo]
	"0x7fc3e77bbe48" -> "0x7fc3e77bb780"
	"0x7fc3e77bbe80" [label=pragma_s]
	"0x7fc3e77bb6a0" -> "0x7fc3e77bbe80"
}
