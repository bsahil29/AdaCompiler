digraph Parse_tree {
	goal_symbol0[ label ="goal_symbol"];
	compilation0[ label ="compilation"];
	goal_symbol0->compilation0;
	compilation0[ label ="compilation"];
	compilation1[ label ="compilation"];
	compilation0->compilation1;
	comp_unit0[ label ="comp_unit"];
	compilation0->comp_unit0;
	comp_unit0[ label ="comp_unit"];
	context_spec0[ label ="context_spec"];
	comp_unit0->context_spec0;
	private_opt0[ label ="private_opt"];
	comp_unit0->private_opt0;
	unit0[ label ="unit"];
	comp_unit0->unit0;
	pragma_s0[ label ="pragma_s"];
	comp_unit0->pragma_s0;
	pragma_s0[ label ="pragma_s"];
	empty0[ label ="<empty>"];
	pragma_s0->empty0;
	unit0[ label ="unit"];
	subprog_body0[ label ="subprog_body"];
	unit0->subprog_body0;
	subprog_body0[ label ="subprog_body"];
	subprog_spec_is_push0[ label ="subprog_spec_is_push"];
	subprog_body0->subprog_spec_is_push0;
	decl_part0[ label ="decl_part"];
	subprog_body0->decl_part0;
	block_body0[ label ="block_body"];
	subprog_body0->block_body0;
	END0[ label ="END"];
	subprog_body0->END0;
	id_opt0[ label ="id_opt"];
	subprog_body0->id_opt0;
	semi_colon0[ label =";"];
	subprog_body0->semi_colon0;
	id_opt0[ label ="id_opt"];
	designator0[ label ="designator"];
	id_opt0->designator0;
	designator0[ label ="designator"];
	compound_name0[ label ="compound_name"];
	designator0->compound_name0;
	compound_name0[ label ="compound_name"];
	simple_name0[ label ="simple_name"];
	compound_name0->simple_name0;
	simple_name0[ label ="simple_name"];
	IDENTIFIER0[ label ="IDENTIFIER"];
	simple_name0->IDENTIFIER0;
	block_body0[ label ="block_body"];
	BEGIN0[ label ="BEGIN"];
	block_body0->BEGIN0;
	handled_stmt_s0[ label ="handled_stmt_s"];
	block_body0->handled_stmt_s0;
	handled_stmt_s0[ label ="handled_stmt_s"];
	statement_s0[ label ="statement_s"];
	handled_stmt_s0->statement_s0;
	except_handler_part_opt0[ label ="except_handler_part_opt"];
	handled_stmt_s0->except_handler_part_opt0;
	except_handler_part_opt0[ label ="except_handler_part_opt"];
	empty1[ label ="<empty>"];
	except_handler_part_opt0->empty1;
	statement_s0[ label ="statement_s"];
	statement0[ label ="statement"];
	statement_s0->statement0;
	statement0[ label ="statement"];
	unlabeled0[ label ="unlabeled"];
	statement0->unlabeled0;
	unlabeled0[ label ="unlabeled"];
	simple_stmt0[ label ="simple_stmt"];
	unlabeled0->simple_stmt0;
	simple_stmt0[ label ="simple_stmt"];
	procedure_call0[ label ="procedure_call"];
	simple_stmt0->procedure_call0;
	procedure_call0[ label ="procedure_call"];
	name0[ label ="name"];
	procedure_call0->name0;
	semi_colon1[ label =";"];
	procedure_call0->semi_colon1;
	name0[ label ="name"];
	indexed_comp0[ label ="indexed_comp"];
	name0->indexed_comp0;
	indexed_comp0[ label ="indexed_comp"];
	name1[ label ="name"];
	indexed_comp0->name1;
	open_bracket0[ label ="("];
	indexed_comp0->open_bracket0;
	value_s0[ label ="value_s"];
	indexed_comp0->value_s0;
	close_bracket0[ label =")"];
	indexed_comp0->close_bracket0;
	value_s0[ label ="value_s"];
	value0[ label ="value"];
	value_s0->value0;
	value0[ label ="value"];
	expression0[ label ="expression"];
	value0->expression0;
	expression0[ label ="expression"];
	relation0[ label ="relation"];
	expression0->relation0;
	relation0[ label ="relation"];
	simple_expression0[ label ="simple_expression"];
	relation0->simple_expression0;
	simple_expression0[ label ="simple_expression"];
	term0[ label ="term"];
	simple_expression0->term0;
	term0[ label ="term"];
	factor0[ label ="factor"];
	term0->factor0;
	factor0[ label ="factor"];
	primary0[ label ="primary"];
	factor0->primary0;
	primary0[ label ="primary"];
	literal0[ label ="literal"];
	primary0->literal0;
	literal0[ label ="literal"];
	used_char0[ label ="used_char"];
	literal0->used_char0;
	used_char0[ label ="used_char"];
	CHAR0[ label ="CHAR"];
	used_char0->CHAR0;
	name1[ label ="name"];
	simple_name1[ label ="simple_name"];
	name1->simple_name1;
	simple_name1[ label ="simple_name"];
	IDENTIFIER1[ label ="IDENTIFIER"];
	simple_name1->IDENTIFIER1;
	decl_part0[ label ="decl_part"];
	empty2[ label ="<empty>"];
	decl_part0->empty2;
	subprog_spec_is_push0[ label ="subprog_spec_is_push"];
	subprog_spec0[ label ="subprog_spec"];
	subprog_spec_is_push0->subprog_spec0;
	IS0[ label ="IS"];
	subprog_spec_is_push0->IS0;
	subprog_spec0[ label ="subprog_spec"];
	PROCEDURE0[ label ="PROCEDURE"];
	subprog_spec0->PROCEDURE0;
	compound_name1[ label ="compound_name"];
	subprog_spec0->compound_name1;
	formal_part_opt0[ label ="formal_part_opt"];
	subprog_spec0->formal_part_opt0;
	formal_part_opt0[ label ="formal_part_opt"];
	empty3[ label ="<empty>"];
	formal_part_opt0->empty3;
	compound_name1[ label ="compound_name"];
	simple_name2[ label ="simple_name"];
	compound_name1->simple_name2;
	simple_name2[ label ="simple_name"];
	IDENTIFIER2[ label ="IDENTIFIER"];
	simple_name2->IDENTIFIER2;
	private_opt0[ label ="private_opt"];
	empty4[ label ="<empty>"];
	private_opt0->empty4;
	context_spec0[ label ="context_spec"];
	with_clause0[ label ="with_clause"];
	context_spec0->with_clause0;
	use_clause_opt0[ label ="use_clause_opt"];
	context_spec0->use_clause_opt0;
	use_clause_opt0[ label ="use_clause_opt"];
	use_clause_opt1[ label ="use_clause_opt"];
	use_clause_opt0->use_clause_opt1;
	use_clause0[ label ="use_clause"];
	use_clause_opt0->use_clause0;
	use_clause0[ label ="use_clause"];
	USE0[ label ="USE"];
	use_clause0->USE0;
	name_s0[ label ="name_s"];
	use_clause0->name_s0;
	semi_colon2[ label =";"];
	use_clause0->semi_colon2;
	name_s0[ label ="name_s"];
	name2[ label ="name"];
	name_s0->name2;
	name2[ label ="name"];
	simple_name3[ label ="simple_name"];
	name2->simple_name3;
	simple_name3[ label ="simple_name"];
	IDENTIFIER3[ label ="IDENTIFIER"];
	simple_name3->IDENTIFIER3;
	use_clause_opt1[ label ="use_clause_opt"];
	empty5[ label ="<empty>"];
	use_clause_opt1->empty5;
	with_clause0[ label ="with_clause"];
	WITH0[ label ="WITH"];
	with_clause0->WITH0;
	c_name_list0[ label ="c_name_list"];
	with_clause0->c_name_list0;
	semi_colon3[ label =";"];
	with_clause0->semi_colon3;
	c_name_list0[ label ="c_name_list"];
	compound_name2[ label ="compound_name"];
	c_name_list0->compound_name2;
	compound_name2[ label ="compound_name"];
	simple_name4[ label ="simple_name"];
	compound_name2->simple_name4;
	simple_name4[ label ="simple_name"];
	IDENTIFIER4[ label ="IDENTIFIER"];
	simple_name4->IDENTIFIER4;
	compilation1[ label ="compilation"];
	empty6[ label ="<empty>"];
	compilation1->empty6;
}
