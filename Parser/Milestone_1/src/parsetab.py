
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "goal_symbolABORT ABS ABSTRACT ACCEPT ACCESS ALIASED ALL AND ARRAY ARROW ASSIGN AT BEGIN BODY BOX CASE CHAR CONSTANT DECLARE DELAY DELTA DIGITS DO DOTDOT ELSE ELSIF END ENTRY EXCEPTION EXIT FLOAT FOR FUNCTION GENERIC GEQ IDENTIFIER IF IN INT IS LEQ LIMITED LL LOOP MOD NEQ NEW NOT NuLL OF OR OTHERS OUT PACKAGE PRAGMA PRIVATE PROCEDURE PROTECTED RAISE RANGE RECORD REM RENAMES REQUEUE RETURN REVERSE RR SELECT SEPARATE STARSTAR STRING SUBTYPE TAGGED TASK TERMINATE THEN TICK TYPE UNTIL USE WHEN WHILE WITH XORgoal_symbol : compilation\n    pragma  : PRAGMA IDENTIFIER ';'\n\t   | PRAGMA simple_name '(' pragma_arg_s ')' ';'\n\tpragma_arg_s : pragma_arg\n\t   | pragma_arg_s ',' pragma_arg\n\tpragma_arg : expression\n\t   | simple_name ARROW expression\n\tpragma_s :\n\t   | pragma_s pragma\n\tdecl    : object_decl\n\t   | number_decl\n\t   | type_decl\n\t   | subtype_decl\n\t   | subprog_decl\n\t   | pkg_decl\n\t   | task_decl\n\t   | prot_decl\n\t   | exception_decl\n\t   | rename_decl\n\t   | generic_decl\n\t   | body_stub\n\t   | error ';'\n\tobject_decl : def_id_s ':' object_qualifier_opt object_subtype_def init_opt ';'   \n\tdef_id_s : def_id\n\t   | def_id_s ',' def_id\n\tdef_id  : IDENTIFIER\n\tobject_qualifier_opt :\n\t   | ALIASED\n\t   | CONSTANT\n\t   | ALIASED CONSTANT\n\tobject_subtype_def : subtype_ind\n\t   | array_type\n\tinit_opt :\n\t   | ASSIGN expression\n\tnumber_decl : def_id_s ':' CONSTANT ASSIGN expression ';'\n\ttype_decl : TYPE IDENTIFIER discrim_part_opt type_completion ';'\n\tdiscrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\ttype_completion :\n\t   | IS type_def\n\ttype_def : enumeration_type \n\t   | integer_type\n\t   | real_type\n\t   | array_type\n\t   | record_type\n\t   | access_type\n\t   | derived_type\n\t   | private_type\n\tsubtype_decl : SUBTYPE IDENTIFIER IS subtype_ind ';'\n\tsubtype_ind : name constraint\n\t   | name\n\tconstraint : range_constraint\n\t   | decimal_digits_constraint\n\tdecimal_digits_constraint : DIGITS expression range_constr_opt\n\tderived_type : NEW subtype_ind\n\t   | NEW subtype_ind WITH PRIVATE\n\t   | NEW subtype_ind WITH record_def\n\t   | ABSTRACT NEW subtype_ind WITH PRIVATE\n\t   | ABSTRACT NEW subtype_ind WITH record_def\n\trange_constraint : RANGE range\n\trange : simple_expression DOTDOT simple_expression\n\tenumeration_type : '(' enum_id_s ')'\n\tenum_id_s : enum_id\n\t   | enum_id_s ',' enum_id\n\tenum_id : IDENTIFIER\n\t   | CHAR\n\tinteger_type : range_spec\n\t   | MOD expression\n\trange_spec : range_constraint\n\trange_spec_opt :\n\t   | range_spec\n\treal_type : float_type\n\t   | fixed_type\n\tfloat_type : DIGITS expression range_spec_opt\n\tfixed_type : DELTA expression range_spec\n\t   | DELTA expression DIGITS expression range_spec_opt\n\tarray_type : unconstr_array_type\n\t   | constr_array_type\n\tunconstr_array_type : ARRAY '(' index_s ')' OF component_subtype_def\n\tconstr_array_type : ARRAY iter_index_constraint OF component_subtype_def\n\tcomponent_subtype_def : aliased_opt subtype_ind\n\taliased_opt : \n\t   | ALIASED\n\tindex_s : index\n\t   | index_s ',' index\n\tindex : name RANGE BOX\n\titer_index_constraint : '(' iter_discrete_range_s ')'\n\titer_discrete_range_s : discrete_range\n\t   | iter_discrete_range_s ',' discrete_range\n\tdiscrete_range : name range_constr_opt\n\t   | range\n\trange_constr_opt :\n\t   | range_constraint\n\trecord_type : tagged_opt limited_opt record_def\n\trecord_def : RECORD pragma_s comp_list END RECORD\n\t   | NuLL RECORD\n\ttagged_opt :\n\t   | TAGGED\n\t   | ABSTRACT TAGGED\n\tcomp_list : comp_decl_s variant_part_opt\n\t   | variant_part pragma_s\n\t   | NuLL ';' pragma_s\n\tcomp_decl_s : comp_decl\n\t   | comp_decl_s pragma_s comp_decl\n\tvariant_part_opt : pragma_s\n\t   | pragma_s variant_part pragma_s\n\tcomp_decl : def_id_s ':' component_subtype_def init_opt ';'\n\t   | error ';'\n\tdiscrim_part : '(' discrim_spec_s ')'\n\tdiscrim_spec_s : discrim_spec\n\t   | discrim_spec_s ';' discrim_spec\n\tdiscrim_spec : def_id_s ':' access_opt mark init_opt\n\t   | error\n\taccess_opt :\n\t   | ACCESS\n\tvariant_part : CASE simple_name IS pragma_s variant_s END CASE ';'\n\tvariant_s : variant\n\t   | variant_s variant\n\tvariant : WHEN choice_s ARROW pragma_s comp_list\n\tchoice_s : choice\n\t   | choice_s '|' choice\n\tchoice : expression\n\t   | discrete_with_range\n\t   | OTHERS\n\tdiscrete_with_range : name range_constraint\n\t   | range\n\taccess_type : ACCESS subtype_ind\n\t   | ACCESS CONSTANT subtype_ind\n\t   | ACCESS ALL subtype_ind\n\tdecl_part :\n\t   | decl_item_or_body_s1\n\tdecl_item_s : \n\t   | decl_item_s1\n\tdecl_item_s1 : decl_item\n\t   | decl_item_s1 decl_item\n\tdecl_item : decl\n\t   | use_clause\n\t   | rep_spec\n\t   | pragma\n\tdecl_item_or_body_s1 : decl_item_or_body\n\t   | decl_item_or_body_s1 decl_item_or_body\n\tdecl_item_or_body : body\n\t   | decl_item\n\tbody : subprog_body\n\t   | pkg_body\n\t   | task_body\n\t   | prot_body\n\tname : simple_name\n\t   | indexed_comp\n\t   | selected_comp\n\t   | attribute\n\t   | operator_symbol\n\tmark : simple_name\n\t   | mark TICK attribute_id\n\t   | mark '.' simple_name\n\tsimple_name : IDENTIFIER\n\tcompound_name : simple_name\n\t   | compound_name '.' simple_name\n\tc_name_list : compound_name\n\t    | c_name_list ',' compound_name\n\tused_char : CHAR\n\toperator_symbol : STRING\n\tindexed_comp : name '(' value_s ')'\n\tvalue_s : value\n\t   | value_s ',' value\n\tvalue : expression\n\t   | comp_assoc\n\t   | discrete_with_range\n\t   | error\n\tselected_comp : name '.' simple_name\n\t   | name '.' used_char\n\t   | name '.' operator_symbol\n\t   | name '.' ALL\n\tattribute : name TICK attribute_id\n\tattribute_id : IDENTIFIER\n\t   | DIGITS\n\t   | DELTA\n\t   | ACCESS\n\tliteral : INT\n       | FLOAT\n\t   | NuLL\n\taggregate : '(' comp_assoc ')'\n\t   | '(' expression WITH value_s ')'\n\t   | '(' expression WITH NuLL RECORD ')'\n\t   | '(' NuLL RECORD ')'\n\tcomp_assoc : choice_s ARROW expression\n\texpression : relation\n\t   | expression logical relation\n\t   | expression short_circuit relation\n\tlogical : AND\n\t   | OR\n\t   | XOR\n\tshort_circuit : AND THEN\n\t   | OR ELSE\n\trelation : simple_expression\n\t   | simple_expression relational simple_expression\n\t   | simple_expression membership range\n\t   | simple_expression membership name\n\trelational : '='\n\t   | NEQ\n\t   | '<'\n\t   | LEQ\n\t   | '>'\n\t   | GEQ\n\tmembership : IN\n\t   | NOT IN\n\tsimple_expression : unary term\n\t   | term\n\t   | simple_expression adding term\n\tunary   : '+'\n\t   | '-'\n\tadding  : '+'\n\t   | '-'\n\t   | '&'\n\tterm    : factor\n\t   | term multiplying factor\n\tmultiplying : '*'\n\t   | '/'\n\t   | MOD\n\t   | REM\n\t   | STARSTAR\n\tfactor : primary\n\t   | NOT primary\n\t   | ABS primary\n\tprimary : literal\n\t   | name\n\t   | allocator\n\t   | qualified\n\t   | parenthesized_primary\n\tparenthesized_primary : aggregate\n\t   | '(' expression ')'\n\tqualified : name TICK parenthesized_primary\n\tallocator : NEW name\n\t   | NEW qualified\n\tstatement_s : statement\n\t   | statement_s statement\n\tstatement : unlabeled\n\t   | label statement\n\tunlabeled : simple_stmt\n\t   | compound_stmt\n\tsimple_stmt : null_stmt\n\t   | assign_stmt\n\t   | exit_stmt\n\t   | return_stmt\n\t   | procedure_call\n\t   | delay_stmt\n\t   | abort_stmt\n\t   | raise_stmt\n\t   | code_stmt\n\t   | requeue_stmt\n\t   | error ';'\n\tcompound_stmt : if_stmt\n\t   | case_stmt\t\n\t   | loop_stmt\n\t   | block\n\t   | accept_stmt\n\t   | select_stmt\n\tlabel : LL IDENTIFIER RR\n\tnull_stmt : NuLL ';'\n\tassign_stmt : name ASSIGN expression ';'\n\tif_stmt : IF cond_clause_s else_opt END IF ';'\n\tcond_clause_s : cond_clause\n\t   | cond_clause_s ELSIF cond_clause\n\tcond_clause : cond_part statement_s\n\tcond_part : condition THEN\n\tcondition : expression\n\telse_opt :\n\t   | ELSE statement_s\n\tcase_stmt : case_hdr pragma_s alternative_s END CASE ';'\n\tcase_hdr : CASE expression IS\n\talternative_s :\n\t   | alternative_s alternative\n\talternative : WHEN choice_s ARROW statement_s\n\tloop_stmt : label_opt iteration basic_loop id_opt ';'\n\tlabel_opt :\n\t   | IDENTIFIER ':'\n\titeration :\n\t   | WHILE condition\n\t   | iter_part reverse_opt discrete_range\n\titer_part : FOR IDENTIFIER IN\n\treverse_opt :\n\t   | REVERSE\n\tbasic_loop : LOOP statement_s END LOOP\n\tid_opt :\n\t   | designator\n\tblock : label_opt block_decl block_body END id_opt ';'\n\tblock_decl :\n\t   | DECLARE decl_part\n\tblock_body : BEGIN handled_stmt_s\n\thandled_stmt_s : statement_s except_handler_part_opt \n\texcept_handler_part_opt :\n\t   | except_handler_part\n\texit_stmt : EXIT name_opt when_opt ';'\n\tname_opt :\n\t   | name\n\twhen_opt :\n\t   | WHEN condition\n\treturn_stmt : RETURN ';'\n\t   | RETURN expression ';'\n\tsubprog_decl : subprog_spec ';'\n\t   | generic_subp_inst ';'\n\t   | subprog_spec_is_push ABSTRACT ';'\n\tsubprog_spec : PROCEDURE compound_name formal_part_opt\n\t   | FUNCTION designator formal_part_opt RETURN name\n\t   | FUNCTION designator\n\tdesignator : compound_name\n\t   | STRING\n\tformal_part_opt : \n\t   | formal_part\n\tformal_part : '(' param_s ')'\n\tparam_s : param\n\t   | param_s ';' param\n\tparam : def_id_s ':' mode mark init_opt\n\t   | error\n\tmode :\n\t   | IN\n\t   | OUT\n\t   | IN OUT\n\t   | ACCESS\n\tsubprog_spec_is_push : subprog_spec IS\n\tsubprog_body : subprog_spec_is_push decl_part block_body END id_opt ';'\n\tprocedure_call : name ';'\n\tpkg_decl : pkg_spec ';'\n\t   | generic_pkg_inst ';'\n\tpkg_spec : PACKAGE compound_name IS decl_item_s private_part END c_id_opt\n\tprivate_part :\n\t   | PRIVATE decl_item_s\n\tc_id_opt : \n\t   | compound_name\n\tpkg_body : PACKAGE BODY compound_name IS decl_part body_opt END c_id_opt ';'\n\tbody_opt :\n\t   | block_body\n\tprivate_type : tagged_opt limited_opt PRIVATE\n\tlimited_opt :\n\t   | LIMITED\n\tuse_clause : USE name_s ';'\n\t   | USE TYPE name_s ';'\n\tname_s : name\n\t   | name_s ',' name\n\trename_decl : def_id_s ':' object_qualifier_opt subtype_ind renames ';'\n\t   | def_id_s ':' EXCEPTION renames ';'\n\t   | rename_unit\n\trename_unit : PACKAGE compound_name renames ';'\n\t   | subprog_spec renames ';'\n\t   | generic_formal_part PACKAGE compound_name renames ';'\n\t   | generic_formal_part subprog_spec renames ';'\n\trenames : RENAMES name\n\ttask_decl : task_spec ';'\n\ttask_spec : TASK simple_name task_def\n\t   | TASK TYPE simple_name discrim_part_opt task_def\n\ttask_def :\n\t   | IS entry_decl_s rep_spec_s task_private_opt END id_opt\n\ttask_private_opt :\n\t   | PRIVATE entry_decl_s rep_spec_s\n\ttask_body : TASK BODY simple_name IS decl_part block_body END id_opt ';'\n\tprot_decl : prot_spec ';'\n\tprot_spec : PROTECTED IDENTIFIER prot_def\n\t   | PROTECTED TYPE simple_name discrim_part_opt prot_def\n\tprot_def : IS prot_op_decl_s prot_private_opt END id_opt\n\tprot_private_opt :\n\t   | PRIVATE prot_elem_decl_s \n\tprot_op_decl_s : \n\t   | prot_op_decl_s prot_op_decl\n\tprot_op_decl : entry_decl\n\t   | subprog_spec ';'\n\t   | rep_spec\n\t   | pragma\n\tprot_elem_decl_s : \n\t   | prot_elem_decl_s prot_elem_decl\n\tprot_elem_decl : prot_op_decl \n    | comp_decl\n\tprot_body : PROTECTED BODY simple_name IS prot_op_body_s END id_opt ';'\n\tprot_op_body_s : pragma_s\n\t   | prot_op_body_s prot_op_body pragma_s\n\tprot_op_body : entry_body\n\t   | subprog_body\n\t   | subprog_spec ';'\n\tentry_decl_s : pragma_s\n\t   | entry_decl_s entry_decl pragma_s\n\tentry_decl : ENTRY IDENTIFIER formal_part_opt ';'\n\t   | ENTRY IDENTIFIER '(' discrete_range ')' formal_part_opt ';'\n\tentry_body : ENTRY IDENTIFIER formal_part_opt WHEN condition entry_body_part\n\t   | ENTRY IDENTIFIER '(' iter_part discrete_range ')' formal_part_opt WHEN condition entry_body_part\n\tentry_body_part : ';'\n\t   | IS decl_part block_body END id_opt ';'\n\trep_spec_s :\n\t   | rep_spec_s rep_spec pragma_s\n\tentry_call : procedure_call\n\taccept_stmt : accept_hdr ';'\n\t   | accept_hdr DO handled_stmt_s END id_opt ';'\n\taccept_hdr : ACCEPT entry_name formal_part_opt\n\tentry_name : simple_name\n\t   | entry_name '(' expression ')'\n\tdelay_stmt : DELAY expression ';'\n\t   | DELAY UNTIL expression ';'\n\tselect_stmt : select_wait\n\t   | async_select\n\t   | timed_entry_call\n\t   | cond_entry_call\n\tselect_wait : SELECT guarded_select_alt or_select else_opt  END SELECT ';'\n\tguarded_select_alt : select_alt\n\t   | WHEN condition ARROW select_alt\n\tor_select :\n\t   | or_select OR guarded_select_alt\n\tselect_alt : accept_stmt stmts_opt\n\t   | delay_stmt stmts_opt\n\t   | TERMINATE ';'\n\tdelay_or_entry_alt : delay_stmt stmts_opt\n\t   | entry_call stmts_opt\n\tasync_select : SELECT delay_or_entry_alt THEN ABORT statement_s END SELECT ';'\n\ttimed_entry_call : SELECT entry_call stmts_opt OR delay_stmt stmts_opt END SELECT ';'\n\tcond_entry_call : SELECT entry_call stmts_opt ELSE statement_s END SELECT ';'\n\tstmts_opt :\n\t   | statement_s\n\tabort_stmt : ABORT name_s ';'\n\tcompilation :\n\t   | compilation comp_unit\n\t   | pragma pragma_s\n\tcomp_unit : context_spec private_opt unit pragma_s\n\t   | private_opt unit pragma_s\n\tprivate_opt :\n\t   | PRIVATE\n\tcontext_spec : with_clause use_clause_opt\n\t   | context_spec with_clause use_clause_opt\n\t   | context_spec pragma\n\twith_clause : WITH c_name_list ';'\n\tuse_clause_opt :\n\t   | use_clause_opt use_clause\n\tunit : pkg_decl\n\t   | pkg_body\n\t   | subprog_decl\n\t   | subprog_body\n\t   | subunit\n\t   | generic_decl\n\t   | rename_unit\n\tsubunit : SEPARATE '(' compound_name ')' subunit_body\n\tsubunit_body : subprog_body\n\t   | pkg_body\n\t   | task_body\n\t   | prot_body\n\tbody_stub : TASK BODY simple_name IS SEPARATE ';'\n\t   | PACKAGE BODY compound_name IS SEPARATE ';'\n\t   | subprog_spec IS SEPARATE ';'\n\t   | PROTECTED BODY simple_name IS SEPARATE ';'\n\texception_decl : def_id_s ':' EXCEPTION ';'\n\texcept_handler_part : EXCEPTION exception_handler\n\t   | except_handler_part exception_handler\n\texception_handler : WHEN except_choice_s ARROW statement_s\n\t   | WHEN IDENTIFIER ':' except_choice_s ARROW statement_s\n\texcept_choice_s : except_choice\n\t   | except_choice_s '|' except_choice\n\texcept_choice : name\n\t   | OTHERS\n\traise_stmt : RAISE name_opt ';'\n\trequeue_stmt : REQUEUE name ';'\n\t   | REQUEUE name WITH ABORT ';'\n\tgeneric_decl : generic_formal_part subprog_spec ';'\n\t   | generic_formal_part pkg_spec ';'\n\tgeneric_formal_part : GENERIC\n\t   | generic_formal_part generic_formal\n\tgeneric_formal : param ';'\n\t   | TYPE simple_name generic_discrim_part_opt IS generic_type_def ';'\n\t   | WITH PROCEDURE simple_name formal_part_opt subp_default ';'\n\t   | WITH FUNCTION designator formal_part_opt RETURN name subp_default ';'\n\t   | WITH PACKAGE simple_name IS NEW name '(' BOX ')' ';'\n\t   | WITH PACKAGE simple_name IS NEW name ';'\n\t   | use_clause\n\tgeneric_discrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\tsubp_default :\n\t   | IS name\n\t   | IS BOX\n\tgeneric_type_def : '(' BOX ')'\n\t   | RANGE BOX\n\t   | MOD BOX\n\t   | DELTA BOX\n\t   | DELTA BOX DIGITS BOX\n\t   | DIGITS BOX\n\t   | array_type\n\t   | access_type\n\t   | private_type\n\t   | generic_derived_type\n\tgeneric_derived_type : NEW subtype_ind\n\t   | NEW subtype_ind WITH PRIVATE\n\t   | ABSTRACT NEW subtype_ind WITH PRIVATE\n\tgeneric_subp_inst : subprog_spec IS generic_inst\n\tgeneric_pkg_inst : PACKAGE compound_name IS generic_inst\n\tgeneric_inst : NEW name\n\trep_spec : attrib_def\n\t   | record_type_spec\n\t   | address_spec\n\tattrib_def : FOR mark USE expression ';'\n\trecord_type_spec : FOR mark USE RECORD align_opt comp_loc_s END RECORD ';'\n\talign_opt :\n\t   | AT MOD expression ';'\n\tcomp_loc_s :\n\t   | comp_loc_s mark AT expression RANGE range ';'\n\taddress_spec : FOR mark USE AT expression ';'\n\tcode_stmt : qualified ';'\n\t"
    
_lr_action_items = {'REM':([33,120,121,122,123,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,206,209,231,232,233,234,240,352,356,365,369,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,242,-230,-163,-149,-182,-227,-224,-225,-235,-234,242,-232,-183,-227,242,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-227,-157,-227,-185,-157,]),'DO':([33,152,318,393,459,460,608,811,],[-157,-310,473,-311,-393,-309,-392,-394,]),'END':([42,43,44,46,65,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,112,113,159,164,171,175,181,185,187,193,194,196,253,257,259,270,272,276,278,280,292,297,302,304,305,306,307,308,309,311,315,319,323,324,325,328,329,330,331,333,334,336,337,338,339,342,343,345,346,370,397,405,422,424,425,426,427,440,444,445,446,447,449,453,458,470,474,475,478,482,483,485,486,490,491,496,497,499,500,502,504,549,550,551,553,584,588,589,592,593,595,596,598,599,600,601,602,605,606,607,610,613,619,622,623,624,626,627,628,630,631,633,635,638,639,641,643,647,682,701,702,703,704,705,706,707,708,709,711,712,716,717,718,720,721,723,727,732,735,741,744,746,747,753,768,793,794,799,801,803,804,805,812,815,819,820,821,822,824,825,836,851,853,856,860,861,865,866,867,870,871,874,875,880,882,883,885,891,896,898,901,905,906,909,910,916,918,919,920,921,924,925,926,928,930,932,933,937,938,940,941,945,951,953,954,955,],[-2,-9,-324,-325,-302,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,-132,-343,-13,-492,-137,-141,-145,-458,-459,-345,-133,-349,-357,-303,-142,301,-22,-133,-347,-337,-344,-135,-134,-327,-131,-8,-363,-240,-253,-246,-244,-399,-236,-241,-258,-248,-8,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-292,-249,-290,-400,-238,-3,-346,-338,-136,548,-133,-332,-131,-446,-387,-379,-444,-8,-361,-496,-299,-323,-390,-272,-404,-414,-414,-402,-501,-268,-263,-239,-237,-293,-291,-252,-260,-328,681,-333,-36,-342,-8,-354,-374,713,-364,-368,719,-369,-365,-367,-494,-498,-322,-300,-271,728,-455,-456,734,736,-415,-268,-408,-406,-407,-416,745,-265,-395,-447,-448,-50,-443,-341,-23,-35,-442,792,-380,-8,-8,795,-445,-376,-377,-8,-366,-362,-500,809,813,-261,-273,823,-269,-264,-396,-294,-8,-387,-388,-378,-375,-370,-371,-372,-275,-457,869,-414,-414,-405,873,-403,-331,-355,-381,-373,-109,-497,-287,-391,-270,900,-407,-262,-449,-8,908,-104,-8,-356,-495,-274,-401,-106,-101,-8,-102,-413,-411,-450,-105,-8,-103,-382,-383,-385,-108,-412,-107,-499,-118,944,946,-119,-384,-117,-386,-120,]),'&':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,365,366,368,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,511,512,514,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,229,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,229,-182,-227,-224,-225,-235,-234,-208,-232,-183,-227,229,229,-210,229,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,229,-186,-164,-184,-227,-157,-227,-185,-157,]),'GEQ':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,225,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,225,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,225,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'AND':([33,120,121,122,123,126,127,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,203,205,206,209,231,232,233,234,240,349,352,356,360,361,365,367,368,369,373,374,377,380,381,382,383,384,385,386,387,388,389,390,391,451,457,461,489,494,506,507,509,511,512,514,583,603,620,640,649,673,684,691,692,700,724,725,755,808,843,897,],[-157,-180,-226,-228,-149,-216,215,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,215,-196,-182,-227,-224,-225,-235,-234,-208,215,-232,-183,-190,-189,-199,-198,-197,-210,215,-196,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,215,215,215,215,215,215,215,-182,-62,-186,-164,215,215,215,215,-184,215,215,215,215,215,215,-157,-185,215,215,215,]),'PACKAGE':([0,1,4,5,7,8,9,10,13,14,15,18,20,21,25,26,29,30,31,32,37,38,39,40,42,43,44,46,47,48,58,60,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,117,118,119,159,164,167,171,175,181,185,186,187,193,196,200,253,257,259,267,270,272,276,280,370,397,405,410,412,413,414,415,416,422,425,427,440,443,446,466,542,553,584,602,606,647,652,659,682,701,702,703,704,711,721,758,767,830,836,856,891,896,904,927,],[-417,-422,-8,28,-423,-422,-418,-428,-419,-430,-435,-432,49,-8,-436,-460,-434,-431,73,-433,28,-426,-428,-424,-2,-9,-324,-325,-461,155,-468,-421,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,73,-343,-13,-492,-137,73,-141,-145,-427,-8,-425,-429,-458,-459,-462,-345,271,-349,-357,-321,-303,-142,-22,-420,271,-347,-337,408,-344,-135,271,73,-3,-346,-338,-440,-439,-437,-438,73,-441,-136,271,73,-446,73,-444,73,-321,-36,-342,-494,-322,-50,-464,-463,-443,-341,-23,-35,-442,-445,-500,-467,73,-465,-331,-373,-356,-495,-466,73,]),'TYPE':([20,26,31,42,44,46,47,53,58,65,68,69,72,75,76,77,78,80,81,83,84,87,88,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,108,109,111,112,113,159,164,167,171,175,181,185,186,187,193,196,253,257,259,270,272,275,276,277,280,370,397,405,415,422,425,427,440,443,446,466,542,553,584,602,606,647,652,659,682,701,702,703,704,711,721,758,767,830,836,856,891,896,904,927,],[50,-460,74,-2,-324,-325,-461,162,-468,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,182,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,189,-148,-11,74,-343,-13,-492,-137,74,-141,-145,-458,-459,-462,-345,74,-349,-357,-321,-303,-142,-22,74,-347,-337,-344,-135,182,74,189,74,-3,-346,-338,74,-136,74,74,-446,74,-444,74,-321,-36,-342,-494,-322,-50,-464,-463,-443,-341,-23,-35,-442,-445,-500,-467,74,-465,-331,-373,-356,-495,-466,74,]),'STRING':([23,41,53,66,125,131,132,136,137,144,148,153,162,173,180,195,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,239,241,242,243,244,245,246,258,268,285,286,288,299,301,302,303,304,305,306,307,308,309,311,312,314,315,317,320,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,345,346,348,350,351,353,354,358,362,363,364,438,441,452,458,465,467,470,471,473,474,476,477,482,483,484,486,493,495,496,497,502,504,515,517,519,520,534,539,540,559,560,567,571,575,577,607,609,611,612,617,618,619,622,626,633,634,636,637,638,639,642,645,646,662,666,667,690,699,713,719,722,727,728,729,732,734,737,738,742,744,747,753,757,780,782,784,785,788,790,792,795,797,812,815,819,820,821,824,827,828,829,845,859,863,864,865,866,867,868,874,875,893,894,898,901,903,915,916,918,919,932,939,942,946,],[62,149,149,149,149,149,149,-212,149,149,-211,62,149,149,-27,149,149,149,149,-193,-191,-192,-214,-203,-200,149,-204,-206,-201,-205,-213,149,-202,-215,149,149,149,149,-220,-221,-218,149,-222,-219,149,149,149,-29,-28,149,62,-240,149,-253,-246,-244,-399,-236,-241,-258,149,149,-248,149,149,-245,-254,-256,149,149,-398,-251,-397,-250,149,-255,-242,149,-243,-257,-247,149,149,-249,-400,-238,149,149,149,149,149,149,-194,-195,-207,149,-30,149,-299,149,-282,-323,149,149,-390,149,-389,149,149,149,-501,149,149,-239,-237,-252,-260,149,149,149,149,149,149,149,149,149,149,149,149,149,-300,149,62,149,-283,149,-455,-456,149,-416,149,149,-266,149,-395,149,149,-259,149,149,149,149,-83,62,62,149,149,62,-281,-261,62,149,149,149,149,-396,-294,149,149,149,149,149,-84,149,62,62,149,-275,-457,149,149,149,149,149,149,149,-83,-83,149,-284,-287,-391,-270,149,-262,149,149,149,149,-401,149,149,-413,-411,149,-412,149,149,62,]),'RETURN':([33,34,62,63,64,152,169,195,199,249,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,393,394,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[-157,-158,-308,-309,-307,-310,268,303,-159,-309,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,303,-243,-257,-247,303,-249,-400,-238,-311,517,-299,-323,303,-390,303,-389,303,303,-501,303,-239,-237,-252,-260,-300,303,-455,-456,303,-416,303,-266,303,-395,-259,303,-261,303,303,303,-396,-294,-275,-457,303,303,303,303,303,-287,-391,-270,303,-262,303,303,-401,303,-413,-411,303,-412,]),'OTHERS':([125,237,351,353,515,642,737,757,828,829,939,],[204,204,204,204,204,749,204,204,749,749,204,]),'NEQ':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,224,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,224,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,224,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'FLOAT':([41,125,131,132,136,144,148,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,241,242,243,244,245,246,299,303,312,327,332,350,351,353,354,358,362,363,364,438,452,465,467,471,484,495,515,540,560,567,571,575,577,609,617,618,636,645,722,729,737,757,780,782,785,797,863,893,894,915,939,942,],[128,128,128,128,-212,128,-211,128,128,128,-193,-191,-192,-214,-203,-200,128,-204,-206,-201,-205,-213,128,-202,-215,128,128,128,-220,-221,-218,128,-222,-219,128,128,128,128,128,128,128,128,128,128,-194,-195,-207,128,128,128,-282,128,128,128,128,128,128,128,128,128,128,128,-283,128,128,128,128,-281,128,128,128,128,128,128,128,128,128,128,128,128,]),';':([12,16,19,24,27,33,34,35,36,45,51,54,55,59,62,63,64,67,82,85,86,89,107,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,150,152,158,160,161,163,170,172,174,179,184,192,198,199,231,232,233,234,235,240,247,248,250,252,261,269,273,274,282,284,287,289,291,293,296,301,303,314,316,318,321,322,340,341,347,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,393,395,399,401,402,404,406,418,428,432,433,434,435,436,437,439,442,450,451,454,455,456,457,459,460,468,469,472,479,481,488,489,494,501,505,511,512,513,514,516,518,523,525,526,527,531,536,541,548,552,554,555,556,557,558,561,562,563,568,569,570,572,573,574,578,579,580,581,582,583,585,586,591,594,597,603,608,611,620,640,644,649,651,653,654,655,658,663,664,665,668,669,672,673,679,680,681,683,684,691,700,710,713,714,719,726,728,733,734,754,755,756,759,760,762,763,765,769,771,773,777,778,779,786,789,791,792,795,796,798,802,807,808,811,814,816,817,826,832,834,835,837,838,840,843,849,850,852,862,864,872,878,879,884,886,887,888,889,892,895,899,902,911,912,914,917,923,931,946,947,949,950,],[42,44,46,65,69,-157,-158,115,-160,-309,159,164,-315,167,-308,-306,-307,171,181,185,69,187,196,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-304,-310,257,259,-339,-149,-348,-488,270,-37,-352,-154,-161,-159,-224,-225,-235,-234,370,-208,392,-312,-309,397,405,-490,69,-489,-40,-38,440,-37,-350,446,-358,-285,458,-295,470,474,486,-157,-295,502,504,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-311,-472,-114,-111,524,-340,-33,-305,553,-52,-31,-78,-32,-79,-33,584,-352,-156,602,-155,-286,606,607,-393,-309,-296,619,622,628,470,633,-267,639,-297,647,-62,-186,-61,-164,-313,652,-110,-483,-481,659,-482,-484,-314,-329,682,-74,-44,-43,-48,-49,-68,-42,-46,-47,-45,-70,-41,-73,-39,-53,-51,-54,701,702,703,-351,704,711,-359,718,721,-392,-285,732,747,753,-184,-472,-474,-473,758,-112,-477,-480,-128,-476,-478,-485,-34,-330,-326,-329,-56,-69,-71,-93,-309,-285,799,-285,812,-285,815,-285,-298,-185,830,-33,-475,-129,-130,-334,836,-63,-95,-72,-75,-76,-94,-81,-55,-285,-285,853,856,-360,860,861,-394,865,866,867,874,-113,-479,-486,-58,-57,-97,-71,-82,891,-353,896,-284,901,904,-487,909,-60,-59,-77,-80,-309,-33,916,918,925,928,930,932,-96,937,-285,928,953,954,]),'BOX':([254,283,519,528,532,533,535,537,757,764,785,890,],[398,430,653,660,663,664,668,669,831,834,848,848,]),'MOD':([33,120,121,122,123,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,206,209,231,232,233,234,240,352,356,365,369,377,380,381,382,383,384,385,386,387,388,389,390,391,403,429,509,512,514,604,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,241,-230,-163,-149,-182,-227,-224,-225,-235,-234,241,-232,-183,-227,241,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,532,560,-182,-186,-164,722,-184,-227,-157,-227,-185,-157,]),'DIGITS':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,231,232,233,234,238,240,260,300,352,356,359,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,403,429,432,511,512,514,649,669,692,755,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,-224,-225,-235,-234,385,-208,385,385,-232,-183,385,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,533,567,577,-62,-186,-164,-184,764,780,-185,]),'ACCESS':([166,238,260,300,359,403,429,522,],[263,381,381,381,381,534,534,657,]),'NuLL':([41,42,43,125,131,132,136,144,148,195,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,241,242,243,244,245,246,299,302,303,304,305,306,307,308,309,311,312,315,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,342,345,346,350,351,353,354,358,362,363,364,370,429,438,452,458,465,467,470,471,473,474,476,477,482,483,484,486,493,495,496,497,502,504,515,529,540,560,565,567,571,575,577,607,609,612,617,618,619,622,626,633,634,636,637,638,639,645,646,661,670,689,722,727,729,732,737,738,742,744,747,753,757,770,775,780,782,785,797,812,815,819,820,821,824,827,841,842,863,865,866,867,868,874,875,893,894,898,901,903,915,916,918,919,932,939,942,948,952,],[130,-2,-9,206,130,130,-212,130,-211,347,130,130,130,-193,-191,-192,-214,-203,-200,130,-204,-206,-201,-205,-213,130,-202,-215,130,130,130,-220,-221,-218,130,-222,-219,130,-240,130,-253,-246,-244,-399,-236,-241,-258,130,-248,-245,-254,-256,130,-398,-251,-397,-250,130,-255,-242,347,-243,-257,-247,347,-249,-400,-238,130,130,509,130,130,-194,-195,-207,-3,-98,130,130,-299,130,-282,-323,130,347,-390,347,-389,347,347,130,-501,347,130,-239,-237,-252,-260,130,-99,130,130,-335,130,130,130,130,-300,130,347,-283,130,-455,-456,347,-416,347,130,-266,347,-395,130,-259,-100,-336,774,130,347,-281,-261,130,347,347,347,-396,-294,130,774,-8,130,130,130,130,-275,-457,347,347,347,347,347,884,774,130,-287,-391,-270,347,-262,347,130,130,347,-401,347,130,-413,-411,347,-412,130,130,-8,884,]),'BEGIN':([31,42,44,46,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,106,108,109,111,112,113,159,164,171,181,185,186,187,193,195,196,257,259,270,280,302,304,305,306,307,308,309,311,313,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,370,397,405,415,426,427,440,443,446,458,463,466,470,473,474,476,477,482,483,486,487,493,496,497,502,504,542,553,584,587,602,606,607,612,616,619,622,626,633,634,637,638,639,646,647,682,701,702,703,704,711,721,727,732,738,742,744,747,753,767,812,815,819,820,821,824,827,836,856,865,866,867,868,874,875,891,896,898,901,903,916,918,919,927,932,935,],[-131,-2,-324,-325,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,-132,-343,-13,195,-492,-137,-131,-141,-145,-458,-459,-345,-349,-357,-321,-303,-142,-276,-22,-347,-337,-344,-131,-240,-253,-246,-244,-399,-236,-241,-258,-288,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-276,-243,-257,-247,-276,-249,-400,-238,-3,-346,-338,-131,195,-131,-446,-131,-444,-299,195,-131,-323,-276,-390,-276,-389,-276,-276,-501,-277,-276,-239,-237,-252,-260,-321,-36,-342,195,-494,-322,-300,-276,-289,-455,-456,-276,-416,-276,-266,-276,-395,-259,-50,-443,-341,-23,-35,-442,-445,-500,-276,-261,-276,-276,-276,-396,-294,-131,-275,-457,-276,-276,-276,-276,-276,-331,-373,-287,-391,-270,-276,-262,-276,-356,-495,-276,-401,-276,-413,-411,-276,-131,-412,195,]),'CHAR':([239,564,772,],[388,687,687,]),'PRAGMA':([0,4,8,10,13,14,15,18,21,25,29,30,31,32,38,39,40,42,43,44,46,60,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,117,118,119,159,164,171,175,181,185,186,187,193,196,200,253,257,259,270,272,276,280,292,297,319,370,397,405,410,412,413,414,415,416,422,425,427,440,443,445,446,447,449,466,475,542,553,584,588,592,595,596,599,600,601,602,606,610,647,682,701,702,703,704,706,707,708,711,712,716,717,718,720,721,767,768,775,794,799,801,803,804,805,836,841,853,856,860,880,883,885,891,896,905,909,910,920,921,922,924,925,926,927,928,930,933,934,948,951,952,953,954,],[2,-8,2,-428,2,-430,-435,-432,-8,-436,-434,-431,2,-433,-426,-428,-424,-2,-9,-324,-325,2,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,2,-343,-13,-492,-137,2,-141,-145,-427,-8,-425,-429,-458,-459,-345,2,-349,-357,-321,-303,-142,-22,2,2,-347,-337,-344,-135,2,2,-8,-363,-8,-3,-346,-338,-440,-439,-437,-438,2,-441,-136,2,2,-446,2,2,-444,-8,2,2,2,-321,-36,-342,-8,2,-364,-368,-369,-365,-367,-494,-322,-271,-50,-443,-341,-23,-35,-442,2,-8,-8,-445,-376,-377,-8,-366,2,-500,2,-8,-8,2,-378,2,-370,-371,-372,-331,2,-381,-373,-109,-8,-104,-8,-356,-495,2,-8,2,-105,-8,-8,2,-382,-383,2,-385,-108,2,2,-8,-384,2,-117,-386,]),'AT':([33,192,299,380,381,382,385,450,453,454,810,],[-157,-154,452,-176,-179,-178,-177,-156,604,-155,863,]),'-':([33,41,120,121,122,123,125,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,201,205,206,209,212,213,214,215,216,218,219,221,222,223,224,225,227,228,231,232,233,234,236,237,240,299,303,312,327,332,350,351,352,353,354,356,358,362,363,364,365,366,368,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,438,452,465,467,471,484,495,509,511,512,514,515,540,560,567,571,575,577,609,617,618,636,645,649,695,722,725,729,730,737,755,757,780,782,785,797,854,863,893,894,915,939,942,],[-157,136,-180,-226,-228,-149,136,-216,-181,217,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,136,217,-182,-227,136,136,-193,-191,-192,-203,-200,136,-204,-206,-201,-205,136,-202,-224,-225,-235,-234,136,136,-208,136,136,136,136,136,136,136,-232,136,136,-183,136,-194,-195,-207,-227,217,217,-210,217,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,136,136,136,-282,136,136,136,-182,217,-186,-164,136,136,136,136,136,136,136,136,-283,136,136,136,-184,-227,136,-157,-281,-227,136,-185,136,136,136,136,136,-157,136,136,136,136,136,136,]),'|':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,202,203,204,205,206,207,209,210,211,231,232,233,234,240,352,356,357,360,361,365,367,368,369,373,374,377,378,380,381,382,383,384,385,386,387,388,389,390,391,507,508,509,511,512,513,514,649,748,749,750,751,752,755,818,876,877,943,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,351,-123,-125,-196,-182,-121,-227,-124,-127,-224,-225,-235,-234,-208,-232,-183,-126,-190,-189,-199,-198,-197,-210,-123,-196,-227,-124,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-123,-122,-182,-62,-186,-61,-164,-184,-453,-454,828,-451,-157,-185,351,-452,828,351,]),'ACCEPT':([195,302,304,305,306,307,308,309,311,315,320,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,740,742,743,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[310,-240,-253,-246,-244,-399,-236,-241,-258,-248,310,-245,-254,-256,-398,-251,-397,-250,-255,-242,310,-243,-257,-247,310,-249,-400,-238,-299,-323,310,-390,310,-389,310,310,-501,310,-239,-237,-252,-260,-300,310,-455,-456,310,-416,310,-266,310,-395,-259,310,-261,310,310,310,310,310,-396,-294,-275,-457,310,310,310,310,310,-287,-391,-270,310,-262,310,310,-401,310,-413,-411,310,-412,]),'IF':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,745,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[327,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,327,-243,-257,-247,327,-249,-400,-238,-299,-323,327,-390,327,-389,327,327,-501,327,-239,-237,-252,-260,-300,327,-455,-456,327,-416,327,-266,327,-395,-259,327,-261,327,327,327,826,-396,-294,-275,-457,327,327,327,327,327,-287,-391,-270,327,-262,327,327,-401,327,-413,-411,327,-412,]),'ARROW':([33,120,121,122,123,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,202,203,204,205,206,207,209,210,211,231,232,233,234,240,352,356,357,360,361,365,367,368,369,373,374,377,378,380,381,382,383,384,385,386,387,388,389,390,391,489,507,508,509,511,512,513,514,632,649,748,749,750,751,752,755,818,876,877,943,],[-157,-180,-226,-228,201,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,350,-123,-125,-196,-182,-121,-227,-124,-127,-224,-225,-235,-234,-208,-232,-183,-126,-190,-189,-199,-198,-197,-210,-123,-196,-227,-124,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-267,-123,-122,-182,-62,-186,-61,-164,743,-184,-453,-454,827,-451,-157,-185,868,-452,903,948,]),'FUNCTION':([0,1,4,5,7,8,9,10,13,14,15,18,20,21,25,26,29,30,31,32,37,38,39,40,42,43,44,46,47,48,58,60,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,117,118,119,159,164,167,171,175,181,185,186,187,193,196,200,253,257,259,267,270,272,276,280,297,370,397,405,410,412,413,414,415,416,422,425,427,440,443,446,447,449,466,542,553,584,592,593,595,596,599,600,601,602,606,647,652,659,682,701,702,703,704,711,712,716,717,718,720,721,758,767,768,799,801,803,804,805,830,836,853,856,860,891,896,904,925,926,927,928,930,951,954,],[-417,-422,-8,23,-423,-422,-418,-428,-419,-430,-435,-432,23,-8,-436,-460,-434,-431,23,-433,23,-426,-428,-424,-2,-9,-324,-325,-461,153,-468,-421,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,23,-343,-13,-492,-137,23,-141,-145,-427,-8,-425,-429,-458,-459,-462,-345,23,-349,-357,-321,-303,-142,-22,-420,23,-347,-337,23,-344,-135,23,23,-363,-3,-346,-338,-440,-439,-437,-438,23,-441,-136,23,23,-446,23,-444,-8,23,23,-321,-36,-342,-374,23,-364,-368,-369,-365,-367,-494,-322,-50,-464,-463,-443,-341,-23,-35,-442,-445,-376,-377,-8,-366,23,-500,-467,23,-8,-378,-375,-370,-371,-372,-465,-331,-381,-373,-109,-356,-495,-466,-382,-383,23,-385,-108,-384,-386,]),'RAISE':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[314,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,314,-243,-257,-247,314,-249,-400,-238,-299,-323,314,-390,314,-389,314,314,-501,314,-239,-237,-252,-260,-300,314,-455,-456,314,-416,314,-266,314,-395,-259,314,-261,314,314,314,-396,-294,-275,-457,314,314,314,314,314,-287,-391,-270,314,-262,314,314,-401,314,-413,-411,314,-412,]),'DOTDOT':([33,120,121,122,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,365,366,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,695,730,755,854,],[-157,-180,-226,-228,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,354,-182,-227,-224,-225,-235,-234,-208,-232,-183,-227,354,-210,354,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-227,-227,-185,-157,]),'ARRAY':([180,285,286,288,403,429,441,],[-27,431,-29,-28,431,431,-30,]),'TASK':([31,42,44,46,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,159,164,171,175,181,185,186,187,193,196,253,257,259,267,270,272,276,280,370,397,405,415,422,425,427,440,443,446,466,542,553,584,602,606,647,682,701,702,703,704,711,721,767,836,856,891,896,927,],[84,-2,-324,-325,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,84,-343,-13,-492,-137,84,-141,-145,-458,-459,-345,275,-349,-357,-321,-303,-142,-22,275,-347,-337,411,-344,-135,275,84,-3,-346,-338,84,-136,275,84,-446,84,-444,84,-321,-36,-342,-494,-322,-50,-443,-341,-23,-35,-442,-445,-500,84,-331,-373,-356,-495,84,]),'ELSE':([216,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,336,337,338,342,345,346,458,470,474,476,477,478,482,483,485,486,490,491,496,497,502,504,607,619,622,625,626,627,628,630,631,633,638,639,732,746,747,753,812,815,821,822,825,865,866,867,871,874,901,916,918,932,],[363,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-249,-400,-238,-299,-323,-390,-414,-389,-404,-414,-414,-402,-501,634,-263,-239,-237,-252,-260,-300,-455,-456,738,-415,634,-408,-406,-407,-416,-265,-395,-261,-264,-396,-294,-275,-457,-414,-405,-403,-287,-391,-270,-407,-262,-401,-413,-411,-412,]),'IN':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,166,205,206,209,220,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,614,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,223,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,265,223,-182,-227,364,-224,-225,-235,-234,-208,-232,-183,-210,223,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,729,-184,-157,-185,]),'UNTIL':([332,],[495,]),'EXCEPTION':([180,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,336,337,338,339,342,345,346,458,470,474,486,496,497,502,504,607,619,622,633,639,732,747,753,812,815,865,866,867,874,901,916,918,932,],[287,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,498,-249,-400,-238,-299,-323,-390,-501,-239,-237,-252,-260,-300,-455,-456,-416,-395,-261,-396,-294,-275,-457,-287,-391,-270,-262,-401,-413,-411,-412,]),'OR':([33,120,121,122,123,126,127,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,203,205,206,209,231,232,233,234,240,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,336,337,338,342,345,346,349,352,356,360,361,365,367,368,369,373,374,377,380,381,382,383,384,385,386,387,388,389,390,391,451,457,458,461,470,474,476,477,478,482,483,485,486,489,494,496,497,502,504,506,507,509,511,512,514,583,603,607,619,620,622,625,626,627,628,630,631,633,639,640,649,673,684,691,692,700,724,725,732,747,753,755,808,812,815,821,822,825,843,865,866,867,871,874,897,901,916,918,932,],[-157,-180,-226,-228,-149,-216,216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,216,-196,-182,-227,-224,-225,-235,-234,-208,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-249,-400,-238,216,-232,-183,-190,-189,-199,-198,-197,-210,216,-196,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,216,216,-299,216,-323,-390,-414,-389,-404,-414,-414,-402,-501,216,216,-239,-237,-252,-260,216,216,-182,-62,-186,-164,216,216,-300,-455,216,-456,739,-415,740,-408,-406,-407,-416,-395,216,-184,216,216,216,216,216,216,-157,-261,-396,-294,-185,216,-275,-457,-414,-405,-403,216,-287,-391,-270,-407,-262,216,-401,-413,-411,-412,]),'RR':([503,],[646,]),'SELECT':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,823,824,827,865,866,867,868,869,873,874,875,898,900,901,903,916,918,919,932,],[320,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,320,-243,-257,-247,320,-249,-400,-238,-299,-323,320,-390,320,-389,320,320,-501,320,-239,-237,-252,-260,-300,320,-455,-456,320,-416,320,-266,320,-395,-259,320,-261,320,320,320,-396,-294,-275,-457,320,320,320,872,320,320,-287,-391,-270,320,899,902,-262,320,320,917,-401,320,-413,-411,320,-412,]),'IS':([27,33,34,45,62,63,64,70,86,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,150,152,156,157,163,176,177,179,184,190,197,199,231,232,233,234,240,250,251,255,256,273,281,282,284,289,290,294,295,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,393,395,409,418,442,448,461,489,511,512,514,521,523,545,546,547,574,649,651,674,675,714,755,907,912,947,],[68,-157,-158,-309,-308,-306,-307,175,186,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-304,-310,253,-469,-149,280,175,-37,292,297,348,-159,-224,-225,-235,-234,-208,-309,396,-470,403,420,427,429,-38,-37,443,447,-37,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-311,519,542,-305,292,297,610,-267,-62,-186,-164,-471,-110,676,677,678,-39,-184,519,767,768,542,-185,922,927,927,]),'DECLARE':([195,302,304,305,306,307,308,309,311,313,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,487,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[-276,-240,-253,-246,-244,-399,-236,-241,-258,466,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-276,-243,-257,-247,-276,-249,-400,-238,-299,-323,-276,-390,-276,-389,-276,-276,-501,-277,-276,-239,-237,-252,-260,-300,-276,-455,-456,-276,-416,-276,-266,-276,-395,-259,-276,-261,-276,-276,-276,-396,-294,-275,-457,-276,-276,-276,-276,-276,-287,-391,-270,-276,-262,-276,-276,-401,-276,-413,-411,-276,-412,]),',':([33,34,35,36,52,56,57,79,120,121,122,123,124,126,127,128,129,130,133,134,135,138,139,140,141,142,143,145,146,147,149,160,161,163,198,199,211,231,232,233,234,240,261,262,349,352,356,357,360,361,365,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,400,404,488,506,509,510,511,512,513,514,649,650,685,686,687,688,693,694,695,696,697,698,725,730,755,786,787,806,839,844,847,848,854,],[-157,-158,114,-160,-26,165,-24,165,-180,-226,-228,-149,-4,-216,-6,-181,-196,-182,-153,-152,-223,-188,-151,-150,236,-227,-231,-229,-209,-230,-163,258,-339,-149,-161,-159,-127,-224,-225,-235,-234,-208,258,-25,-7,-232,-183,-126,-190,-189,-199,-198,-197,-210,-5,-165,-167,-196,515,-168,-227,-169,-170,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,165,-340,258,-187,-182,515,-62,-186,-61,-164,-184,-166,-66,772,-67,-64,782,784,-93,-85,-89,-92,-26,-93,-185,-94,-91,165,-65,-90,-86,-87,-26,]),'ABSTRACT':([31,68,111,186,279,403,420,429,],[89,-321,89,-321,89,530,-321,566,]),'RANGE':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,209,231,232,233,234,240,352,356,360,361,365,367,368,369,377,380,381,382,383,384,385,386,387,388,389,390,391,403,429,432,511,512,514,649,691,692,695,700,730,755,843,846,854,897,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,358,-224,-225,-235,-234,-208,-232,-183,-190,-189,-199,-198,-197,-210,358,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,535,358,358,-62,-186,-164,-184,358,358,785,358,358,-185,358,890,-157,915,]),'/':([33,120,121,122,123,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,206,209,231,232,233,234,240,352,356,365,369,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,246,-230,-163,-149,-182,-227,-224,-225,-235,-234,246,-232,-183,-227,246,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-227,-157,-227,-185,-157,]),'ALIASED':([180,699,845,859,],[288,788,788,788,]),'BODY':([28,73,84,99,271,275,277,408,411,417,],[71,178,183,188,419,421,423,71,543,544,]),'WHEN':([33,42,43,133,134,139,140,149,152,163,302,304,305,306,307,308,309,311,315,319,320,323,324,325,328,329,330,331,333,334,336,337,338,340,342,345,346,370,380,381,382,383,385,386,387,388,389,390,393,458,468,470,474,475,486,496,497,498,499,501,502,504,514,607,610,619,622,624,633,639,641,643,732,735,740,747,753,800,812,815,857,860,865,866,867,874,875,880,883,885,898,901,905,906,909,910,916,918,919,920,921,922,924,929,930,932,933,934,936,938,940,945,953,955,],[-157,-2,-9,-153,-152,-151,-150,-163,-310,-149,-240,-253,-246,-244,-399,-236,-241,-258,-248,-8,484,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-295,-249,-400,-238,-3,-176,-179,-178,-175,-177,-174,-171,-162,-173,-172,-311,-299,-296,-323,-390,-272,-501,-239,-237,642,642,645,-252,-260,-164,-300,-271,-455,-456,737,-416,-395,-447,-448,-261,-273,484,-396,-294,-309,-275,-457,893,-109,-287,-391,-270,-262,-449,-8,-104,-8,-274,-401,-106,-101,-8,-102,-413,-411,-450,-105,-8,-8,-103,-309,-108,-412,-107,939,942,-118,939,-119,-117,-120,]),'USE':([10,20,26,31,33,39,40,42,44,46,47,58,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,118,119,159,164,167,171,175,181,185,186,187,191,192,193,196,253,257,259,270,272,276,280,370,380,381,382,385,397,405,415,422,425,427,440,443,446,450,454,466,542,553,584,602,606,647,652,659,682,701,702,703,704,711,721,758,767,830,836,856,891,896,904,927,],[-428,53,-460,53,-157,-428,53,-2,-324,-325,-461,-468,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,53,-343,-13,-492,-137,53,-141,-145,-427,53,-429,-458,-459,-462,-345,53,-349,-357,-321,-303,299,-154,-142,-22,53,-347,-337,-344,-135,53,53,-3,-176,-179,-178,-177,-346,-338,53,-136,53,53,-446,53,-444,-156,-155,53,-321,-36,-342,-494,-322,-50,-464,-463,-443,-341,-23,-35,-442,-445,-500,-467,53,-465,-331,-373,-356,-495,-466,53,]),'.':([33,34,36,45,64,70,123,133,134,139,140,142,149,156,161,163,168,170,176,177,191,192,198,199,209,234,269,281,316,322,365,377,380,381,382,383,385,386,387,388,389,390,404,406,418,432,450,454,468,472,481,514,545,651,654,655,679,695,725,730,748,752,759,810,846,854,],[-157,-158,116,116,116,116,-149,-153,-152,-151,-150,239,-163,116,239,-149,116,239,116,116,298,-154,116,-159,239,239,239,116,239,-157,239,239,-176,-179,-178,-175,-177,-174,-171,-162,-173,-172,239,298,239,239,-156,-155,239,239,239,-164,116,239,239,239,116,239,-157,239,239,-157,298,298,239,-157,]),'ABORT':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,621,622,626,629,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[326,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,326,-243,-257,-247,326,-249,-400,-238,-299,-323,326,-390,326,-389,326,326,-501,326,-239,-237,-252,-260,-300,326,-455,733,-456,326,742,-416,326,-266,326,-395,-259,326,-261,326,326,326,-396,-294,-275,-457,326,326,326,326,326,-287,-391,-270,326,-262,326,326,-401,326,-413,-411,326,-412,]),'+':([33,41,120,121,122,123,125,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,201,205,206,209,212,213,214,215,216,218,219,221,222,223,224,225,227,228,231,232,233,234,236,237,240,299,303,312,327,332,350,351,352,353,354,356,358,362,363,364,365,366,368,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,438,452,465,467,471,484,495,509,511,512,514,515,540,560,567,571,575,577,609,617,618,636,645,649,695,722,725,729,730,737,755,757,780,782,785,797,854,863,893,894,915,939,942,],[-157,148,-180,-226,-228,-149,148,-216,-181,226,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,148,226,-182,-227,148,148,-193,-191,-192,-203,-200,148,-204,-206,-201,-205,148,-202,-224,-225,-235,-234,148,148,-208,148,148,148,148,148,148,148,-232,148,148,-183,148,-194,-195,-207,-227,226,226,-210,226,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,148,148,148,-282,148,148,148,-182,226,-186,-164,148,148,148,148,148,148,148,148,-283,148,148,148,-184,-227,148,-157,-281,-227,148,-185,148,148,148,148,148,-157,148,148,148,148,148,148,]),'INT':([41,125,131,132,136,144,148,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,241,242,243,244,245,246,299,303,312,327,332,350,351,353,354,358,362,363,364,438,452,465,467,471,484,495,515,540,560,567,571,575,577,609,617,618,636,645,722,729,737,757,780,782,785,797,863,893,894,915,939,942,],[120,120,120,120,-212,120,-211,120,120,120,-193,-191,-192,-214,-203,-200,120,-204,-206,-201,-205,-213,120,-202,-215,120,120,120,-220,-221,-218,120,-222,-219,120,120,120,120,120,120,120,120,120,120,-194,-195,-207,120,120,120,-282,120,120,120,120,120,120,120,120,120,120,120,-283,120,120,120,120,-281,120,120,120,120,120,120,120,120,120,120,120,120,]),'WITH':([0,1,4,8,9,10,13,14,15,18,20,21,25,26,29,30,32,33,38,39,40,42,43,44,46,47,58,60,65,69,115,117,118,119,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,159,163,164,167,171,187,200,203,205,206,209,231,232,233,234,240,257,259,270,352,356,360,361,365,367,368,369,370,380,381,382,383,384,385,386,387,388,389,390,391,397,405,410,412,413,414,416,432,472,511,512,513,514,578,579,580,606,649,652,659,672,683,700,755,758,761,776,786,791,830,836,856,891,904,],[-417,6,-8,6,-418,-428,-419,-430,-435,-432,48,-8,-436,-460,-434,-431,-433,-157,-426,-428,-424,-2,-9,-324,-325,-461,-468,-421,-302,-301,-427,-8,-425,-429,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-458,-149,-459,-462,-345,-303,-420,353,-196,-182,-227,-224,-225,-235,-234,-208,-347,-337,-344,-232,-183,-190,-189,-199,-198,-197,-210,-3,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-346,-338,-440,-439,-437,-438,-441,-52,621,-62,-186,-61,-164,-53,-51,-54,-322,-184,-464,-463,766,770,-93,-185,-467,833,842,-94,-55,-465,-331,-373,-356,-466,]),'LEQ':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,218,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,218,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,218,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'CASE':([42,43,195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,370,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,736,738,742,744,747,753,775,812,815,819,820,821,824,827,841,860,865,866,867,868,874,875,880,883,898,901,903,905,916,918,919,920,930,932,944,948,952,],[-2,-9,312,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,312,-243,-257,-247,312,-249,-400,-238,-3,-299,-323,312,-390,312,-389,312,312,-501,312,-239,-237,-252,-260,-300,312,-455,-456,312,-416,312,-266,312,-395,-259,312,-261,817,312,312,312,-396,-294,-8,-275,-457,312,312,312,312,312,881,-109,-287,-391,-270,312,-262,312,-8,-104,312,-401,312,881,-413,-411,312,-105,-108,-412,949,-8,881,]),'CONSTANT':([180,288,534,],[286,441,666,]),'(':([11,12,22,33,34,41,45,62,63,64,123,125,131,132,133,134,136,139,140,142,144,148,149,157,161,163,170,179,199,201,209,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,234,236,237,238,241,242,243,244,245,246,249,250,269,289,295,299,303,312,316,322,327,332,350,351,353,354,358,359,362,363,364,365,377,380,381,382,383,385,386,387,388,389,390,403,404,418,429,431,432,438,452,459,460,465,467,468,471,472,481,484,495,514,515,540,560,567,571,575,577,609,617,618,636,645,651,654,655,695,710,722,725,729,730,737,748,752,757,780,782,785,797,800,811,846,854,863,892,893,894,915,929,939,942,],[41,-157,61,-157,-158,125,151,-308,151,-307,-149,125,125,125,-153,-152,-212,-151,-150,237,125,-211,-163,254,237,-149,237,283,-159,125,237,125,125,-193,-191,-192,-214,-203,-200,125,-204,-206,-201,-205,-213,125,-202,-215,125,237,125,125,125,-220,-221,-218,125,-222,-219,151,151,237,283,283,125,125,125,237,-157,125,125,125,125,125,125,125,125,-194,-195,-207,237,237,-176,-179,-178,-175,-177,-174,-171,-162,-173,-172,528,237,237,564,575,237,125,125,-393,609,125,-282,237,125,237,237,125,125,-164,125,125,125,125,125,125,125,125,-283,125,125,125,237,237,757,237,797,125,-157,-281,237,125,237,-157,125,125,125,125,125,858,-394,237,-157,125,151,125,125,125,151,125,125,]),'>':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,222,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,222,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,222,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'ENTRY':([42,43,83,92,108,292,297,370,444,445,447,449,588,592,593,595,596,599,600,601,602,606,706,707,712,716,717,718,720,721,768,793,799,801,803,804,805,853,860,896,925,926,928,930,951,954,],[-2,-9,-493,-491,-492,-8,-363,-3,590,-379,-8,590,-8,-374,715,-364,-368,-369,-365,-367,-494,-322,-380,-8,-376,-377,-8,-366,590,-500,-8,590,-378,-375,-370,-371,-372,-381,-109,-495,-382,-383,-385,-108,-384,-386,]),'TICK':([33,123,133,134,139,140,142,149,161,163,170,191,192,209,234,269,316,322,365,377,380,381,382,383,385,386,387,388,389,390,404,406,418,432,450,454,468,472,481,514,651,654,655,695,725,730,748,752,759,810,846,854,],[-157,-149,-153,-152,-151,-150,238,-163,260,-149,260,300,-154,359,238,260,238,-157,359,359,-176,-179,-178,-175,-177,-174,-171,-162,-173,-172,260,300,260,260,-156,-155,260,260,260,-164,260,260,260,359,-157,359,260,-157,300,300,260,-157,]),'PRIVATE':([0,1,4,8,9,10,13,14,15,18,21,25,29,30,32,38,39,40,42,43,44,46,60,65,69,72,76,77,80,81,83,87,88,91,92,93,94,95,97,98,101,104,105,108,109,115,117,118,119,159,164,171,175,181,185,187,196,200,253,257,259,270,272,276,278,292,297,370,397,403,405,410,412,413,414,416,422,429,440,444,445,446,449,529,538,553,565,584,588,589,595,596,600,601,602,606,647,661,670,671,682,689,701,702,703,704,706,708,711,718,721,766,770,794,833,836,842,853,856,891,896,925,],[-417,7,-8,7,-418,-428,-419,-430,-435,-432,-8,-436,-434,-431,-433,-426,-428,-424,-2,-9,-324,-325,-421,-302,-301,-139,-16,-14,-21,-12,-493,-10,-20,-18,-491,-15,-140,-17,-138,-19,-11,-343,-13,-492,-137,-427,-8,-425,-429,-458,-459,-345,-133,-349,-357,-303,-22,-420,-133,-347,-337,-344,-135,-134,425,-8,-363,-3,-346,-98,-338,-440,-439,-437,-438,-441,-136,-98,-446,-387,-379,-444,599,-99,-335,-36,-335,-342,-8,707,-364,-368,-365,-367,-494,-322,-50,-100,-336,765,-443,765,-341,-23,-35,-442,-380,-8,-445,-366,-500,835,838,-388,879,-331,887,-381,-373,-356,-495,-382,]),'OUT':([166,265,],[266,407,]),'NOT':([33,41,120,121,122,123,125,126,128,129,130,133,134,135,136,139,140,142,143,144,145,146,147,148,149,163,201,205,206,209,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,240,241,242,243,244,245,246,299,303,312,327,332,350,351,352,353,354,356,358,362,363,364,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,438,452,465,467,471,484,495,509,512,514,515,540,560,567,571,575,577,609,617,618,636,645,649,722,725,729,737,755,757,780,782,785,797,863,893,894,915,939,942,],[-157,131,-180,-226,-228,-149,131,-216,-181,220,-182,-153,-152,-223,-212,-151,-150,-227,-231,131,-229,-209,-230,-211,-163,-149,131,220,-182,-227,131,131,-193,-191,-192,-214,-203,-200,131,-204,-206,-201,-205,-213,131,-202,-215,131,-224,-225,-235,-234,131,131,-208,-220,-221,-218,131,-222,-219,131,131,131,131,131,131,131,-232,131,131,-183,131,-194,-195,-207,-210,220,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,131,131,131,-282,131,131,131,-182,-186,-164,131,131,131,131,131,131,131,131,-283,131,131,131,-184,131,-157,-281,131,-185,131,131,131,131,131,131,131,131,131,131,131,]),'=':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,219,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,219,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,219,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'SEPARATE':([0,1,4,5,7,8,9,10,13,14,15,18,21,25,29,30,32,37,38,39,40,42,43,44,46,60,65,69,115,117,118,119,159,164,171,186,187,200,257,259,270,370,397,405,410,412,413,414,416,420,427,443,447,606,676,677,678,836,856,891,],[-417,-422,-8,22,-423,-422,-418,-428,-419,-430,-435,-432,-8,-436,-434,-431,-433,22,-426,-428,-424,-2,-9,-324,-325,-421,-302,-301,-427,-8,-425,-429,-458,-459,-345,293,-303,-420,-347,-337,-344,-3,-346,-338,-440,-439,-437,-438,-441,293,552,586,591,-322,552,586,591,-331,-373,-356,]),'PROTECTED':([31,42,44,46,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,159,164,171,175,181,185,186,187,193,196,253,257,259,267,270,272,276,280,370,397,405,415,422,425,427,440,443,446,466,542,553,584,602,606,647,682,701,702,703,704,711,721,767,836,856,891,896,927,],[99,-2,-324,-325,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,99,-343,-13,-492,-137,99,-141,-145,-458,-459,-345,277,-349,-357,-321,-303,-142,-22,277,-347,-337,417,-344,-135,277,99,-3,-346,-338,99,-136,277,99,-446,99,-444,99,-321,-36,-342,-494,-322,-50,-443,-341,-23,-35,-442,-445,-500,99,-331,-373,-356,-495,99,]),'NEW':([41,68,125,131,132,136,144,148,175,186,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,241,242,243,244,245,246,299,303,312,327,332,350,351,353,354,358,362,363,364,396,403,420,429,438,452,465,467,471,484,495,515,530,540,560,566,567,571,575,577,609,617,618,636,645,722,729,737,757,780,782,785,797,863,893,894,915,939,942,],[137,173,137,137,137,-212,137,-211,173,173,137,137,137,-193,-191,-192,-214,-203,-200,137,-204,-206,-201,-205,-213,137,-202,-215,137,137,137,-220,-221,-218,137,-222,-219,137,137,137,137,137,137,137,137,137,137,-194,-195,-207,520,539,173,559,137,137,137,-282,137,137,137,137,662,137,137,690,137,137,137,137,137,-283,137,137,137,137,-281,137,137,137,137,137,137,137,137,137,137,137,137,]),'IDENTIFIER':([2,6,17,20,23,26,28,31,41,42,43,44,46,47,49,50,53,58,61,65,66,68,69,71,72,73,74,75,76,77,78,80,81,83,84,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,116,125,131,132,136,137,144,148,151,153,154,155,159,162,164,165,166,167,171,173,175,178,180,181,182,183,185,186,187,188,189,193,195,196,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,238,239,241,242,243,244,245,246,253,254,257,258,259,260,263,264,265,266,268,270,271,272,275,276,277,280,283,285,286,288,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,317,320,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,344,345,346,348,350,351,353,354,358,359,362,363,364,370,392,397,405,407,415,419,421,422,423,425,427,438,440,441,443,446,452,453,458,464,465,466,467,470,471,473,474,476,477,482,483,484,486,493,495,496,497,502,504,515,517,519,520,522,524,534,539,540,542,543,544,548,553,559,560,564,567,571,575,577,584,590,596,599,600,601,602,605,606,607,609,611,612,617,618,619,622,626,633,634,636,637,638,639,642,645,646,647,652,656,657,659,662,666,667,681,682,690,699,701,702,703,704,711,713,715,718,719,720,721,722,723,727,728,729,732,734,737,738,742,744,747,753,757,758,767,772,775,780,782,784,785,788,790,792,795,797,803,804,805,812,815,819,820,821,824,827,828,829,830,836,841,845,853,856,858,859,860,861,863,864,865,866,867,868,874,875,880,881,883,891,893,894,896,898,901,903,904,905,915,916,918,919,920,925,927,930,932,937,939,942,946,948,952,],[12,33,33,52,33,-460,33,52,33,-2,-9,-324,-325,-461,33,33,33,-468,33,-302,33,-321,-301,33,-139,33,179,-143,-16,-14,-144,-21,-12,-493,33,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,190,-148,-11,33,52,-343,-13,-492,-137,197,52,-141,-145,33,33,33,33,33,-212,33,33,-211,52,33,33,33,-458,33,-459,52,-316,-462,-345,33,52,33,-27,-349,33,33,-357,-321,-303,33,33,-142,322,-22,33,33,33,-193,-191,-192,-214,-203,-200,33,-204,-206,-201,-205,-213,33,-202,-215,33,33,33,380,33,-220,-221,-218,33,-222,-219,52,52,-347,33,-337,380,-320,33,-317,-318,33,-344,33,-135,33,52,190,52,52,33,-29,-28,33,33,380,33,-240,33,-253,-246,-244,-399,-236,-241,33,-258,33,33,-248,33,33,-245,-254,-256,33,33,-398,-251,-397,-250,33,-255,-242,322,-243,-257,-247,322,33,-249,503,-400,-238,33,33,33,33,33,33,380,-194,-195,-207,-3,52,-346,-338,-319,52,33,33,-136,33,52,52,33,-446,-30,52,-444,33,-496,-299,614,33,52,-282,-323,33,322,-390,322,-389,322,322,33,-501,322,33,-239,-237,-252,-260,33,33,33,33,-115,52,33,33,33,-321,33,33,33,-36,33,33,685,33,33,33,33,-342,710,-368,-369,-365,-367,-494,-498,-322,-300,725,33,322,-283,33,-455,-456,322,-416,322,33,-266,322,-395,752,33,-259,-50,-464,33,-116,-463,33,33,33,33,-443,33,-83,-341,-23,-35,-442,-445,33,800,-366,33,52,-500,33,33,322,33,-281,-261,33,33,322,322,322,-396,-294,33,-467,52,685,-8,33,33,33,33,-84,33,33,33,854,-370,-371,-372,-275,-457,322,322,322,322,322,33,33,-465,-331,52,-83,-381,-373,52,-83,-109,-497,33,-284,-287,-391,-270,322,-262,322,-8,33,-104,-356,33,33,-495,322,-401,322,-466,52,33,-413,-411,322,-105,-382,52,-108,-412,-499,33,33,33,-8,52,]),'<':([33,120,121,122,123,126,128,129,130,133,134,135,139,140,142,143,145,146,147,149,163,205,206,209,231,232,233,234,240,352,356,369,374,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,725,755,],[-157,-180,-226,-228,-149,-216,-181,228,-182,-153,-152,-223,-151,-150,-227,-231,-229,-209,-230,-163,-149,228,-182,-227,-224,-225,-235,-234,-208,-232,-183,-210,228,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-157,-185,]),'TERMINATE':([320,740,743,],[479,479,479,]),'FOR':([31,42,43,44,46,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,159,164,171,175,181,185,186,187,193,195,196,253,257,259,270,272,276,280,292,297,302,304,305,306,307,308,309,311,313,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,370,397,405,415,422,425,427,440,443,444,445,446,449,458,466,470,473,474,476,477,482,483,486,487,493,496,497,502,504,542,553,584,588,589,595,596,599,600,601,602,606,607,612,619,622,626,633,634,637,638,639,646,647,682,701,702,703,704,706,707,708,711,718,720,721,727,732,738,742,744,747,753,767,793,794,803,804,805,812,815,819,820,821,824,827,836,851,853,856,858,860,865,866,867,868,874,875,891,896,898,901,903,916,918,919,925,927,930,932,],[102,-2,-9,-324,-325,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,102,-343,-13,-492,-137,102,-141,-145,-458,-459,-345,102,-349,-357,-321,-303,-142,-276,-22,102,-347,-337,-344,-135,102,102,-8,-363,-240,-253,-246,-244,-399,-236,-241,-258,464,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-276,-243,-257,-247,-276,-249,-400,-238,-3,-346,-338,102,-136,102,102,-446,102,-387,-379,-444,102,-299,102,-323,-276,-390,-276,-389,-276,-276,-501,-277,-276,-239,-237,-252,-260,-321,-36,-342,-8,102,-364,-368,-369,-365,-367,-494,-322,-300,-276,-455,-456,-276,-416,-276,-266,-276,-395,-259,-50,-443,-341,-23,-35,-442,-380,-8,-8,-445,-366,102,-500,-276,-261,-276,-276,-276,-396,-294,102,-387,-388,-370,-371,-372,-275,-457,-276,-276,-276,-276,-276,-331,102,-381,-373,464,-109,-287,-391,-270,-276,-262,-276,-356,-495,-276,-401,-276,-413,-411,-276,-382,102,-108,-412,]),'REQUEUE':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[317,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,317,-243,-257,-247,317,-249,-400,-238,-299,-323,317,-390,317,-389,317,317,-501,317,-239,-237,-252,-260,-300,317,-455,-456,317,-416,317,-266,317,-395,-259,317,-261,317,317,317,-396,-294,-275,-457,317,317,317,317,317,-287,-391,-270,317,-262,317,317,-401,317,-413,-411,317,-412,]),'PROCEDURE':([0,1,4,5,7,8,9,10,13,14,15,18,20,21,25,26,29,30,31,32,37,38,39,40,42,43,44,46,47,48,58,60,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,117,118,119,159,164,167,171,175,181,185,186,187,193,196,200,253,257,259,267,270,272,276,280,297,370,397,405,410,412,413,414,415,416,422,425,427,440,443,446,447,449,466,542,553,584,592,593,595,596,599,600,601,602,606,647,652,659,682,701,702,703,704,711,712,716,717,718,720,721,758,767,768,799,801,803,804,805,830,836,853,856,860,891,896,904,925,926,927,928,930,951,954,],[-417,-422,-8,17,-423,-422,-418,-428,-419,-430,-435,-432,17,-8,-436,-460,-434,-431,17,-433,17,-426,-428,-424,-2,-9,-324,-325,-461,154,-468,-421,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,17,-343,-13,-492,-137,17,-141,-145,-427,-8,-425,-429,-458,-459,-462,-345,17,-349,-357,-321,-303,-142,-22,-420,17,-347,-337,17,-344,-135,17,17,-363,-3,-346,-338,-440,-439,-437,-438,17,-441,-136,17,17,-446,17,-444,-8,17,17,-321,-36,-342,-374,17,-364,-368,-369,-365,-367,-494,-322,-50,-464,-463,-443,-341,-23,-35,-442,-445,-376,-377,-8,-366,17,-500,-467,17,-8,-378,-375,-370,-371,-372,-465,-331,-381,-373,-109,-356,-495,-466,-382,-383,17,-385,-108,-384,-386,]),'ABS':([41,125,136,144,148,201,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,236,237,241,242,243,244,245,246,299,303,312,327,332,350,351,353,354,358,362,363,364,438,452,465,467,471,484,495,515,540,560,567,571,575,577,609,617,618,636,645,722,729,737,757,780,782,785,797,863,893,894,915,939,942,],[132,132,-212,132,-211,132,132,132,-193,-191,-192,-214,-203,-200,132,-204,-206,-201,-205,-213,132,-202,-215,132,132,132,-220,-221,-218,132,-222,-219,132,132,132,132,132,132,132,132,132,132,-194,-195,-207,132,132,132,-282,132,132,132,132,132,132,132,132,132,132,132,-283,132,132,132,132,-281,132,132,132,132,132,132,132,132,132,132,132,132,]),'OF':([576,781,783,],[699,-88,845,]),'EXIT':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[340,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,340,-243,-257,-247,340,-249,-400,-238,-299,-323,340,-390,340,-389,340,340,-501,340,-239,-237,-252,-260,-300,340,-455,-456,340,-416,340,-266,340,-395,-259,340,-261,340,340,340,-396,-294,-275,-457,340,340,340,340,340,-287,-391,-270,340,-262,340,340,-401,340,-413,-411,340,-412,]),'GENERIC':([0,1,4,5,7,8,9,10,13,14,15,18,21,25,29,30,31,32,37,38,39,40,42,43,44,46,60,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,115,117,118,119,159,164,171,175,181,185,186,187,193,196,200,253,257,259,270,272,276,280,370,397,405,410,412,413,414,415,416,422,425,427,440,443,446,466,542,553,584,602,606,647,682,701,702,703,704,711,721,767,836,856,891,896,927,],[-417,-422,-8,26,-423,-422,-418,-428,-419,-430,-435,-432,-8,-436,-434,-431,26,-433,26,-426,-428,-424,-2,-9,-324,-325,-421,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,26,-343,-13,-492,-137,26,-141,-145,-427,-8,-425,-429,-458,-459,-345,26,-349,-357,-321,-303,-142,-22,-420,26,-347,-337,-344,-135,26,26,-3,-346,-338,-440,-439,-437,-438,26,-441,-136,26,26,-446,26,-444,26,-321,-36,-342,-494,-322,-50,-443,-341,-23,-35,-442,-445,-500,26,-331,-373,-356,-495,26,]),'TAGGED':([403,429,530,566,],[529,529,661,661,]),'DELAY':([195,302,304,305,306,307,308,309,311,315,320,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,739,740,742,743,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[332,-240,-253,-246,-244,-399,-236,-241,-258,-248,332,-245,-254,-256,-398,-251,-397,-250,-255,-242,332,-243,-257,-247,332,-249,-400,-238,-299,-323,332,-390,332,-389,332,332,-501,332,-239,-237,-252,-260,-300,332,-455,-456,332,-416,332,-266,332,-395,-259,332,-261,332,332,332,332,332,332,-396,-294,-275,-457,332,332,332,332,332,-287,-391,-270,332,-262,332,332,-401,332,-413,-411,332,-412,]),'THEN':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,215,231,232,233,234,240,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,336,337,338,342,345,346,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,458,470,474,476,477,480,483,486,489,492,496,497,502,504,511,512,514,607,619,622,625,626,631,633,639,649,732,747,753,755,812,815,865,866,867,874,901,916,918,932,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,362,-224,-225,-235,-234,-208,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-249,-400,-238,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-299,-323,-390,-414,-389,629,-414,-501,-267,637,-239,-237,-252,-260,-62,-186,-164,-300,-455,-456,-410,-415,-409,-416,-395,-184,-261,-396,-294,-185,-275,-457,-287,-391,-270,-262,-401,-413,-411,-412,]),'ASSIGN':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,192,231,232,233,234,240,286,316,322,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,406,432,433,434,435,436,437,450,454,511,512,513,514,578,579,580,649,700,755,759,786,789,791,849,889,895,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,-154,-224,-225,-235,-234,-208,438,471,-157,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,540,-52,-31,-78,-32,-79,540,-156,-155,-62,-186,-61,-164,-53,-51,-54,-184,-93,-185,540,-94,-81,-55,-82,-80,540,]),'RECORD':([206,299,429,509,529,565,661,670,689,770,774,809,842,908,],[355,453,-98,648,-99,-335,-100,-336,775,775,840,862,775,923,]),'$end':([0,1,3,4,9,13,14,15,18,21,25,29,30,32,42,43,44,46,60,65,69,117,159,164,171,187,200,257,270,370,397,410,412,413,414,416,606,836,856,891,],[-417,-1,0,-8,-418,-419,-430,-435,-432,-8,-436,-434,-431,-433,-2,-9,-324,-325,-421,-302,-301,-8,-458,-459,-345,-303,-420,-347,-344,-3,-346,-440,-439,-437,-438,-441,-322,-331,-373,-356,]),')':([33,34,55,120,121,122,123,124,126,127,128,129,130,133,134,135,138,139,140,141,142,143,145,146,147,149,163,168,192,199,203,205,206,208,209,211,231,232,233,234,240,247,248,349,352,355,356,357,360,361,365,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,398,399,401,402,406,430,450,454,506,509,510,511,512,513,514,516,541,648,649,650,658,660,673,685,686,687,688,693,694,695,696,697,698,724,725,730,755,759,786,787,831,832,839,844,847,848,854,855,913,],[-157,-158,-315,-180,-226,-228,-149,-4,-216,-6,-181,-196,-182,-153,-152,-223,-188,-151,-150,235,-227,-231,-229,-209,-230,-163,-149,267,-154,-159,352,-196,-182,356,-227,-127,-224,-225,-235,-234,-208,393,-312,-7,-232,512,-183,-126,-190,-189,-199,-198,-197,-210,-5,-165,-167,-196,514,-168,-227,-169,-170,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,521,-114,-111,523,-33,574,-156,-155,-187,-182,649,-62,-186,-61,-164,-313,-314,755,-184,-166,-112,760,-34,-66,771,-67,-64,781,783,-93,-85,-89,-92,811,-157,-93,-185,-33,-94,-91,878,-113,-65,-90,-86,-87,-157,892,929,]),'error':([20,26,31,42,43,44,46,47,58,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,151,159,164,167,171,175,181,185,186,187,193,195,196,237,253,254,257,259,270,272,276,280,283,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,353,370,392,397,405,415,422,425,427,440,443,446,458,466,470,473,474,476,477,482,483,486,493,496,497,502,504,515,524,542,553,584,596,599,600,601,602,606,607,609,612,619,622,626,633,634,637,638,639,646,647,652,659,682,701,702,703,704,711,718,720,721,727,732,738,742,744,747,753,757,758,767,775,797,803,804,805,812,815,819,820,821,824,827,830,836,841,853,856,858,860,865,866,867,868,874,875,880,883,891,896,898,901,903,904,905,916,918,919,920,925,927,930,932,948,952,],[55,-460,107,-2,-9,-324,-325,-461,-468,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,107,-343,-13,-492,-137,107,-141,-145,55,-458,-459,-462,-345,107,-349,-357,-321,-303,-142,341,-22,379,107,399,-347,-337,-344,-135,107,107,399,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,341,-243,-257,-247,341,-249,-400,-238,379,-3,55,-346,-338,107,-136,107,107,-446,107,-444,-299,107,-323,341,-390,341,-389,341,341,-501,341,-239,-237,-252,-260,379,399,-321,-36,-342,-368,-369,-365,-367,-494,-322,-300,55,341,-455,-456,341,-416,341,-266,341,-395,-259,-50,-464,-463,-443,-341,-23,-35,-442,-445,-366,807,-500,341,-261,341,341,341,-396,-294,379,-467,107,-8,55,-370,-371,-372,-275,-457,341,341,341,341,341,-465,-331,807,-381,-373,55,-109,-287,-391,-270,341,-262,341,-8,-104,-356,-495,341,-401,341,-466,807,-413,-411,341,-105,-382,107,-108,-412,-8,807,]),'REVERSE':([467,729,],[617,-281,]),'LIMITED':([403,429,529,538,565,661,],[-98,-98,-99,670,670,-100,]),'LL':([195,302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[344,-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,344,-243,-257,-247,344,-249,-400,-238,-299,-323,344,-390,344,-389,344,344,-501,344,-239,-237,-252,-260,-300,344,-455,-456,344,-416,344,-266,344,-395,-259,344,-261,344,344,344,-396,-294,-275,-457,344,344,344,344,344,-287,-391,-270,344,-262,344,344,-401,344,-413,-411,344,-412,]),'DELTA':([238,260,300,359,403,429,],[382,382,382,382,537,571,]),'LOOP':([33,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,195,231,232,233,234,240,302,304,305,306,307,308,309,311,313,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,458,462,470,473,474,476,477,482,483,486,487,489,493,496,497,502,504,511,512,513,514,607,612,615,619,622,626,633,634,637,638,639,646,649,698,727,730,731,732,738,742,744,747,753,755,786,787,812,813,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[-157,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,-276,-224,-225,-235,-234,-208,-240,-253,-246,-244,-399,-236,-241,-258,-278,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-276,-243,-257,-247,-276,-249,-400,-238,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-299,612,-323,-276,-390,-276,-389,-276,-276,-501,-277,-267,-276,-239,-237,-252,-260,-62,-186,-61,-164,-300,-276,-279,-455,-456,-276,-416,-276,-266,-276,-395,-259,-184,-92,-276,-93,-280,-261,-276,-276,-276,-396,-294,-185,-94,-91,-275,864,-457,-276,-276,-276,-276,-276,-287,-391,-270,-276,-262,-276,-276,-401,-276,-413,-411,-276,-412,]),'WHILE':([195,302,304,305,306,307,308,309,311,313,315,323,324,325,328,329,330,331,333,334,335,336,337,338,339,342,345,346,458,470,473,474,476,477,482,483,486,487,493,496,497,502,504,607,612,619,622,626,633,634,637,638,639,646,727,732,738,742,744,747,753,812,815,819,820,821,824,827,865,866,867,868,874,875,898,901,903,916,918,919,932,],[-276,-240,-253,-246,-244,-399,-236,-241,-258,465,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-276,-243,-257,-247,-276,-249,-400,-238,-299,-323,-276,-390,-276,-389,-276,-276,-501,-277,-276,-239,-237,-252,-260,-300,-276,-455,-456,-276,-416,-276,-266,-276,-395,-259,-276,-261,-276,-276,-276,-396,-294,-275,-457,-276,-276,-276,-276,-276,-287,-391,-270,-276,-262,-276,-276,-401,-276,-413,-411,-276,-412,]),'SUBTYPE':([31,42,44,46,65,68,69,72,75,76,77,78,80,81,83,87,88,90,91,92,93,94,95,96,97,98,100,101,103,104,105,108,109,111,112,113,159,164,171,175,181,185,186,187,193,196,253,257,259,270,272,276,280,370,397,405,415,422,425,427,440,443,446,466,542,553,584,602,606,647,682,701,702,703,704,711,721,767,836,856,891,896,927,],[110,-2,-324,-325,-302,-321,-301,-139,-143,-16,-14,-144,-21,-12,-493,-10,-20,-146,-18,-491,-15,-140,-17,-147,-138,-19,-148,-11,110,-343,-13,-492,-137,110,-141,-145,-458,-459,-345,110,-349,-357,-321,-303,-142,-22,110,-347,-337,-344,-135,110,110,-3,-346,-338,110,-136,110,110,-446,110,-444,110,-321,-36,-342,-494,-322,-50,-443,-341,-23,-35,-442,-445,-500,110,-331,-373,-356,-495,110,]),'RENAMES':([27,33,34,45,51,62,63,64,70,86,120,121,122,126,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,150,152,156,163,177,199,231,232,233,234,240,273,287,352,356,360,361,365,367,368,369,380,381,382,383,384,385,386,387,388,389,390,391,393,418,432,433,511,512,513,514,578,579,580,649,700,755,786,791,],[66,-157,-158,-309,66,-308,-306,-307,66,66,-180,-226,-228,-216,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-304,-310,66,-149,66,-159,-224,-225,-235,-234,-208,66,66,-232,-183,-190,-189,-199,-198,-197,-210,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-311,-305,-52,66,-62,-186,-61,-164,-53,-51,-54,-184,-93,-185,-94,-55,]),':':([52,56,57,79,262,322,400,725,752,806,854,],[-26,166,-24,180,-25,487,522,-26,829,859,-26,]),'*':([33,120,121,122,123,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,206,209,231,232,233,234,240,352,356,365,369,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,243,-230,-163,-149,-182,-227,-224,-225,-235,-234,243,-232,-183,-227,243,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-227,-157,-227,-185,-157,]),'XOR':([33,120,121,122,123,126,127,128,129,130,133,134,135,138,139,140,142,143,145,146,147,149,163,203,205,206,209,231,232,233,234,240,349,352,356,360,361,365,367,368,369,373,374,377,380,381,382,383,384,385,386,387,388,389,390,391,451,457,461,489,494,506,507,509,511,512,514,583,603,620,640,649,673,684,691,692,700,724,725,755,808,843,897,],[-157,-180,-226,-228,-149,-216,214,-181,-196,-182,-153,-152,-223,-188,-151,-150,-227,-231,-229,-209,-230,-163,-149,214,-196,-182,-227,-224,-225,-235,-234,-208,214,-232,-183,-190,-189,-199,-198,-197,-210,214,-196,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,214,214,214,214,214,214,214,-182,-62,-186,-164,214,214,214,214,-184,214,214,214,214,214,214,-157,-185,214,214,214,]),'ELSIF':([302,304,305,306,307,308,309,311,315,323,324,325,328,329,330,331,333,334,336,337,338,342,345,346,458,470,474,486,490,491,496,497,502,504,607,619,622,633,638,639,732,746,747,753,812,815,865,866,867,874,901,916,918,932,],[-240,-253,-246,-244,-399,-236,-241,-258,-248,-245,-254,-256,-398,-251,-397,-250,-255,-242,-243,-257,-247,-249,-400,-238,-299,-323,-390,-501,636,-263,-239,-237,-252,-260,-300,-455,-456,-416,-265,-395,-261,-264,-396,-294,-275,-457,-287,-391,-270,-262,-401,-413,-411,-412,]),'STARSTAR':([33,120,121,122,123,126,128,130,133,134,135,139,140,142,143,145,146,147,149,163,206,209,231,232,233,234,240,352,356,365,369,377,380,381,382,383,384,385,386,387,388,389,390,391,509,512,514,649,695,725,730,755,854,],[-157,-180,-226,-228,-149,-216,-181,-182,-153,-152,-223,-151,-150,-227,-231,-229,245,-230,-163,-149,-182,-227,-224,-225,-235,-234,245,-232,-183,-227,245,-227,-176,-179,-178,-175,-233,-177,-174,-171,-162,-173,-172,-217,-182,-186,-164,-184,-227,-157,-227,-185,-157,]),'ALL':([239,534,],[386,667,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'record_type_spec':([31,103,111,175,253,276,280,415,425,427,443,449,466,589,720,767,851,927,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'entry_call':([320,],[476,]),'private_type':([403,429,],[525,558,]),'simple_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,]),'iter_discrete_range_s':([575,],[693,]),'operator_symbol':([41,53,66,125,131,132,137,144,162,173,195,201,212,213,221,227,230,236,237,239,244,258,268,285,299,303,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,559,560,567,571,575,577,609,612,618,626,634,636,638,642,645,662,666,667,690,722,727,737,738,742,744,757,780,782,784,785,790,797,819,820,821,824,827,828,829,863,868,875,893,894,898,903,915,919,939,942,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,389,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'entry_body':([593,],[712,]),'simple_name':([2,6,17,23,28,41,49,50,53,61,66,71,73,84,102,114,116,125,131,132,137,144,153,154,155,162,173,178,182,183,188,189,195,201,212,213,221,227,230,236,237,239,244,258,264,268,271,275,285,298,299,301,303,310,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,419,421,423,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,543,544,548,559,560,567,571,575,577,609,611,612,618,626,634,636,638,642,645,656,662,666,667,681,690,713,719,722,723,727,728,734,737,738,742,744,757,780,782,784,785,790,792,795,797,819,820,821,824,827,828,829,863,868,875,881,893,894,898,903,915,919,939,942,946,],[11,34,34,34,34,123,34,157,163,34,163,34,34,184,192,34,199,163,163,163,163,163,34,250,251,163,163,34,289,290,294,295,163,163,163,163,163,163,163,123,163,387,163,163,192,163,34,184,163,450,163,34,163,459,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,34,546,547,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,674,675,34,163,163,163,163,163,163,163,34,163,163,163,163,163,163,163,163,192,163,163,163,34,163,34,34,163,192,163,34,34,163,163,163,163,163,163,163,163,163,163,34,34,163,163,163,163,163,163,163,163,163,163,163,907,163,163,163,163,163,163,163,163,34,]),'param_s':([151,609,797,858,],[247,247,247,247,]),'body':([31,103,111,280,415,427,443,466,767,927,],[75,75,75,75,75,75,75,75,75,75,]),'prot_op_body_s':([447,768,],[593,593,]),'prot_elem_decl_s':([599,],[720,]),'subprog_decl':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[18,77,18,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'exit_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,]),'def_id_s':([20,31,103,111,151,175,253,254,276,280,283,392,415,425,427,443,466,524,609,720,767,797,841,858,905,927,952,],[56,79,79,79,56,79,79,400,79,79,400,56,79,79,79,79,79,400,56,806,79,56,806,56,806,79,806,]),'goal_symbol':([0,],[3,]),'component_subtype_def':([699,845,859,],[789,889,895,]),'cond_clause':([327,636,],[491,746,]),'init_opt':([406,437,759,895,],[541,582,832,914,]),'rename_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'mark':([102,264,656,723,],[191,406,759,810,]),'discrim_part':([157,179,289,295,],[255,284,284,284,]),'task_spec':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'alternative':([624,],[735,]),'prot_elem_decl':([720,],[803,]),'index_s':([575,],[694,]),'real_type':([429,],[555,]),'generic_subp_inst':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'body_opt':([426,],[550,]),'comp_decl_s':([841,952,],[880,880,]),'rep_spec_s':([444,793,],[589,851,]),'name_s':([53,162,326,],[160,261,488,]),'name':([41,53,66,125,131,132,137,144,162,173,195,201,212,213,221,227,230,236,237,244,258,268,285,299,303,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,559,560,567,571,575,577,609,612,618,626,634,636,638,642,645,662,666,667,690,722,727,737,738,742,744,757,780,782,784,785,790,797,819,820,821,824,827,828,829,863,868,875,893,894,898,903,915,919,939,942,],[142,161,170,209,142,142,234,142,161,269,316,142,142,142,365,142,142,142,377,142,404,418,432,142,142,142,468,472,481,161,142,142,316,316,468,432,142,377,377,142,142,142,142,142,142,316,316,316,316,142,316,142,377,651,654,655,432,432,142,432,142,142,142,695,142,142,316,730,316,316,142,316,748,142,432,432,432,432,142,316,377,316,316,316,377,142,730,846,142,432,730,316,316,316,316,316,748,748,142,316,316,142,730,316,316,142,316,377,142,]),'variant_part_opt':([880,],[906,]),'generic_type_def':([403,],[527,]),'object_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'c_id_opt':([548,681,],[680,769,]),'aggregate':([41,125,131,132,144,201,212,213,221,227,230,236,237,238,244,299,303,312,327,332,350,351,353,354,358,359,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'pragma_s':([4,21,117,292,319,447,588,707,708,717,768,775,880,885,909,921,922,948,],[13,60,200,445,475,592,706,445,794,801,592,841,905,910,924,933,934,952,]),'comp_unit':([1,],[9,]),'formal_part':([45,63,249,250,460,710,800,892,929,],[152,152,152,152,152,152,152,152,152,]),'case_hdr':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,]),'aliased_opt':([699,845,859,],[790,790,790,]),'exception_handler':([498,499,],[641,643,]),'align_opt':([453,],[605,]),'object_qualifier_opt':([180,],[285,]),'term':([41,125,144,201,212,213,221,227,230,236,237,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[146,146,240,146,146,146,146,146,369,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'generic_derived_type':([403,],[536,]),'case_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,]),'subunit_body':([267,],[413,]),'block':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,]),'variant_s':([934,],[940,]),'decl_item':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[78,78,78,272,272,422,78,78,272,78,78,78,78,78,]),'exception_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'enum_id_s':([564,],[686,]),'comp_loc_s':([605,],[723,]),'c_name_list':([6,],[35,]),'select_alt':([320,740,743,],[485,485,825,]),'iter_part':([313,858,],[467,894,]),'block_decl':([313,],[463,]),'pkg_decl':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[14,93,14,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'generic_decl':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[15,88,15,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'unconstr_array_type':([285,403,429,],[434,434,434,]),'prot_def':([190,448,],[296,594,]),'async_select':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,]),'generic_formal':([20,],[47,]),'subp_default':([395,651,],[518,756,]),'expression':([41,125,201,236,237,299,303,312,327,332,350,351,353,438,452,465,471,484,495,515,540,560,567,571,577,609,636,645,722,737,757,780,863,893,939,942,],[127,203,349,127,373,451,457,461,489,494,506,507,373,583,603,489,620,489,640,373,673,684,691,692,700,724,489,489,808,507,373,843,897,489,507,489,]),'id_opt':([301,611,713,719,728,734,792,795,946,],[456,726,798,802,814,816,850,852,950,]),'except_choice_s':([642,829,],[750,877,]),'relational':([129,205,374,],[227,227,227,]),'access_type':([403,429,],[531,568,]),'array_type':([285,403,429,],[435,526,569,]),'select_wait':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,]),'value_s':([237,353,757,],[375,510,375,]),'except_handler_part_opt':([339,],[500,]),'constr_array_type':([285,403,429,],[436,436,436,]),'decl_item_s1':([175,253,425,],[276,276,276,]),'type_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'access_opt':([522,],[656,]),'loop_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,]),'null_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,]),'prot_body':([31,103,111,267,280,415,427,443,466,767,927,],[100,100,100,416,100,100,100,100,100,100,100,]),'label':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,]),'decl_item_s':([175,253,425,],[278,278,549,]),'comp_assoc':([125,237,353,515,757,],[208,376,376,376,376,]),'block_body':([106,426,463,587,935,],[194,551,613,705,941,]),'except_choice':([642,828,829,],[751,876,751,]),'decl_item_or_body_s1':([31,111,280,415,427,443,466,767,927,],[103,103,103,103,103,103,103,103,103,]),'condition':([327,465,484,636,645,893,942,],[492,615,632,492,754,912,947,]),'prot_op_decl':([449,720,],[595,804,]),'index':([575,784,],[696,847,]),'iter_index_constraint':([431,],[576,]),'entry_body_part':([912,947,],[926,951,]),'subtype_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'accept_stmt':([195,320,335,339,473,476,482,483,493,612,626,634,638,727,738,740,742,743,744,819,820,821,824,827,868,875,898,903,919,],[337,482,337,337,337,337,337,337,337,337,337,337,337,337,337,482,337,482,337,337,337,337,337,337,337,337,337,337,337,]),'unary':([41,125,201,212,213,221,227,236,237,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'private_opt':([1,8,],[5,37,]),'cond_part':([327,636,],[493,493,]),'entry_decl':([444,449,720,793,],[588,600,600,588,]),'pkg_body':([5,31,37,103,111,267,280,415,427,443,466,767,927,],[30,90,30,90,90,412,90,90,90,90,90,90,90,]),'range_constraint':([209,377,429,432,691,692,695,700,730,843,],[357,357,570,578,570,570,786,786,786,570,]),'handled_stmt_s':([195,473,],[343,623,]),'discrim_spec':([254,283,524,],[401,401,658,]),'decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'qualified':([41,125,131,132,137,144,195,201,212,213,221,227,230,236,237,244,299,303,312,327,332,335,339,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,540,560,567,571,575,577,609,612,618,626,634,636,638,645,722,727,737,738,742,744,757,780,782,785,797,819,820,821,824,827,863,868,875,893,894,898,903,915,919,939,942,],[145,145,145,145,233,145,321,145,145,145,145,145,145,145,145,145,145,145,145,145,145,321,321,145,145,145,145,145,145,145,145,145,321,321,321,321,145,321,145,145,145,145,145,145,145,145,145,321,145,321,321,145,321,145,145,321,145,321,321,321,145,145,145,145,145,321,321,321,321,321,145,321,321,145,145,321,321,145,321,145,145,]),'discrim_part_opt':([179,289,295,],[282,442,448,]),'subprog_spec_is_push':([5,31,37,103,111,175,253,267,276,280,415,425,427,443,466,593,767,927,],[31,111,31,111,111,279,279,415,279,111,111,279,111,111,111,415,111,111,]),'unlabeled':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,]),'decl_item_or_body':([31,103,111,280,415,427,443,466,767,927,],[112,193,112,112,112,112,112,112,112,112,]),'integer_type':([429,],[556,]),'mode':([166,],[264,]),'rep_spec':([31,103,111,175,253,276,280,415,425,427,443,449,466,589,720,767,851,927,],[72,72,72,72,72,72,72,72,72,72,72,601,72,708,601,72,708,72,]),'allocator':([41,125,131,132,144,201,212,213,221,227,230,236,237,244,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'else_opt':([490,627,],[635,741,]),'choice':([125,237,351,353,515,737,757,939,],[207,207,508,207,207,207,207,207,]),'comp_decl':([720,841,905,952,],[805,883,920,883,]),'membership':([129,205,374,],[221,221,221,]),'pragma_arg':([41,236,],[124,371,]),'literal':([41,125,131,132,144,201,212,213,221,227,230,236,237,244,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'with_clause':([1,8,],[10,39,]),'multiplying':([146,240,369,],[244,244,244,]),'if_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,]),'basic_loop':([462,],[611,]),'task_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'procedure_call':([195,320,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[305,477,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,]),'timed_entry_call':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,]),'when_opt':([501,],[644,]),'discrim_spec_s':([254,283,],[402,402,]),'task_private_opt':([589,],[709,]),'alternative_s':([475,],[624,]),'generic_formal_part':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'variant_part':([841,905,952,],[885,921,885,]),'compound_name':([6,17,23,28,49,61,71,73,114,153,178,271,301,419,548,611,681,713,719,728,734,792,795,946,],[36,45,64,70,156,168,176,177,198,64,281,177,64,545,679,64,679,64,64,64,64,64,64,64,]),'reverse_opt':([467,],[618,]),'choice_s':([125,237,353,515,737,757,939,],[202,202,202,202,818,202,943,]),'primary':([41,125,131,132,144,201,212,213,221,227,230,236,237,244,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[135,135,231,232,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'task_def':([184,442,],[291,585,]),'body_stub':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'relation':([41,125,201,212,213,236,237,299,303,312,327,332,350,351,353,438,452,465,471,484,495,515,540,560,567,571,577,609,636,645,722,737,757,780,863,893,939,942,],[138,138,138,360,361,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'entry_decl_s':([292,707,],[444,793,]),'param':([20,151,392,609,797,858,],[59,248,516,248,248,248,]),'select_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,]),'guarded_select_alt':([320,740,],[478,822,]),'label_opt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,]),'delay_or_entry_alt':([320,],[480,]),'task_body':([31,103,111,267,280,415,427,443,466,767,927,],[96,96,96,410,96,96,96,96,96,96,96,]),'short_circuit':([127,203,349,373,451,457,461,489,494,506,507,583,603,620,640,673,684,691,692,700,724,808,843,897,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'enum_id':([564,772,],[688,839,]),'prot_spec':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'subprog_spec':([5,20,31,37,103,111,175,253,267,276,280,415,425,427,443,449,466,593,720,767,927,],[27,51,86,27,86,86,273,273,409,273,86,86,273,86,86,597,86,714,597,86,86,]),'enumeration_type':([429,],[562,]),'accept_hdr':([195,320,335,339,473,476,482,483,493,612,626,634,638,727,738,740,742,743,744,819,820,821,824,827,868,875,898,903,919,],[318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,]),'private_part':([278,],[424,]),'pragma':([0,8,13,31,60,103,111,175,200,253,276,280,415,425,427,443,445,449,466,475,592,706,720,767,794,801,841,905,910,924,927,933,934,952,],[4,38,43,94,43,94,94,94,43,94,94,94,94,94,94,94,43,596,94,43,43,43,596,94,43,43,43,43,43,43,94,43,43,43,]),'prot_private_opt':([449,],[598,]),'discrete_range':([575,618,782,797,894,],[697,731,844,855,913,]),'compound_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,]),'raise_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,]),'iteration':([313,],[462,]),'return_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,]),'stmts_opt':([476,482,483,820,821,],[625,630,631,870,871,]),'compilation':([0,],[1,]),'tagged_opt':([403,429,],[538,565,]),'renames':([27,51,70,86,156,177,273,287,433,],[67,158,174,67,252,174,67,439,581,]),'subprog_body':([5,31,37,103,111,267,280,415,427,443,466,593,767,927,],[32,113,32,113,113,414,113,113,113,113,113,716,113,113,]),'range':([125,221,237,351,353,358,515,575,618,737,757,782,785,797,894,915,939,],[211,367,211,211,211,513,211,698,698,211,211,698,513,698,698,931,211,]),'prot_op_body':([593,],[717,]),'fixed_type':([429,],[554,]),'value':([237,353,515,757,],[372,372,650,372,]),'range_constr_opt':([695,700,730,],[787,791,787,]),'cond_entry_call':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,]),'logical':([127,203,349,373,451,457,461,489,494,506,507,583,603,620,640,673,684,691,692,700,724,808,843,897,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'subtype_ind':([285,348,534,539,559,662,666,667,690,790,],[433,505,665,672,683,761,762,763,776,849,]),'record_type':([429,],[563,]),'prot_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'type_completion':([282,],[428,]),'factor':([41,125,144,201,212,213,221,227,230,236,237,244,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[126,126,126,126,126,126,126,126,126,126,126,391,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'requeue_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,]),'pkg_spec':([5,20,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[16,54,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'abort_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,]),'parenthesized_primary':([41,125,131,132,144,201,212,213,221,227,230,236,237,238,244,299,303,312,327,332,350,351,353,354,358,359,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[147,147,147,147,147,147,147,147,147,147,147,147,147,384,147,147,147,147,147,147,147,147,147,147,147,384,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'derived_type':([429,],[557,]),'designator':([23,153,301,611,713,719,728,734,792,795,946,],[63,249,455,455,455,455,455,455,455,455,455,]),'use_clause_opt':([10,39,],[40,118,]),'attrib_def':([31,103,111,175,253,276,280,415,425,427,443,449,466,589,720,767,851,927,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'generic_pkg_inst':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'limited_opt':([538,565,],[671,689,]),'def_id':([20,31,103,111,151,165,175,253,254,276,280,283,392,415,425,427,443,466,524,609,720,767,797,841,858,905,927,952,],[57,57,57,57,57,262,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'attribute_id':([238,260,300,359,],[383,383,454,383,]),'constraint':([432,],[579,]),'use_clause':([20,31,40,103,111,118,175,253,276,280,415,425,427,443,466,767,927,],[58,97,119,97,97,119,97,97,97,97,97,97,97,97,97,97,97,]),'unit':([5,37,],[21,117,]),'code_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,]),'address_spec':([31,103,111,175,253,276,280,415,425,427,443,449,466,589,720,767,851,927,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'generic_inst':([68,175,186,420,],[172,274,172,172,]),'type_def':([429,],[572,]),'statement':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[308,496,497,308,308,308,308,308,308,497,308,497,497,308,308,497,497,308,308,497,308,308,497,497,308,497,]),'object_subtype_def':([285,],[437,]),'except_handler_part':([339,],[499,]),'used_char':([239,],[390,]),'number_decl':([31,103,111,175,253,276,280,415,425,427,443,466,767,927,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'record_def':([689,770,842,],[773,837,886,]),'assign_stmt':([195,335,339,473,476,482,483,493,612,626,634,638,727,738,742,744,819,820,821,824,827,868,875,898,903,919,],[336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,]),'selected_comp':([41,53,66,125,131,132,137,144,162,173,195,201,212,213,221,227,230,236,237,244,258,268,285,299,303,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,559,560,567,571,575,577,609,612,618,626,634,636,638,642,645,662,666,667,690,722,727,737,738,742,744,757,780,782,784,785,790,797,819,820,821,824,827,828,829,863,868,875,893,894,898,903,915,919,939,942,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'indexed_comp':([41,53,66,125,131,132,137,144,162,173,195,201,212,213,221,227,230,236,237,244,258,268,285,299,303,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,559,560,567,571,575,577,609,612,618,626,634,636,638,642,645,662,666,667,690,722,727,737,738,742,744,757,780,782,784,785,790,797,819,820,821,824,827,828,829,863,868,875,893,894,898,903,915,919,939,942,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'pragma_arg_s':([41,],[141,]),'attribute':([41,53,66,125,131,132,137,144,162,173,195,201,212,213,221,227,230,236,237,244,258,268,285,299,303,312,314,317,320,326,327,332,335,339,340,348,350,351,353,354,358,438,452,465,471,473,476,482,483,484,493,495,515,517,519,520,534,539,540,559,560,567,571,575,577,609,612,618,626,634,636,638,642,645,662,666,667,690,722,727,737,738,742,744,757,780,782,784,785,790,797,819,820,821,824,827,828,829,863,868,875,893,894,898,903,915,919,939,942,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'rename_unit':([5,31,37,103,111,175,253,276,280,415,425,427,443,466,767,927,],[25,104,25,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'formal_part_opt':([45,63,249,250,460,710,800,892,929,],[150,169,394,395,608,796,857,911,936,]),'comp_list':([841,952,],[882,955,]),'prot_op_decl_s':([297,],[449,]),'or_select':([478,],[627,]),'simple_expression':([41,125,201,212,213,221,227,236,237,299,303,312,327,332,350,351,353,354,358,438,452,465,471,484,495,515,540,560,567,571,575,577,609,618,636,645,722,737,757,780,782,785,797,863,893,894,915,939,942,],[129,205,129,129,129,366,368,129,374,129,129,129,129,129,129,374,374,511,366,129,129,129,129,129,129,374,129,129,129,129,366,129,129,366,129,129,129,374,374,129,366,366,366,129,129,366,366,374,129,]),'delay_stmt':([195,320,335,339,473,476,482,483,493,612,626,634,638,727,738,739,740,742,743,744,819,820,821,824,827,868,875,898,903,919,],[338,483,338,338,338,338,338,338,338,338,338,338,338,338,338,820,821,338,821,338,338,338,338,338,338,338,338,338,338,338,]),'subunit':([5,37,],[29,29,]),'statement_s':([195,473,476,482,483,493,612,634,738,742,820,821,827,868,903,],[339,339,626,626,626,638,727,744,819,824,626,626,875,898,919,]),'decl_part':([31,111,280,415,427,443,466,767,927,],[106,106,426,106,426,587,616,587,935,]),'range_spec':([429,691,692,843,],[561,777,779,777,]),'discrete_with_range':([125,237,351,353,515,737,757,939,],[210,378,210,378,378,210,378,210,]),'decimal_digits_constraint':([432,],[580,]),'variant':([934,940,],[938,945,]),'float_type':([429,],[573,]),'cond_clause_s':([327,],[490,]),'context_spec':([1,],[8,]),'name_opt':([314,340,],[469,501,]),'range_spec_opt':([691,843,],[778,888,]),'entry_name':([310,],[460,]),'generic_discrim_part_opt':([157,],[256,]),'adding':([129,205,366,368,374,511,],[230,230,230,230,230,230,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal_symbol","S'",1,None,None,None),
  ('goal_symbol -> compilation','goal_symbol',1,'p_goal_symbol','grammar.py',31),
  ('pragma -> PRAGMA IDENTIFIER ;','pragma',3,'p_pragma','grammar.py',38),
  ('pragma -> PRAGMA simple_name ( pragma_arg_s ) ;','pragma',6,'p_pragma','grammar.py',39),
  ('pragma_arg_s -> pragma_arg','pragma_arg_s',1,'p_pragma_arg_s','grammar.py',48),
  ('pragma_arg_s -> pragma_arg_s , pragma_arg','pragma_arg_s',3,'p_pragma_arg_s','grammar.py',49),
  ('pragma_arg -> expression','pragma_arg',1,'p_pragma_arg','grammar.py',58),
  ('pragma_arg -> simple_name ARROW expression','pragma_arg',3,'p_pragma_arg','grammar.py',59),
  ('pragma_s -> <empty>','pragma_s',0,'p_pragma_s','grammar.py',68),
  ('pragma_s -> pragma_s pragma','pragma_s',2,'p_pragma_s','grammar.py',69),
  ('decl -> object_decl','decl',1,'p_decl','grammar.py',77),
  ('decl -> number_decl','decl',1,'p_decl','grammar.py',78),
  ('decl -> type_decl','decl',1,'p_decl','grammar.py',79),
  ('decl -> subtype_decl','decl',1,'p_decl','grammar.py',80),
  ('decl -> subprog_decl','decl',1,'p_decl','grammar.py',81),
  ('decl -> pkg_decl','decl',1,'p_decl','grammar.py',82),
  ('decl -> task_decl','decl',1,'p_decl','grammar.py',83),
  ('decl -> prot_decl','decl',1,'p_decl','grammar.py',84),
  ('decl -> exception_decl','decl',1,'p_decl','grammar.py',85),
  ('decl -> rename_decl','decl',1,'p_decl','grammar.py',86),
  ('decl -> generic_decl','decl',1,'p_decl','grammar.py',87),
  ('decl -> body_stub','decl',1,'p_decl','grammar.py',88),
  ('decl -> error ;','decl',2,'p_decl','grammar.py',89),
  ('object_decl -> def_id_s : object_qualifier_opt object_subtype_def init_opt ;','object_decl',6,'p_object_decl','grammar.py',95),
  ('def_id_s -> def_id','def_id_s',1,'p_def_id_s','grammar.py',101),
  ('def_id_s -> def_id_s , def_id','def_id_s',3,'p_def_id_s','grammar.py',102),
  ('def_id -> IDENTIFIER','def_id',1,'p_def_id','grammar.py',112),
  ('object_qualifier_opt -> <empty>','object_qualifier_opt',0,'p_object_qualifier_opt','grammar.py',117),
  ('object_qualifier_opt -> ALIASED','object_qualifier_opt',1,'p_object_qualifier_opt','grammar.py',118),
  ('object_qualifier_opt -> CONSTANT','object_qualifier_opt',1,'p_object_qualifier_opt','grammar.py',119),
  ('object_qualifier_opt -> ALIASED CONSTANT','object_qualifier_opt',2,'p_object_qualifier_opt','grammar.py',120),
  ('object_subtype_def -> subtype_ind','object_subtype_def',1,'p_object_subtype_def','grammar.py',128),
  ('object_subtype_def -> array_type','object_subtype_def',1,'p_object_subtype_def','grammar.py',129),
  ('init_opt -> <empty>','init_opt',0,'p_init_opt','grammar.py',135),
  ('init_opt -> ASSIGN expression','init_opt',2,'p_init_opt','grammar.py',136),
  ('number_decl -> def_id_s : CONSTANT ASSIGN expression ;','number_decl',6,'p_number_decl','grammar.py',144),
  ('type_decl -> TYPE IDENTIFIER discrim_part_opt type_completion ;','type_decl',5,'p_type_decl','grammar.py',149),
  ('discrim_part_opt -> <empty>','discrim_part_opt',0,'p_discrim_part_opt','grammar.py',155),
  ('discrim_part_opt -> discrim_part','discrim_part_opt',1,'p_discrim_part_opt','grammar.py',156),
  ('discrim_part_opt -> ( BOX )','discrim_part_opt',3,'p_discrim_part_opt','grammar.py',157),
  ('type_completion -> <empty>','type_completion',0,'p_type_completion','grammar.py',168),
  ('type_completion -> IS type_def','type_completion',2,'p_type_completion','grammar.py',169),
  ('type_def -> enumeration_type','type_def',1,'p_type_def','grammar.py',177),
  ('type_def -> integer_type','type_def',1,'p_type_def','grammar.py',178),
  ('type_def -> real_type','type_def',1,'p_type_def','grammar.py',179),
  ('type_def -> array_type','type_def',1,'p_type_def','grammar.py',180),
  ('type_def -> record_type','type_def',1,'p_type_def','grammar.py',181),
  ('type_def -> access_type','type_def',1,'p_type_def','grammar.py',182),
  ('type_def -> derived_type','type_def',1,'p_type_def','grammar.py',183),
  ('type_def -> private_type','type_def',1,'p_type_def','grammar.py',184),
  ('subtype_decl -> SUBTYPE IDENTIFIER IS subtype_ind ;','subtype_decl',5,'p_subtype_decl','grammar.py',190),
  ('subtype_ind -> name constraint','subtype_ind',2,'p_subtype_ind','grammar.py',195),
  ('subtype_ind -> name','subtype_ind',1,'p_subtype_ind','grammar.py',196),
  ('constraint -> range_constraint','constraint',1,'p_constraint','grammar.py',205),
  ('constraint -> decimal_digits_constraint','constraint',1,'p_constraint','grammar.py',206),
  ('decimal_digits_constraint -> DIGITS expression range_constr_opt','decimal_digits_constraint',3,'p_decimal_digits_constraint','grammar.py',213),
  ('derived_type -> NEW subtype_ind','derived_type',2,'p_derived_type','grammar.py',218),
  ('derived_type -> NEW subtype_ind WITH PRIVATE','derived_type',4,'p_derived_type','grammar.py',219),
  ('derived_type -> NEW subtype_ind WITH record_def','derived_type',4,'p_derived_type','grammar.py',220),
  ('derived_type -> ABSTRACT NEW subtype_ind WITH PRIVATE','derived_type',5,'p_derived_type','grammar.py',221),
  ('derived_type -> ABSTRACT NEW subtype_ind WITH record_def','derived_type',5,'p_derived_type','grammar.py',222),
  ('range_constraint -> RANGE range','range_constraint',2,'p_range_constraint','grammar.py',232),
  ('range -> simple_expression DOTDOT simple_expression','range',3,'p_range','grammar.py',238),
  ('enumeration_type -> ( enum_id_s )','enumeration_type',3,'p_enumeration_type','grammar.py',243),
  ('enum_id_s -> enum_id','enum_id_s',1,'p_enum_id_s','grammar.py',248),
  ('enum_id_s -> enum_id_s , enum_id','enum_id_s',3,'p_enum_id_s','grammar.py',249),
  ('enum_id -> IDENTIFIER','enum_id',1,'p_enum_id','grammar.py',257),
  ('enum_id -> CHAR','enum_id',1,'p_enum_id','grammar.py',258),
  ('integer_type -> range_spec','integer_type',1,'p_integer_type','grammar.py',263),
  ('integer_type -> MOD expression','integer_type',2,'p_integer_type','grammar.py',264),
  ('range_spec -> range_constraint','range_spec',1,'p_range_spec','grammar.py',272),
  ('range_spec_opt -> <empty>','range_spec_opt',0,'p_range_spec_opt','grammar.py',277),
  ('range_spec_opt -> range_spec','range_spec_opt',1,'p_range_spec_opt','grammar.py',278),
  ('real_type -> float_type','real_type',1,'p_real_type','grammar.py',286),
  ('real_type -> fixed_type','real_type',1,'p_real_type','grammar.py',287),
  ('float_type -> DIGITS expression range_spec_opt','float_type',3,'p_float_type','grammar.py',292),
  ('fixed_type -> DELTA expression range_spec','fixed_type',3,'p_fixed_type','grammar.py',297),
  ('fixed_type -> DELTA expression DIGITS expression range_spec_opt','fixed_type',5,'p_fixed_type','grammar.py',298),
  ('array_type -> unconstr_array_type','array_type',1,'p_array_type','grammar.py',306),
  ('array_type -> constr_array_type','array_type',1,'p_array_type','grammar.py',307),
  ('unconstr_array_type -> ARRAY ( index_s ) OF component_subtype_def','unconstr_array_type',6,'p_unconstr_array_type','grammar.py',313),
  ('constr_array_type -> ARRAY iter_index_constraint OF component_subtype_def','constr_array_type',4,'p_constr_array_type','grammar.py',318),
  ('component_subtype_def -> aliased_opt subtype_ind','component_subtype_def',2,'p_component_subtype_def','grammar.py',323),
  ('aliased_opt -> <empty>','aliased_opt',0,'p_aliased_opt','grammar.py',328),
  ('aliased_opt -> ALIASED','aliased_opt',1,'p_aliased_opt','grammar.py',329),
  ('index_s -> index','index_s',1,'p_index_s','grammar.py',337),
  ('index_s -> index_s , index','index_s',3,'p_index_s','grammar.py',338),
  ('index -> name RANGE BOX','index',3,'p_index','grammar.py',347),
  ('iter_index_constraint -> ( iter_discrete_range_s )','iter_index_constraint',3,'p_iter_index_constraint','grammar.py',352),
  ('iter_discrete_range_s -> discrete_range','iter_discrete_range_s',1,'p_iter_discrete_range_s','grammar.py',358),
  ('iter_discrete_range_s -> iter_discrete_range_s , discrete_range','iter_discrete_range_s',3,'p_iter_discrete_range_s','grammar.py',359),
  ('discrete_range -> name range_constr_opt','discrete_range',2,'p_discrete_range','grammar.py',368),
  ('discrete_range -> range','discrete_range',1,'p_discrete_range','grammar.py',369),
  ('range_constr_opt -> <empty>','range_constr_opt',0,'p_range_constr_opt','grammar.py',378),
  ('range_constr_opt -> range_constraint','range_constr_opt',1,'p_range_constr_opt','grammar.py',379),
  ('record_type -> tagged_opt limited_opt record_def','record_type',3,'p_record_type','grammar.py',388),
  ('record_def -> RECORD pragma_s comp_list END RECORD','record_def',5,'p_record_def','grammar.py',393),
  ('record_def -> NuLL RECORD','record_def',2,'p_record_def','grammar.py',394),
  ('tagged_opt -> <empty>','tagged_opt',0,'p_tagged_opt','grammar.py',403),
  ('tagged_opt -> TAGGED','tagged_opt',1,'p_tagged_opt','grammar.py',404),
  ('tagged_opt -> ABSTRACT TAGGED','tagged_opt',2,'p_tagged_opt','grammar.py',405),
  ('comp_list -> comp_decl_s variant_part_opt','comp_list',2,'p_comp_list','grammar.py',413),
  ('comp_list -> variant_part pragma_s','comp_list',2,'p_comp_list','grammar.py',414),
  ('comp_list -> NuLL ; pragma_s','comp_list',3,'p_comp_list','grammar.py',415),
  ('comp_decl_s -> comp_decl','comp_decl_s',1,'p_comp_decl_s','grammar.py',423),
  ('comp_decl_s -> comp_decl_s pragma_s comp_decl','comp_decl_s',3,'p_comp_decl_s','grammar.py',424),
  ('variant_part_opt -> pragma_s','variant_part_opt',1,'p_variant_part_opt','grammar.py',433),
  ('variant_part_opt -> pragma_s variant_part pragma_s','variant_part_opt',3,'p_variant_part_opt','grammar.py',434),
  ('comp_decl -> def_id_s : component_subtype_def init_opt ;','comp_decl',5,'p_comp_decl','grammar.py',443),
  ('comp_decl -> error ;','comp_decl',2,'p_comp_decl','grammar.py',444),
  ('discrim_part -> ( discrim_spec_s )','discrim_part',3,'p_discrim_part','grammar.py',452),
  ('discrim_spec_s -> discrim_spec','discrim_spec_s',1,'p_discrim_spec_s','grammar.py',457),
  ('discrim_spec_s -> discrim_spec_s ; discrim_spec','discrim_spec_s',3,'p_discrim_spec_s','grammar.py',458),
  ('discrim_spec -> def_id_s : access_opt mark init_opt','discrim_spec',5,'p_discrim_spec','grammar.py',463),
  ('discrim_spec -> error','discrim_spec',1,'p_discrim_spec','grammar.py',464),
  ('access_opt -> <empty>','access_opt',0,'p_access_opt','grammar.py',469),
  ('access_opt -> ACCESS','access_opt',1,'p_access_opt','grammar.py',470),
  ('variant_part -> CASE simple_name IS pragma_s variant_s END CASE ;','variant_part',8,'p_variant_part','grammar.py',478),
  ('variant_s -> variant','variant_s',1,'p_variant_s','grammar.py',483),
  ('variant_s -> variant_s variant','variant_s',2,'p_variant_s','grammar.py',484),
  ('variant -> WHEN choice_s ARROW pragma_s comp_list','variant',5,'p_variant','grammar.py',492),
  ('choice_s -> choice','choice_s',1,'p_choice_s','grammar.py',497),
  ('choice_s -> choice_s | choice','choice_s',3,'p_choice_s','grammar.py',498),
  ('choice -> expression','choice',1,'p_choice','grammar.py',507),
  ('choice -> discrete_with_range','choice',1,'p_choice','grammar.py',508),
  ('choice -> OTHERS','choice',1,'p_choice','grammar.py',509),
  ('discrete_with_range -> name range_constraint','discrete_with_range',2,'p_discrete_with_range','grammar.py',518),
  ('discrete_with_range -> range','discrete_with_range',1,'p_discrete_with_range','grammar.py',519),
  ('access_type -> ACCESS subtype_ind','access_type',2,'p_access_type','grammar.py',528),
  ('access_type -> ACCESS CONSTANT subtype_ind','access_type',3,'p_access_type','grammar.py',529),
  ('access_type -> ACCESS ALL subtype_ind','access_type',3,'p_access_type','grammar.py',530),
  ('decl_part -> <empty>','decl_part',0,'p_decl_part','grammar.py',541),
  ('decl_part -> decl_item_or_body_s1','decl_part',1,'p_decl_part','grammar.py',542),
  ('decl_item_s -> <empty>','decl_item_s',0,'p_decl_item_s','grammar.py',551),
  ('decl_item_s -> decl_item_s1','decl_item_s',1,'p_decl_item_s','grammar.py',552),
  ('decl_item_s1 -> decl_item','decl_item_s1',1,'p_decl_item_s1','grammar.py',560),
  ('decl_item_s1 -> decl_item_s1 decl_item','decl_item_s1',2,'p_decl_item_s1','grammar.py',561),
  ('decl_item -> decl','decl_item',1,'p_decl_item','grammar.py',569),
  ('decl_item -> use_clause','decl_item',1,'p_decl_item','grammar.py',570),
  ('decl_item -> rep_spec','decl_item',1,'p_decl_item','grammar.py',571),
  ('decl_item -> pragma','decl_item',1,'p_decl_item','grammar.py',572),
  ('decl_item_or_body_s1 -> decl_item_or_body','decl_item_or_body_s1',1,'p_decl_item_or_body_s1','grammar.py',578),
  ('decl_item_or_body_s1 -> decl_item_or_body_s1 decl_item_or_body','decl_item_or_body_s1',2,'p_decl_item_or_body_s1','grammar.py',579),
  ('decl_item_or_body -> body','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',588),
  ('decl_item_or_body -> decl_item','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',589),
  ('body -> subprog_body','body',1,'p_body','grammar.py',595),
  ('body -> pkg_body','body',1,'p_body','grammar.py',596),
  ('body -> task_body','body',1,'p_body','grammar.py',597),
  ('body -> prot_body','body',1,'p_body','grammar.py',598),
  ('name -> simple_name','name',1,'p_name','grammar.py',604),
  ('name -> indexed_comp','name',1,'p_name','grammar.py',605),
  ('name -> selected_comp','name',1,'p_name','grammar.py',606),
  ('name -> attribute','name',1,'p_name','grammar.py',607),
  ('name -> operator_symbol','name',1,'p_name','grammar.py',608),
  ('mark -> simple_name','mark',1,'p_mark','grammar.py',614),
  ('mark -> mark TICK attribute_id','mark',3,'p_mark','grammar.py',615),
  ('mark -> mark . simple_name','mark',3,'p_mark','grammar.py',616),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','grammar.py',625),
  ('compound_name -> simple_name','compound_name',1,'p_compound_name','grammar.py',630),
  ('compound_name -> compound_name . simple_name','compound_name',3,'p_compound_name','grammar.py',631),
  ('c_name_list -> compound_name','c_name_list',1,'p_c_name_list','grammar.py',640),
  ('c_name_list -> c_name_list , compound_name','c_name_list',3,'p_c_name_list','grammar.py',641),
  ('used_char -> CHAR','used_char',1,'p_used_char','grammar.py',650),
  ('operator_symbol -> STRING','operator_symbol',1,'p_operator_symbol','grammar.py',655),
  ('indexed_comp -> name ( value_s )','indexed_comp',4,'p_indexed_comp','grammar.py',660),
  ('value_s -> value','value_s',1,'p_value_s','grammar.py',667),
  ('value_s -> value_s , value','value_s',3,'p_value_s','grammar.py',668),
  ('value -> expression','value',1,'p_value','grammar.py',678),
  ('value -> comp_assoc','value',1,'p_value','grammar.py',679),
  ('value -> discrete_with_range','value',1,'p_value','grammar.py',680),
  ('value -> error','value',1,'p_value','grammar.py',681),
  ('selected_comp -> name . simple_name','selected_comp',3,'p_selected_comp','grammar.py',688),
  ('selected_comp -> name . used_char','selected_comp',3,'p_selected_comp','grammar.py',689),
  ('selected_comp -> name . operator_symbol','selected_comp',3,'p_selected_comp','grammar.py',690),
  ('selected_comp -> name . ALL','selected_comp',3,'p_selected_comp','grammar.py',691),
  ('attribute -> name TICK attribute_id','attribute',3,'p_attribute','grammar.py',697),
  ('attribute_id -> IDENTIFIER','attribute_id',1,'p_attribute_id','grammar.py',702),
  ('attribute_id -> DIGITS','attribute_id',1,'p_attribute_id','grammar.py',703),
  ('attribute_id -> DELTA','attribute_id',1,'p_attribute_id','grammar.py',704),
  ('attribute_id -> ACCESS','attribute_id',1,'p_attribute_id','grammar.py',705),
  ('literal -> INT','literal',1,'p_literal','grammar.py',710),
  ('literal -> FLOAT','literal',1,'p_literal','grammar.py',711),
  ('literal -> NuLL','literal',1,'p_literal','grammar.py',712),
  ('aggregate -> ( comp_assoc )','aggregate',3,'p_aggregate','grammar.py',717),
  ('aggregate -> ( expression WITH value_s )','aggregate',5,'p_aggregate','grammar.py',718),
  ('aggregate -> ( expression WITH NuLL RECORD )','aggregate',6,'p_aggregate','grammar.py',719),
  ('aggregate -> ( NuLL RECORD )','aggregate',4,'p_aggregate','grammar.py',720),
  ('comp_assoc -> choice_s ARROW expression','comp_assoc',3,'p_comp_assoc','grammar.py',726),
  ('expression -> relation','expression',1,'p_expression','grammar.py',731),
  ('expression -> expression logical relation','expression',3,'p_expression','grammar.py',732),
  ('expression -> expression short_circuit relation','expression',3,'p_expression','grammar.py',733),
  ('logical -> AND','logical',1,'p_logical','grammar.py',742),
  ('logical -> OR','logical',1,'p_logical','grammar.py',743),
  ('logical -> XOR','logical',1,'p_logical','grammar.py',744),
  ('short_circuit -> AND THEN','short_circuit',2,'p_short_circuit','grammar.py',749),
  ('short_circuit -> OR ELSE','short_circuit',2,'p_short_circuit','grammar.py',750),
  ('relation -> simple_expression','relation',1,'p_relation','grammar.py',755),
  ('relation -> simple_expression relational simple_expression','relation',3,'p_relation','grammar.py',756),
  ('relation -> simple_expression membership range','relation',3,'p_relation','grammar.py',757),
  ('relation -> simple_expression membership name','relation',3,'p_relation','grammar.py',758),
  ('relational -> =','relational',1,'p_relational','grammar.py',767),
  ('relational -> NEQ','relational',1,'p_relational','grammar.py',768),
  ('relational -> <','relational',1,'p_relational','grammar.py',769),
  ('relational -> LEQ','relational',1,'p_relational','grammar.py',770),
  ('relational -> >','relational',1,'p_relational','grammar.py',771),
  ('relational -> GEQ','relational',1,'p_relational','grammar.py',772),
  ('membership -> IN','membership',1,'p_membership','grammar.py',777),
  ('membership -> NOT IN','membership',2,'p_membership','grammar.py',778),
  ('simple_expression -> unary term','simple_expression',2,'p_simple_expression','grammar.py',783),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','grammar.py',784),
  ('simple_expression -> simple_expression adding term','simple_expression',3,'p_simple_expression','grammar.py',785),
  ('unary -> +','unary',1,'p_unary','grammar.py',796),
  ('unary -> -','unary',1,'p_unary','grammar.py',797),
  ('adding -> +','adding',1,'p_adding','grammar.py',802),
  ('adding -> -','adding',1,'p_adding','grammar.py',803),
  ('adding -> &','adding',1,'p_adding','grammar.py',804),
  ('term -> factor','term',1,'p_term','grammar.py',809),
  ('term -> term multiplying factor','term',3,'p_term','grammar.py',810),
  ('multiplying -> *','multiplying',1,'p_multiplying','grammar.py',819),
  ('multiplying -> /','multiplying',1,'p_multiplying','grammar.py',820),
  ('multiplying -> MOD','multiplying',1,'p_multiplying','grammar.py',821),
  ('multiplying -> REM','multiplying',1,'p_multiplying','grammar.py',822),
  ('multiplying -> STARSTAR','multiplying',1,'p_multiplying','grammar.py',823),
  ('factor -> primary','factor',1,'p_factor','grammar.py',828),
  ('factor -> NOT primary','factor',2,'p_factor','grammar.py',829),
  ('factor -> ABS primary','factor',2,'p_factor','grammar.py',830),
  ('primary -> literal','primary',1,'p_primary','grammar.py',839),
  ('primary -> name','primary',1,'p_primary','grammar.py',840),
  ('primary -> allocator','primary',1,'p_primary','grammar.py',841),
  ('primary -> qualified','primary',1,'p_primary','grammar.py',842),
  ('primary -> parenthesized_primary','primary',1,'p_primary','grammar.py',843),
  ('parenthesized_primary -> aggregate','parenthesized_primary',1,'p_parenthesized_primary','grammar.py',850),
  ('parenthesized_primary -> ( expression )','parenthesized_primary',3,'p_parenthesized_primary','grammar.py',851),
  ('qualified -> name TICK parenthesized_primary','qualified',3,'p_qualified','grammar.py',859),
  ('allocator -> NEW name','allocator',2,'p_allocator','grammar.py',864),
  ('allocator -> NEW qualified','allocator',2,'p_allocator','grammar.py',865),
  ('statement_s -> statement','statement_s',1,'p_statement_s','grammar.py',870),
  ('statement_s -> statement_s statement','statement_s',2,'p_statement_s','grammar.py',871),
  ('statement -> unlabeled','statement',1,'p_statement','grammar.py',881),
  ('statement -> label statement','statement',2,'p_statement','grammar.py',882),
  ('unlabeled -> simple_stmt','unlabeled',1,'p_unlabeled','grammar.py',891),
  ('unlabeled -> compound_stmt','unlabeled',1,'p_unlabeled','grammar.py',892),
  ('simple_stmt -> null_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',899),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',900),
  ('simple_stmt -> exit_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',901),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',902),
  ('simple_stmt -> procedure_call','simple_stmt',1,'p_simple_stmt','grammar.py',903),
  ('simple_stmt -> delay_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',904),
  ('simple_stmt -> abort_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',905),
  ('simple_stmt -> raise_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',906),
  ('simple_stmt -> code_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',907),
  ('simple_stmt -> requeue_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',908),
  ('simple_stmt -> error ;','simple_stmt',2,'p_simple_stmt','grammar.py',909),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',916),
  ('compound_stmt -> case_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',917),
  ('compound_stmt -> loop_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',918),
  ('compound_stmt -> block','compound_stmt',1,'p_compound_stmt','grammar.py',919),
  ('compound_stmt -> accept_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',920),
  ('compound_stmt -> select_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',921),
  ('label -> LL IDENTIFIER RR','label',3,'p_label','grammar.py',927),
  ('null_stmt -> NuLL ;','null_stmt',2,'p_null_stmt','grammar.py',932),
  ('assign_stmt -> name ASSIGN expression ;','assign_stmt',4,'p_assign_stmt','grammar.py',937),
  ('if_stmt -> IF cond_clause_s else_opt END IF ;','if_stmt',6,'p_if_stmt','grammar.py',942),
  ('cond_clause_s -> cond_clause','cond_clause_s',1,'p_cond_clause_s','grammar.py',947),
  ('cond_clause_s -> cond_clause_s ELSIF cond_clause','cond_clause_s',3,'p_cond_clause_s','grammar.py',948),
  ('cond_clause -> cond_part statement_s','cond_clause',2,'p_cond_clause','grammar.py',958),
  ('cond_part -> condition THEN','cond_part',2,'p_cond_part','grammar.py',963),
  ('condition -> expression','condition',1,'p_condition','grammar.py',968),
  ('else_opt -> <empty>','else_opt',0,'p_else_opt','grammar.py',974),
  ('else_opt -> ELSE statement_s','else_opt',2,'p_else_opt','grammar.py',975),
  ('case_stmt -> case_hdr pragma_s alternative_s END CASE ;','case_stmt',6,'p_case_stmt','grammar.py',986),
  ('case_hdr -> CASE expression IS','case_hdr',3,'p_case_hdr','grammar.py',991),
  ('alternative_s -> <empty>','alternative_s',0,'p_alternative_s','grammar.py',998),
  ('alternative_s -> alternative_s alternative','alternative_s',2,'p_alternative_s','grammar.py',999),
  ('alternative -> WHEN choice_s ARROW statement_s','alternative',4,'p_alternative','grammar.py',1007),
  ('loop_stmt -> label_opt iteration basic_loop id_opt ;','loop_stmt',5,'p_loop_stmt','grammar.py',1012),
  ('label_opt -> <empty>','label_opt',0,'p_label_opt','grammar.py',1017),
  ('label_opt -> IDENTIFIER :','label_opt',2,'p_label_opt','grammar.py',1018),
  ('iteration -> <empty>','iteration',0,'p_iteration','grammar.py',1026),
  ('iteration -> WHILE condition','iteration',2,'p_iteration','grammar.py',1027),
  ('iteration -> iter_part reverse_opt discrete_range','iteration',3,'p_iteration','grammar.py',1028),
  ('iter_part -> FOR IDENTIFIER IN','iter_part',3,'p_iter_part','grammar.py',1038),
  ('reverse_opt -> <empty>','reverse_opt',0,'p_reverse_opt','grammar.py',1044),
  ('reverse_opt -> REVERSE','reverse_opt',1,'p_reverse_opt','grammar.py',1045),
  ('basic_loop -> LOOP statement_s END LOOP','basic_loop',4,'p_basic_loop','grammar.py',1053),
  ('id_opt -> <empty>','id_opt',0,'p_id_opt','grammar.py',1058),
  ('id_opt -> designator','id_opt',1,'p_id_opt','grammar.py',1059),
  ('block -> label_opt block_decl block_body END id_opt ;','block',6,'p_block','grammar.py',1067),
  ('block_decl -> <empty>','block_decl',0,'p_block_decl','grammar.py',1072),
  ('block_decl -> DECLARE decl_part','block_decl',2,'p_block_decl','grammar.py',1073),
  ('block_body -> BEGIN handled_stmt_s','block_body',2,'p_block_body','grammar.py',1081),
  ('handled_stmt_s -> statement_s except_handler_part_opt','handled_stmt_s',2,'p_handled_stmt_s','grammar.py',1086),
  ('except_handler_part_opt -> <empty>','except_handler_part_opt',0,'p_except_handler_part_opt','grammar.py',1091),
  ('except_handler_part_opt -> except_handler_part','except_handler_part_opt',1,'p_except_handler_part_opt','grammar.py',1092),
  ('exit_stmt -> EXIT name_opt when_opt ;','exit_stmt',4,'p_exit_stmt','grammar.py',1101),
  ('name_opt -> <empty>','name_opt',0,'p_name_opt','grammar.py',1106),
  ('name_opt -> name','name_opt',1,'p_name_opt','grammar.py',1107),
  ('when_opt -> <empty>','when_opt',0,'p_when_opt','grammar.py',1115),
  ('when_opt -> WHEN condition','when_opt',2,'p_when_opt','grammar.py',1116),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt','grammar.py',1124),
  ('return_stmt -> RETURN expression ;','return_stmt',3,'p_return_stmt','grammar.py',1125),
  ('subprog_decl -> subprog_spec ;','subprog_decl',2,'p_subprog_decl','grammar.py',1134),
  ('subprog_decl -> generic_subp_inst ;','subprog_decl',2,'p_subprog_decl','grammar.py',1135),
  ('subprog_decl -> subprog_spec_is_push ABSTRACT ;','subprog_decl',3,'p_subprog_decl','grammar.py',1136),
  ('subprog_spec -> PROCEDURE compound_name formal_part_opt','subprog_spec',3,'p_subprog_spec','grammar.py',1141),
  ('subprog_spec -> FUNCTION designator formal_part_opt RETURN name','subprog_spec',5,'p_subprog_spec','grammar.py',1142),
  ('subprog_spec -> FUNCTION designator','subprog_spec',2,'p_subprog_spec','grammar.py',1143),
  ('designator -> compound_name','designator',1,'p_designator','grammar.py',1155),
  ('designator -> STRING','designator',1,'p_designator','grammar.py',1156),
  ('formal_part_opt -> <empty>','formal_part_opt',0,'p_formal_part_opt','grammar.py',1166),
  ('formal_part_opt -> formal_part','formal_part_opt',1,'p_formal_part_opt','grammar.py',1167),
  ('formal_part -> ( param_s )','formal_part',3,'p_formal_part','grammar.py',1176),
  ('param_s -> param','param_s',1,'p_param_s','grammar.py',1182),
  ('param_s -> param_s ; param','param_s',3,'p_param_s','grammar.py',1183),
  ('param -> def_id_s : mode mark init_opt','param',5,'p_param','grammar.py',1192),
  ('param -> error','param',1,'p_param','grammar.py',1193),
  ('mode -> <empty>','mode',0,'p_mode','grammar.py',1202),
  ('mode -> IN','mode',1,'p_mode','grammar.py',1203),
  ('mode -> OUT','mode',1,'p_mode','grammar.py',1204),
  ('mode -> IN OUT','mode',2,'p_mode','grammar.py',1205),
  ('mode -> ACCESS','mode',1,'p_mode','grammar.py',1206),
  ('subprog_spec_is_push -> subprog_spec IS','subprog_spec_is_push',2,'p_subprog_spec_is_push','grammar.py',1217),
  ('subprog_body -> subprog_spec_is_push decl_part block_body END id_opt ;','subprog_body',6,'p_subprog_body','grammar.py',1222),
  ('procedure_call -> name ;','procedure_call',2,'p_procedure_call','grammar.py',1227),
  ('pkg_decl -> pkg_spec ;','pkg_decl',2,'p_pkg_decl','grammar.py',1234),
  ('pkg_decl -> generic_pkg_inst ;','pkg_decl',2,'p_pkg_decl','grammar.py',1235),
  ('pkg_spec -> PACKAGE compound_name IS decl_item_s private_part END c_id_opt','pkg_spec',7,'p_pkg_spec','grammar.py',1240),
  ('private_part -> <empty>','private_part',0,'p_private_part','grammar.py',1245),
  ('private_part -> PRIVATE decl_item_s','private_part',2,'p_private_part','grammar.py',1246),
  ('c_id_opt -> <empty>','c_id_opt',0,'p_c_id_opt','grammar.py',1254),
  ('c_id_opt -> compound_name','c_id_opt',1,'p_c_id_opt','grammar.py',1255),
  ('pkg_body -> PACKAGE BODY compound_name IS decl_part body_opt END c_id_opt ;','pkg_body',9,'p_pkg_body','grammar.py',1263),
  ('body_opt -> <empty>','body_opt',0,'p_body_opt','grammar.py',1268),
  ('body_opt -> block_body','body_opt',1,'p_body_opt','grammar.py',1269),
  ('private_type -> tagged_opt limited_opt PRIVATE','private_type',3,'p_private_type','grammar.py',1277),
  ('limited_opt -> <empty>','limited_opt',0,'p_limited_opt','grammar.py',1282),
  ('limited_opt -> LIMITED','limited_opt',1,'p_limited_opt','grammar.py',1283),
  ('use_clause -> USE name_s ;','use_clause',3,'p_use_clause','grammar.py',1291),
  ('use_clause -> USE TYPE name_s ;','use_clause',4,'p_use_clause','grammar.py',1292),
  ('name_s -> name','name_s',1,'p_name_s','grammar.py',1300),
  ('name_s -> name_s , name','name_s',3,'p_name_s','grammar.py',1301),
  ('rename_decl -> def_id_s : object_qualifier_opt subtype_ind renames ;','rename_decl',6,'p_rename_decl','grammar.py',1312),
  ('rename_decl -> def_id_s : EXCEPTION renames ;','rename_decl',5,'p_rename_decl','grammar.py',1313),
  ('rename_decl -> rename_unit','rename_decl',1,'p_rename_decl','grammar.py',1314),
  ('rename_unit -> PACKAGE compound_name renames ;','rename_unit',4,'p_rename_unit','grammar.py',1325),
  ('rename_unit -> subprog_spec renames ;','rename_unit',3,'p_rename_unit','grammar.py',1326),
  ('rename_unit -> generic_formal_part PACKAGE compound_name renames ;','rename_unit',5,'p_rename_unit','grammar.py',1327),
  ('rename_unit -> generic_formal_part subprog_spec renames ;','rename_unit',4,'p_rename_unit','grammar.py',1328),
  ('renames -> RENAMES name','renames',2,'p_renames','grammar.py',1342),
  ('task_decl -> task_spec ;','task_decl',2,'p_task_decl','grammar.py',1346),
  ('task_spec -> TASK simple_name task_def','task_spec',3,'p_task_spec','grammar.py',1351),
  ('task_spec -> TASK TYPE simple_name discrim_part_opt task_def','task_spec',5,'p_task_spec','grammar.py',1352),
  ('task_def -> <empty>','task_def',0,'p_task_def','grammar.py',1358),
  ('task_def -> IS entry_decl_s rep_spec_s task_private_opt END id_opt','task_def',6,'p_task_def','grammar.py',1359),
  ('task_private_opt -> <empty>','task_private_opt',0,'p_task_private_opt','grammar.py',1364),
  ('task_private_opt -> PRIVATE entry_decl_s rep_spec_s','task_private_opt',3,'p_task_private_opt','grammar.py',1365),
  ('task_body -> TASK BODY simple_name IS decl_part block_body END id_opt ;','task_body',9,'p_task_body','grammar.py',1373),
  ('prot_decl -> prot_spec ;','prot_decl',2,'p_prot_decl','grammar.py',1378),
  ('prot_spec -> PROTECTED IDENTIFIER prot_def','prot_spec',3,'p_prot_spec','grammar.py',1383),
  ('prot_spec -> PROTECTED TYPE simple_name discrim_part_opt prot_def','prot_spec',5,'p_prot_spec','grammar.py',1384),
  ('prot_def -> IS prot_op_decl_s prot_private_opt END id_opt','prot_def',5,'p_prot_def','grammar.py',1392),
  ('prot_private_opt -> <empty>','prot_private_opt',0,'p_prot_private_opt','grammar.py',1398),
  ('prot_private_opt -> PRIVATE prot_elem_decl_s','prot_private_opt',2,'p_prot_private_opt','grammar.py',1399),
  ('prot_op_decl_s -> <empty>','prot_op_decl_s',0,'p_prot_op_decl_s','grammar.py',1407),
  ('prot_op_decl_s -> prot_op_decl_s prot_op_decl','prot_op_decl_s',2,'p_prot_op_decl_s','grammar.py',1408),
  ('prot_op_decl -> entry_decl','prot_op_decl',1,'p_prot_op_decl','grammar.py',1417),
  ('prot_op_decl -> subprog_spec ;','prot_op_decl',2,'p_prot_op_decl','grammar.py',1418),
  ('prot_op_decl -> rep_spec','prot_op_decl',1,'p_prot_op_decl','grammar.py',1419),
  ('prot_op_decl -> pragma','prot_op_decl',1,'p_prot_op_decl','grammar.py',1420),
  ('prot_elem_decl_s -> <empty>','prot_elem_decl_s',0,'p_prot_elem_decl_s','grammar.py',1425),
  ('prot_elem_decl_s -> prot_elem_decl_s prot_elem_decl','prot_elem_decl_s',2,'p_prot_elem_decl_s','grammar.py',1426),
  ('prot_elem_decl -> prot_op_decl','prot_elem_decl',1,'p_prot_elem_decl','grammar.py',1434),
  ('prot_elem_decl -> comp_decl','prot_elem_decl',1,'p_prot_elem_decl','grammar.py',1435),
  ('prot_body -> PROTECTED BODY simple_name IS prot_op_body_s END id_opt ;','prot_body',8,'p_prot_body','grammar.py',1439),
  ('prot_op_body_s -> pragma_s','prot_op_body_s',1,'p_prot_op_body_s','grammar.py',1444),
  ('prot_op_body_s -> prot_op_body_s prot_op_body pragma_s','prot_op_body_s',3,'p_prot_op_body_s','grammar.py',1445),
  ('prot_op_body -> entry_body','prot_op_body',1,'p_prot_op_body','grammar.py',1453),
  ('prot_op_body -> subprog_body','prot_op_body',1,'p_prot_op_body','grammar.py',1454),
  ('prot_op_body -> subprog_spec ;','prot_op_body',2,'p_prot_op_body','grammar.py',1455),
  ('entry_decl_s -> pragma_s','entry_decl_s',1,'p_entry_decl_s','grammar.py',1461),
  ('entry_decl_s -> entry_decl_s entry_decl pragma_s','entry_decl_s',3,'p_entry_decl_s','grammar.py',1462),
  ('entry_decl -> ENTRY IDENTIFIER formal_part_opt ;','entry_decl',4,'p_entry_decl','grammar.py',1470),
  ('entry_decl -> ENTRY IDENTIFIER ( discrete_range ) formal_part_opt ;','entry_decl',7,'p_entry_decl','grammar.py',1471),
  ('entry_body -> ENTRY IDENTIFIER formal_part_opt WHEN condition entry_body_part','entry_body',6,'p_entry_body','grammar.py',1479),
  ('entry_body -> ENTRY IDENTIFIER ( iter_part discrete_range ) formal_part_opt WHEN condition entry_body_part','entry_body',10,'p_entry_body','grammar.py',1480),
  ('entry_body_part -> ;','entry_body_part',1,'p_entry_body_part','grammar.py',1488),
  ('entry_body_part -> IS decl_part block_body END id_opt ;','entry_body_part',6,'p_entry_body_part','grammar.py',1489),
  ('rep_spec_s -> <empty>','rep_spec_s',0,'p_rep_spec_s','grammar.py',1497),
  ('rep_spec_s -> rep_spec_s rep_spec pragma_s','rep_spec_s',3,'p_rep_spec_s','grammar.py',1498),
  ('entry_call -> procedure_call','entry_call',1,'p_entry_call','grammar.py',1506),
  ('accept_stmt -> accept_hdr ;','accept_stmt',2,'p_accept_stmt','grammar.py',1511),
  ('accept_stmt -> accept_hdr DO handled_stmt_s END id_opt ;','accept_stmt',6,'p_accept_stmt','grammar.py',1512),
  ('accept_hdr -> ACCEPT entry_name formal_part_opt','accept_hdr',3,'p_accept_hdr','grammar.py',1520),
  ('entry_name -> simple_name','entry_name',1,'p_entry_name','grammar.py',1525),
  ('entry_name -> entry_name ( expression )','entry_name',4,'p_entry_name','grammar.py',1526),
  ('delay_stmt -> DELAY expression ;','delay_stmt',3,'p_delay_stmt','grammar.py',1534),
  ('delay_stmt -> DELAY UNTIL expression ;','delay_stmt',4,'p_delay_stmt','grammar.py',1535),
  ('select_stmt -> select_wait','select_stmt',1,'p_select_stmt','grammar.py',1543),
  ('select_stmt -> async_select','select_stmt',1,'p_select_stmt','grammar.py',1544),
  ('select_stmt -> timed_entry_call','select_stmt',1,'p_select_stmt','grammar.py',1545),
  ('select_stmt -> cond_entry_call','select_stmt',1,'p_select_stmt','grammar.py',1546),
  ('select_wait -> SELECT guarded_select_alt or_select else_opt END SELECT ;','select_wait',7,'p_select_wait','grammar.py',1551),
  ('guarded_select_alt -> select_alt','guarded_select_alt',1,'p_guarded_select_alt','grammar.py',1556),
  ('guarded_select_alt -> WHEN condition ARROW select_alt','guarded_select_alt',4,'p_guarded_select_alt','grammar.py',1557),
  ('or_select -> <empty>','or_select',0,'p_or_select','grammar.py',1565),
  ('or_select -> or_select OR guarded_select_alt','or_select',3,'p_or_select','grammar.py',1566),
  ('select_alt -> accept_stmt stmts_opt','select_alt',2,'p_select_alt','grammar.py',1575),
  ('select_alt -> delay_stmt stmts_opt','select_alt',2,'p_select_alt','grammar.py',1576),
  ('select_alt -> TERMINATE ;','select_alt',2,'p_select_alt','grammar.py',1577),
  ('delay_or_entry_alt -> delay_stmt stmts_opt','delay_or_entry_alt',2,'p_delay_or_entry_alt','grammar.py',1586),
  ('delay_or_entry_alt -> entry_call stmts_opt','delay_or_entry_alt',2,'p_delay_or_entry_alt','grammar.py',1587),
  ('async_select -> SELECT delay_or_entry_alt THEN ABORT statement_s END SELECT ;','async_select',8,'p_async_select','grammar.py',1591),
  ('timed_entry_call -> SELECT entry_call stmts_opt OR delay_stmt stmts_opt END SELECT ;','timed_entry_call',9,'p_timed_entry_call','grammar.py',1595),
  ('cond_entry_call -> SELECT entry_call stmts_opt ELSE statement_s END SELECT ;','cond_entry_call',8,'p_cond_entry_call','grammar.py',1599),
  ('stmts_opt -> <empty>','stmts_opt',0,'p_stmts_opt','grammar.py',1604),
  ('stmts_opt -> statement_s','stmts_opt',1,'p_stmts_opt','grammar.py',1605),
  ('abort_stmt -> ABORT name_s ;','abort_stmt',3,'p_abort_stmt','grammar.py',1613),
  ('compilation -> <empty>','compilation',0,'p_compilation','grammar.py',1618),
  ('compilation -> compilation comp_unit','compilation',2,'p_compilation','grammar.py',1619),
  ('compilation -> pragma pragma_s','compilation',2,'p_compilation','grammar.py',1620),
  ('comp_unit -> context_spec private_opt unit pragma_s','comp_unit',4,'p_comp_unit','grammar.py',1631),
  ('comp_unit -> private_opt unit pragma_s','comp_unit',3,'p_comp_unit','grammar.py',1632),
  ('private_opt -> <empty>','private_opt',0,'p_private_opt','grammar.py',1640),
  ('private_opt -> PRIVATE','private_opt',1,'p_private_opt','grammar.py',1641),
  ('context_spec -> with_clause use_clause_opt','context_spec',2,'p_context_spec','grammar.py',1649),
  ('context_spec -> context_spec with_clause use_clause_opt','context_spec',3,'p_context_spec','grammar.py',1650),
  ('context_spec -> context_spec pragma','context_spec',2,'p_context_spec','grammar.py',1651),
  ('with_clause -> WITH c_name_list ;','with_clause',3,'p_with_clause','grammar.py',1661),
  ('use_clause_opt -> <empty>','use_clause_opt',0,'p_use_clause_opt','grammar.py',1666),
  ('use_clause_opt -> use_clause_opt use_clause','use_clause_opt',2,'p_use_clause_opt','grammar.py',1667),
  ('unit -> pkg_decl','unit',1,'p_unit','grammar.py',1675),
  ('unit -> pkg_body','unit',1,'p_unit','grammar.py',1676),
  ('unit -> subprog_decl','unit',1,'p_unit','grammar.py',1677),
  ('unit -> subprog_body','unit',1,'p_unit','grammar.py',1678),
  ('unit -> subunit','unit',1,'p_unit','grammar.py',1679),
  ('unit -> generic_decl','unit',1,'p_unit','grammar.py',1680),
  ('unit -> rename_unit','unit',1,'p_unit','grammar.py',1681),
  ('subunit -> SEPARATE ( compound_name ) subunit_body','subunit',5,'p_subunit','grammar.py',1686),
  ('subunit_body -> subprog_body','subunit_body',1,'p_subunit_body','grammar.py',1691),
  ('subunit_body -> pkg_body','subunit_body',1,'p_subunit_body','grammar.py',1692),
  ('subunit_body -> task_body','subunit_body',1,'p_subunit_body','grammar.py',1693),
  ('subunit_body -> prot_body','subunit_body',1,'p_subunit_body','grammar.py',1694),
  ('body_stub -> TASK BODY simple_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1698),
  ('body_stub -> PACKAGE BODY compound_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1699),
  ('body_stub -> subprog_spec IS SEPARATE ;','body_stub',4,'p_body_stub','grammar.py',1700),
  ('body_stub -> PROTECTED BODY simple_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1701),
  ('exception_decl -> def_id_s : EXCEPTION ;','exception_decl',4,'p_exception_decl','grammar.py',1713),
  ('except_handler_part -> EXCEPTION exception_handler','except_handler_part',2,'p_except_handler_part','grammar.py',1718),
  ('except_handler_part -> except_handler_part exception_handler','except_handler_part',2,'p_except_handler_part','grammar.py',1719),
  ('exception_handler -> WHEN except_choice_s ARROW statement_s','exception_handler',4,'p_exception_handler','grammar.py',1728),
  ('exception_handler -> WHEN IDENTIFIER : except_choice_s ARROW statement_s','exception_handler',6,'p_exception_handler','grammar.py',1729),
  ('except_choice_s -> except_choice','except_choice_s',1,'p_except_choice_s','grammar.py',1738),
  ('except_choice_s -> except_choice_s | except_choice','except_choice_s',3,'p_except_choice_s','grammar.py',1739),
  ('except_choice -> name','except_choice',1,'p_except_choice','grammar.py',1749),
  ('except_choice -> OTHERS','except_choice',1,'p_except_choice','grammar.py',1750),
  ('raise_stmt -> RAISE name_opt ;','raise_stmt',3,'p_raise_stmt','grammar.py',1759),
  ('requeue_stmt -> REQUEUE name ;','requeue_stmt',3,'p_requeue_stmt','grammar.py',1764),
  ('requeue_stmt -> REQUEUE name WITH ABORT ;','requeue_stmt',5,'p_requeue_stmt','grammar.py',1765),
  ('generic_decl -> generic_formal_part subprog_spec ;','generic_decl',3,'p_generic_decl','grammar.py',1773),
  ('generic_decl -> generic_formal_part pkg_spec ;','generic_decl',3,'p_generic_decl','grammar.py',1774),
  ('generic_formal_part -> GENERIC','generic_formal_part',1,'p_generic_formal_part','grammar.py',1779),
  ('generic_formal_part -> generic_formal_part generic_formal','generic_formal_part',2,'p_generic_formal_part','grammar.py',1780),
  ('generic_formal -> param ;','generic_formal',2,'p_generic_formal','grammar.py',1788),
  ('generic_formal -> TYPE simple_name generic_discrim_part_opt IS generic_type_def ;','generic_formal',6,'p_generic_formal','grammar.py',1789),
  ('generic_formal -> WITH PROCEDURE simple_name formal_part_opt subp_default ;','generic_formal',6,'p_generic_formal','grammar.py',1790),
  ('generic_formal -> WITH FUNCTION designator formal_part_opt RETURN name subp_default ;','generic_formal',8,'p_generic_formal','grammar.py',1791),
  ('generic_formal -> WITH PACKAGE simple_name IS NEW name ( BOX ) ;','generic_formal',10,'p_generic_formal','grammar.py',1792),
  ('generic_formal -> WITH PACKAGE simple_name IS NEW name ;','generic_formal',7,'p_generic_formal','grammar.py',1793),
  ('generic_formal -> use_clause','generic_formal',1,'p_generic_formal','grammar.py',1794),
  ('generic_discrim_part_opt -> <empty>','generic_discrim_part_opt',0,'p_generic_discrim_part_opt','grammar.py',1812),
  ('generic_discrim_part_opt -> discrim_part','generic_discrim_part_opt',1,'p_generic_discrim_part_opt','grammar.py',1813),
  ('generic_discrim_part_opt -> ( BOX )','generic_discrim_part_opt',3,'p_generic_discrim_part_opt','grammar.py',1814),
  ('subp_default -> <empty>','subp_default',0,'p_subp_default','grammar.py',1824),
  ('subp_default -> IS name','subp_default',2,'p_subp_default','grammar.py',1825),
  ('subp_default -> IS BOX','subp_default',2,'p_subp_default','grammar.py',1826),
  ('generic_type_def -> ( BOX )','generic_type_def',3,'p_generic_type_def','grammar.py',1834),
  ('generic_type_def -> RANGE BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1835),
  ('generic_type_def -> MOD BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1836),
  ('generic_type_def -> DELTA BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1837),
  ('generic_type_def -> DELTA BOX DIGITS BOX','generic_type_def',4,'p_generic_type_def','grammar.py',1838),
  ('generic_type_def -> DIGITS BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1839),
  ('generic_type_def -> array_type','generic_type_def',1,'p_generic_type_def','grammar.py',1840),
  ('generic_type_def -> access_type','generic_type_def',1,'p_generic_type_def','grammar.py',1841),
  ('generic_type_def -> private_type','generic_type_def',1,'p_generic_type_def','grammar.py',1842),
  ('generic_type_def -> generic_derived_type','generic_type_def',1,'p_generic_type_def','grammar.py',1843),
  ('generic_derived_type -> NEW subtype_ind','generic_derived_type',2,'p_generic_derived_type','grammar.py',1861),
  ('generic_derived_type -> NEW subtype_ind WITH PRIVATE','generic_derived_type',4,'p_generic_derived_type','grammar.py',1862),
  ('generic_derived_type -> ABSTRACT NEW subtype_ind WITH PRIVATE','generic_derived_type',5,'p_generic_derived_type','grammar.py',1863),
  ('generic_subp_inst -> subprog_spec IS generic_inst','generic_subp_inst',3,'p_generic_subp_inst','grammar.py',1873),
  ('generic_pkg_inst -> PACKAGE compound_name IS generic_inst','generic_pkg_inst',4,'p_generic_pkg_inst','grammar.py',1878),
  ('generic_inst -> NEW name','generic_inst',2,'p_generic_inst','grammar.py',1883),
  ('rep_spec -> attrib_def','rep_spec',1,'p_rep_spec','grammar.py',1888),
  ('rep_spec -> record_type_spec','rep_spec',1,'p_rep_spec','grammar.py',1889),
  ('rep_spec -> address_spec','rep_spec',1,'p_rep_spec','grammar.py',1890),
  ('attrib_def -> FOR mark USE expression ;','attrib_def',5,'p_attrib_def','grammar.py',1895),
  ('record_type_spec -> FOR mark USE RECORD align_opt comp_loc_s END RECORD ;','record_type_spec',9,'p_record_type_spec','grammar.py',1900),
  ('align_opt -> <empty>','align_opt',0,'p_align_opt','grammar.py',1905),
  ('align_opt -> AT MOD expression ;','align_opt',4,'p_align_opt','grammar.py',1906),
  ('comp_loc_s -> <empty>','comp_loc_s',0,'p_comp_loc_s','grammar.py',1914),
  ('comp_loc_s -> comp_loc_s mark AT expression RANGE range ;','comp_loc_s',7,'p_comp_loc_s','grammar.py',1915),
  ('address_spec -> FOR mark USE AT expression ;','address_spec',6,'p_address_spec','grammar.py',1923),
  ('code_stmt -> qualified ;','code_stmt',2,'p_code_stmt','grammar.py',1927),
]
