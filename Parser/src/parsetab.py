
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "goal_symbolABORT ABS ABSTRACT ACCEPT ACCESS ALIASED ALL AND ARRAY ARROW ASSIGN AT BEGIN BODY BOX CASE CHAR CONSTANT DECLARE DELAY DELTA DIGITS DO DOTDOT ELSE ELSIF END ENTRY EXCEPTION EXIT FLOAT FOR FUNCTION GENERIC GEQ IDENTIFIER IF IN INT IS LEQ LIMITED LL LOOP MOD NEQ NEW NOT NuLL OF OR OTHERS OUT PACKAGE PRAGMA PRIVATE PROCEDURE PROTECTED RAISE RANGE RECORD REM RENAMES REQUEUE RETURN REVERSE RR SELECT SEPARATE STARSTAR STRING SUBTYPE TAGGED TASK TERMINATE THEN TICK TYPE UNTIL USE WHEN WHILE WITH XORgoal_symbol : compilation\n    pragma  : PRAGMA IDENTIFIER ';'\n\t   | PRAGMA simple_name '(' pragma_arg_s ')' ';'\n\tpragma_arg_s : pragma_arg\n\t   | pragma_arg_s ',' pragma_arg\n\tpragma_arg : expression\n\t   | simple_name ARROW expression\n\tpragma_s :\n\t   | pragma_s pragma\n\tdecl    : object_decl\n\t   | number_decl\n\t   | type_decl\n\t   | subtype_decl\n\t   | subprog_decl\n\t   | pkg_decl\n\t   | task_decl\n\t   | prot_decl\n\t   | exception_decl\n\t   | rename_decl\n\t   | generic_decl\n\t   | body_stub\n\t   | error ';'\n\tobject_decl : def_id_s ':' object_qualifier_opt object_subtype_def init_opt ';'   \n\tdef_id_s : def_id\n\t   | def_id_s ',' def_id\n\tdef_id  : IDENTIFIER\n\tobject_qualifier_opt :\n\t   | ALIASED\n\t   | CONSTANT\n\t   | ALIASED CONSTANT\n\tobject_subtype_def : subtype_ind\n\t   | array_type\n\tinit_opt :\n\t   | ASSIGN expression\n\tnumber_decl : def_id_s ':' CONSTANT ASSIGN expression ';'\n\ttype_decl : TYPE IDENTIFIER discrim_part_opt type_completion ';'\n\tdiscrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\ttype_completion :\n\t   | IS type_def\n\ttype_def : enumeration_type \n\t   | integer_type\n\t   | real_type\n\t   | array_type\n\t   | record_type\n\t   | access_type\n\t   | derived_type\n\t   | private_type\n\tsubtype_decl : SUBTYPE IDENTIFIER IS subtype_ind ';'\n\tsubtype_ind : name constraint\n\t   | name\n\tconstraint : range_constraint\n\t   | decimal_digits_constraint\n\tdecimal_digits_constraint : DIGITS expression range_constr_opt\n\tderived_type : NEW subtype_ind\n\t   | NEW subtype_ind WITH PRIVATE\n\t   | NEW subtype_ind WITH record_def\n\t   | ABSTRACT NEW subtype_ind WITH PRIVATE\n\t   | ABSTRACT NEW subtype_ind WITH record_def\n\trange_constraint : RANGE range\n\trange : simple_expression DOTDOT simple_expression\n\tenumeration_type : '(' enum_id_s ')'\n\tenum_id_s : enum_id\n\t   | enum_id_s ',' enum_id\n\tenum_id : IDENTIFIER\n\t   | CHAR\n\tinteger_type : range_spec\n\t   | MOD expression\n\trange_spec : range_constraint\n\trange_spec_opt :\n\t   | range_spec\n\treal_type : float_type\n\t   | fixed_type\n\tfloat_type : DIGITS expression range_spec_opt\n\tfixed_type : DELTA expression range_spec\n\t   | DELTA expression DIGITS expression range_spec_opt\n\tarray_type : unconstr_array_type\n\t   | constr_array_type\n\tunconstr_array_type : ARRAY '(' index_s ')' OF component_subtype_def\n\tconstr_array_type : ARRAY iter_index_constraint OF component_subtype_def\n\tcomponent_subtype_def : aliased_opt subtype_ind\n\taliased_opt : \n\t   | ALIASED\n\tindex_s : index\n\t   | index_s ',' index\n\tindex : name RANGE BOX\n\titer_index_constraint : '(' iter_discrete_range_s ')'\n\titer_discrete_range_s : discrete_range\n\t   | iter_discrete_range_s ',' discrete_range\n\tdiscrete_range : name range_constr_opt\n\t   | range\n\trange_constr_opt :\n\t   | range_constraint\n\trecord_type : tagged_opt limited_opt record_def\n\trecord_def : RECORD pragma_s comp_list END RECORD\n\t   | NuLL RECORD\n\ttagged_opt :\n\t   | TAGGED\n\t   | ABSTRACT TAGGED\n\tcomp_list : comp_decl_s variant_part_opt\n\t   | variant_part pragma_s\n\t   | NuLL ';' pragma_s\n\tcomp_decl_s : comp_decl\n\t   | comp_decl_s pragma_s comp_decl\n\tvariant_part_opt : pragma_s\n\t   | pragma_s variant_part pragma_s\n\tcomp_decl : def_id_s ':' component_subtype_def init_opt ';'\n\t   | error ';'\n\tdiscrim_part : '(' discrim_spec_s ')'\n\tdiscrim_spec_s : discrim_spec\n\t   | discrim_spec_s ';' discrim_spec\n\tdiscrim_spec : def_id_s ':' access_opt mark init_opt\n\t   | error\n\taccess_opt :\n\t   | ACCESS\n\tvariant_part : CASE simple_name IS pragma_s variant_s END CASE ';'\n\tvariant_s : variant\n\t   | variant_s variant\n\tvariant : WHEN choice_s ARROW pragma_s comp_list\n\tchoice_s : choice\n\t   | choice_s '|' choice\n\tchoice : expression\n\t   | discrete_with_range\n\t   | OTHERS\n\tdiscrete_with_range : name range_constraint\n\t   | range\n\taccess_type : ACCESS subtype_ind\n\t   | ACCESS CONSTANT subtype_ind\n\t   | ACCESS ALL subtype_ind\n\tdecl_part :\n\t   | decl_item_or_body_s1\n\tdecl_item_s : \n\t   | decl_item_s1\n\tdecl_item_s1 : decl_item\n\t   | decl_item_s1 decl_item\n\tdecl_item : decl\n\t   | use_clause\n\t   | rep_spec\n\t   | pragma\n\tdecl_item_or_body_s1 : decl_item_or_body\n\t   | decl_item_or_body_s1 decl_item_or_body\n\tdecl_item_or_body : body\n\t   | decl_item\n\tbody : subprog_body\n\t   | pkg_body\n\t   | task_body\n\t   | prot_body\n\tname : simple_name\n\t   | indexed_comp\n\t   | selected_comp\n\t   | attribute\n\t   | operator_symbol\n\tmark : simple_name\n\t   | mark TICK attribute_id\n\t   | mark '.' simple_name\n\tsimple_name : IDENTIFIER\n\tcompound_name : simple_name\n\t   | compound_name '.' simple_name\n\tc_name_list : compound_name\n\t    | c_name_list ',' compound_name\n\tused_char : CHAR\n\toperator_symbol : STRING\n\tindexed_comp : name '(' value_s ')'\n\tvalue_s : value\n\t   | value_s ',' value\n\tvalue : expression\n\t   | comp_assoc\n\t   | discrete_with_range\n\t   | error\n\tselected_comp : name '.' simple_name\n\t   | name '.' used_char\n\t   | name '.' operator_symbol\n\t   | name '.' ALL\n\tattribute : name TICK attribute_id\n\tattribute_id : IDENTIFIER\n\t   | DIGITS\n\t   | DELTA\n\t   | ACCESS\n\tliteral : INT\n       | FLOAT\n\t   | NuLL\n\taggregate : '(' comp_assoc ')'\n\t   | '(' expression WITH value_s ')'\n\t   | '(' expression WITH NuLL RECORD ')'\n\t   | '(' NuLL RECORD ')'\n\tcomp_assoc : choice_s ARROW expression\n\texpression : relation\n\t   | expression logical relation\n\t   | expression short_circuit relation\n\tlogical : AND\n\t   | OR\n\t   | XOR\n\tshort_circuit : AND THEN\n\t   | OR ELSE\n\trelation : simple_expression\n\t   | simple_expression relational simple_expression\n\t   | simple_expression membership range\n\t   | simple_expression membership name\n\trelational : '='\n\t   | NEQ\n\t   | '<'\n\t   | LEQ\n\t   | '>'\n\t   | GEQ\n\tmembership : IN\n\t   | NOT IN\n\tsimple_expression : unary term\n\t   | term\n\t   | simple_expression adding term\n\tunary   : '+'\n\t   | '-'\n\tadding  : '+'\n\t   | '-'\n\t   | '&'\n\tterm    : factor\n\t   | term multiplying factor\n\tmultiplying : '*'\n\t   | '/'\n\t   | MOD\n\t   | REM\n\t   | STARSTAR\n\tfactor : primary\n\t   | NOT primary\n\t   | ABS primary\n\tprimary : literal\n\t   | name\n\t   | allocator\n\t   | qualified\n\t   | parenthesized_primary\n\tparenthesized_primary : aggregate\n\t   | '(' expression ')'\n\tqualified : name TICK parenthesized_primary\n\tallocator : NEW name\n\t   | NEW qualified\n\tstatement_s : statement\n\t   | statement_s statement\n\tstatement : unlabeled\n\t   | label statement\n\tunlabeled : simple_stmt\n\t   | compound_stmt\n\tsimple_stmt : null_stmt\n\t   | assign_stmt\n\t   | exit_stmt\n\t   | return_stmt\n\t   | procedure_call\n\t   | delay_stmt\n\t   | abort_stmt\n\t   | raise_stmt\n\t   | code_stmt\n\t   | requeue_stmt\n\t   | error ';'\n\tcompound_stmt : if_stmt\n\t   | case_stmt\t\n\t   | loop_stmt\n\t   | block\n\t   | accept_stmt\n\t   | select_stmt\n\tlabel : LL IDENTIFIER RR\n\tnull_stmt : NuLL ';'\n\tassign_stmt : name ASSIGN expression ';'\n\tif_stmt : IF cond_clause_s else_opt END IF ';'\n\tcond_clause_s : cond_clause\n\t   | cond_clause_s ELSIF cond_clause\n\tcond_clause : cond_part statement_s\n\tcond_part : condition THEN\n\tcondition : expression\n\telse_opt :\n\t   | ELSE statement_s\n\tcase_stmt : case_hdr pragma_s alternative_s END CASE ';'\n\tcase_hdr : CASE expression IS\n\talternative_s :\n\t   | alternative_s alternative\n\talternative : WHEN choice_s ARROW statement_s\n\tloop_stmt : label_opt iteration basic_loop id_opt ';'\n\tlabel_opt :\n\t   | IDENTIFIER ':'\n\titeration :\n\t   | WHILE condition\n\t   | iter_part reverse_opt discrete_range\n\titer_part : FOR IDENTIFIER IN\n\treverse_opt :\n\t   | REVERSE\n\tbasic_loop : LOOP statement_s END LOOP\n\tid_opt :\n\t   | designator\n\tblock : label_opt block_decl block_body END id_opt ';'\n\tblock_decl :\n\t   | DECLARE decl_part\n\tblock_body : BEGIN handled_stmt_s\n\thandled_stmt_s : statement_s except_handler_part_opt \n\texcept_handler_part_opt :\n\t   | except_handler_part\n\texit_stmt : EXIT name_opt when_opt ';'\n\tname_opt :\n\t   | name\n\twhen_opt :\n\t   | WHEN condition\n\treturn_stmt : RETURN ';'\n\t   | RETURN expression ';'\n\tsubprog_decl : subprog_spec ';'\n\t   | generic_subp_inst ';'\n\t   | subprog_spec_is_push ABSTRACT ';'\n\tsubprog_spec : PROCEDURE compound_name formal_part_opt\n\t   | FUNCTION designator formal_part_opt RETURN name\n\t   | FUNCTION designator\n\tdesignator : compound_name\n\t   | STRING\n\tformal_part_opt : \n\t   | formal_part\n\tformal_part : '(' param_s ')'\n\tparam_s : param\n\t   | param_s ';' param\n\tparam : def_id_s ':' mode mark init_opt\n\t   | error\n\tmode :\n\t   | IN\n\t   | OUT\n\t   | IN OUT\n\t   | ACCESS\n\tsubprog_spec_is_push : subprog_spec IS\n\tsubprog_body : subprog_spec_is_push decl_part block_body END id_opt ';'\n\tprocedure_call : name ';'\n\tpkg_decl : pkg_spec ';'\n\t   | generic_pkg_inst ';'\n\tpkg_spec : PACKAGE compound_name IS decl_item_s private_part END c_id_opt\n\tprivate_part :\n\t   | PRIVATE decl_item_s\n\tc_id_opt : \n\t   | compound_name\n\tpkg_body : PACKAGE BODY compound_name IS decl_part body_opt END c_id_opt ';'\n\tbody_opt :\n\t   | block_body\n\tprivate_type : tagged_opt limited_opt PRIVATE\n\tlimited_opt :\n\t   | LIMITED\n\tuse_clause : USE name_s ';'\n\t   | USE TYPE name_s ';'\n\tname_s : name\n\t   | name_s ',' name\n\trename_decl : def_id_s ':' object_qualifier_opt subtype_ind renames ';'\n\t   | def_id_s ':' EXCEPTION renames ';'\n\t   | rename_unit\n\trename_unit : PACKAGE compound_name renames ';'\n\t   | subprog_spec renames ';'\n\t   | generic_formal_part PACKAGE compound_name renames ';'\n\t   | generic_formal_part subprog_spec renames ';'\n\trenames : RENAMES name\n\ttask_decl : task_spec ';'\n\ttask_spec : TASK simple_name task_def\n\t   | TASK TYPE simple_name discrim_part_opt task_def\n\ttask_def :\n\t   | IS entry_decl_s rep_spec_s task_private_opt END id_opt\n\ttask_private_opt :\n\t   | PRIVATE entry_decl_s rep_spec_s\n\ttask_body : TASK BODY simple_name IS decl_part block_body END id_opt ';'\n\tprot_decl : prot_spec ';'\n\tprot_spec : PROTECTED IDENTIFIER prot_def\n\t   | PROTECTED TYPE simple_name discrim_part_opt prot_def\n\tprot_def : IS prot_op_decl_s prot_private_opt END id_opt\n\tprot_private_opt :\n\t   | PRIVATE prot_elem_decl_s \n\tprot_op_decl_s : \n\t   | prot_op_decl_s prot_op_decl\n\tprot_op_decl : entry_decl\n\t   | subprog_spec ';'\n\t   | rep_spec\n\t   | pragma\n\tprot_elem_decl_s : \n\t   | prot_elem_decl_s prot_elem_decl\n\tprot_elem_decl : prot_op_decl \n    | comp_decl\n\tprot_body : PROTECTED BODY simple_name IS prot_op_body_s END id_opt ';'\n\tprot_op_body_s : pragma_s\n\t   | prot_op_body_s prot_op_body pragma_s\n\tprot_op_body : entry_body\n\t   | subprog_body\n\t   | subprog_spec ';'\n\tentry_decl_s : pragma_s\n\t   | entry_decl_s entry_decl pragma_s\n\tentry_decl : ENTRY IDENTIFIER formal_part_opt ';'\n\t   | ENTRY IDENTIFIER '(' discrete_range ')' formal_part_opt ';'\n\tentry_body : ENTRY IDENTIFIER formal_part_opt WHEN condition entry_body_part\n\t   | ENTRY IDENTIFIER '(' iter_part discrete_range ')' formal_part_opt WHEN condition entry_body_part\n\tentry_body_part : ';'\n\t   | IS decl_part block_body END id_opt ';'\n\trep_spec_s :\n\t   | rep_spec_s rep_spec pragma_s\n\tentry_call : procedure_call\n\taccept_stmt : accept_hdr ';'\n\t   | accept_hdr DO handled_stmt_s END id_opt ';'\n\taccept_hdr : ACCEPT entry_name formal_part_opt\n\tentry_name : simple_name\n\t   | entry_name '(' expression ')'\n\tdelay_stmt : DELAY expression ';'\n\t   | DELAY UNTIL expression ';'\n\tselect_stmt : select_wait\n\t   | async_select\n\t   | timed_entry_call\n\t   | cond_entry_call\n\tselect_wait : SELECT guarded_select_alt or_select else_opt  END SELECT ';'\n\tguarded_select_alt : select_alt\n\t   | WHEN condition ARROW select_alt\n\tor_select :\n\t   | or_select OR guarded_select_alt\n\tselect_alt : accept_stmt stmts_opt\n\t   | delay_stmt stmts_opt\n\t   | TERMINATE ';'\n\tdelay_or_entry_alt : delay_stmt stmts_opt\n\t   | entry_call stmts_opt\n\tasync_select : SELECT delay_or_entry_alt THEN ABORT statement_s END SELECT ';'\n\ttimed_entry_call : SELECT entry_call stmts_opt OR delay_stmt stmts_opt END SELECT ';'\n\tcond_entry_call : SELECT entry_call stmts_opt ELSE statement_s END SELECT ';'\n\tstmts_opt :\n\t   | statement_s\n\tabort_stmt : ABORT name_s ';'\n\tcompilation :\n\t   | compilation comp_unit\n\t   | pragma pragma_s\n\tcomp_unit : context_spec private_opt unit pragma_s\n\t   | private_opt unit pragma_s\n\tprivate_opt :\n\t   | PRIVATE\n\tcontext_spec : with_clause use_clause_opt\n\t   | context_spec with_clause use_clause_opt\n\t   | context_spec pragma\n\twith_clause : WITH c_name_list ';'\n\tuse_clause_opt :\n\t   | use_clause_opt use_clause\n\tunit : pkg_decl\n\t   | pkg_body\n\t   | subprog_decl\n\t   | subprog_body\n\t   | subunit\n\t   | generic_decl\n\t   | rename_unit\n\tsubunit : SEPARATE '(' compound_name ')' subunit_body\n\tsubunit_body : subprog_body\n\t   | pkg_body\n\t   | task_body\n\t   | prot_body\n\tbody_stub : TASK BODY simple_name IS SEPARATE ';'\n\t   | PACKAGE BODY compound_name IS SEPARATE ';'\n\t   | subprog_spec IS SEPARATE ';'\n\t   | PROTECTED BODY simple_name IS SEPARATE ';'\n\texception_decl : def_id_s ':' EXCEPTION ';'\n\texcept_handler_part : EXCEPTION exception_handler\n\t   | except_handler_part exception_handler\n\texception_handler : WHEN except_choice_s ARROW statement_s\n\t   | WHEN IDENTIFIER ':' except_choice_s ARROW statement_s\n\texcept_choice_s : except_choice\n\t   | except_choice_s '|' except_choice\n\texcept_choice : name\n\t   | OTHERS\n\traise_stmt : RAISE name_opt ';'\n\trequeue_stmt : REQUEUE name ';'\n\t   | REQUEUE name WITH ABORT ';'\n\tgeneric_decl : generic_formal_part subprog_spec ';'\n\t   | generic_formal_part pkg_spec ';'\n\tgeneric_formal_part : GENERIC\n\t   | generic_formal_part generic_formal\n\tgeneric_formal : param ';'\n\t   | TYPE simple_name generic_discrim_part_opt IS generic_type_def ';'\n\t   | WITH PROCEDURE simple_name formal_part_opt subp_default ';'\n\t   | WITH FUNCTION designator formal_part_opt RETURN name subp_default ';'\n\t   | WITH PACKAGE simple_name IS NEW name '(' BOX ')' ';'\n\t   | WITH PACKAGE simple_name IS NEW name ';'\n\t   | use_clause\n\tgeneric_discrim_part_opt :\n\t   | discrim_part\n\t   | '(' BOX ')'\n\tsubp_default :\n\t   | IS name\n\t   | IS BOX\n\tgeneric_type_def : '(' BOX ')'\n\t   | RANGE BOX\n\t   | MOD BOX\n\t   | DELTA BOX\n\t   | DELTA BOX DIGITS BOX\n\t   | DIGITS BOX\n\t   | array_type\n\t   | access_type\n\t   | private_type\n\t   | generic_derived_type\n\tgeneric_derived_type : NEW subtype_ind\n\t   | NEW subtype_ind WITH PRIVATE\n\t   | ABSTRACT NEW subtype_ind WITH PRIVATE\n\tgeneric_subp_inst : subprog_spec IS generic_inst\n\tgeneric_pkg_inst : PACKAGE compound_name IS generic_inst\n\tgeneric_inst : NEW name\n\trep_spec : attrib_def\n\t   | record_type_spec\n\t   | address_spec\n\tattrib_def : FOR mark USE expression ';'\n\trecord_type_spec : FOR mark USE RECORD align_opt comp_loc_s END RECORD ';'\n\talign_opt :\n\t   | AT MOD expression ';'\n\tcomp_loc_s :\n\t   | comp_loc_s mark AT expression RANGE range ';'\n\taddress_spec : FOR mark USE AT expression ';'\n\tcode_stmt : qualified ';'\n\t"
    
_lr_action_items = {'FOR':([14,32,42,44,46,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,174,176,182,184,185,187,191,193,262,265,267,269,271,272,279,285,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,332,333,339,360,405,407,410,412,424,429,432,436,438,439,440,442,444,447,448,454,455,459,463,465,472,479,480,481,489,493,495,500,549,558,561,562,563,564,565,566,568,569,570,571,574,578,585,592,594,599,627,631,632,641,643,646,682,689,691,693,697,702,704,706,712,716,720,737,738,739,740,749,750,751,752,778,779,781,783,786,789,790,792,795,801,816,817,829,836,840,842,845,847,848,849,857,858,859,860,870,881,886,890,891,901,911,912,913,924,925,926,927,],[-9,73,-2,-302,-325,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,73,-138,-141,-14,-18,73,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,73,-357,-349,-276,-303,-22,-142,-321,-347,-337,73,-344,73,-135,73,-363,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-276,-242,-276,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,473,-244,-8,-3,-338,-346,-136,73,73,-277,-260,-276,-276,-390,-501,-389,-276,-276,-276,-239,-252,-237,-299,-323,73,73,-379,-387,-446,-444,73,73,-494,-368,-367,-369,-364,-365,-322,-456,-259,-455,-266,-276,-276,-276,-416,-395,-300,-276,-36,-8,73,-342,-50,-321,-500,-445,-366,73,-276,-276,-276,-294,-396,-261,-276,-442,-380,-8,-8,-23,-341,-35,-443,-370,-371,-372,-457,-276,-276,-276,-276,-276,-275,-388,-387,73,-331,473,-373,-381,-109,-262,-391,-276,-276,-270,-287,73,-495,-401,-276,-276,-356,-413,-411,-276,73,-382,-108,-412,]),';':([12,16,19,25,27,35,36,37,38,45,50,58,59,62,63,66,67,68,72,77,91,98,108,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,150,152,153,156,157,165,168,169,173,177,186,190,198,199,217,219,220,226,227,246,247,248,249,254,263,266,276,277,286,287,294,296,300,303,304,311,313,326,327,335,336,337,340,342,345,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,393,394,396,398,400,403,406,408,417,418,419,425,426,427,430,431,433,445,446,452,453,461,464,467,468,477,478,483,484,485,486,487,488,490,494,506,512,513,515,516,518,522,524,531,532,535,537,541,543,552,555,556,559,587,591,595,597,600,606,607,608,610,611,613,614,617,619,621,623,624,625,626,628,630,636,637,638,639,640,642,644,649,651,655,658,660,664,665,666,668,669,671,672,673,675,676,679,686,688,690,692,694,698,705,719,721,732,733,734,748,755,756,757,759,760,761,764,767,770,774,776,777,782,784,785,797,798,799,802,805,807,808,811,812,815,818,824,827,830,831,833,838,851,861,863,865,866,867,869,871,877,878,879,884,885,888,889,892,894,899,900,902,907,908,909,910,920,929,943,944,949,951,],[42,44,46,48,52,-157,-158,115,-160,-309,155,164,166,170,-315,-308,-306,-307,176,182,185,187,48,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-310,-304,-488,-348,-149,262,265,-339,269,-154,-37,-352,-161,-159,360,-235,-234,-225,-208,-224,392,-312,-490,-309,405,407,-489,48,-358,-285,-157,-295,432,439,440,-295,455,463,465,-38,-40,-37,-350,489,493,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-311,517,-111,-114,-472,-33,-340,-305,-156,-155,549,-286,565,566,569,-296,-267,579,465,585,-297,592,594,-309,-393,627,-352,-52,-78,-32,-33,-31,-79,641,643,-186,-61,-62,-164,-313,-110,-482,-483,-484,-481,667,670,-314,-329,682,689,-359,691,706,712,716,-392,-285,-39,-44,-73,-47,-48,-49,-68,-70,-42,-43,-45,-41,-74,-46,-351,737,-51,-53,-54,749,750,751,752,-184,-112,-478,-477,-128,-480,-476,-485,-474,-473,-472,766,-34,-326,-330,-329,773,-285,-309,-285,783,-285,-298,-285,801,-71,-69,-56,-93,-185,-33,-475,-334,-130,-129,834,836,839,842,845,-360,847,848,849,859,-394,860,-94,-63,-76,-95,-72,-75,-285,-285,-81,-55,-113,-479,-486,881,886,-284,-71,-97,-57,-58,901,-353,-82,-487,904,-309,-33,911,912,-77,915,-60,-59,-80,922,925,926,927,933,-96,922,-285,952,954,]),'>':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,235,-149,-182,-227,235,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,235,-210,-186,-182,-164,-184,-157,-185,]),'&':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,386,388,389,391,506,507,513,515,649,717,724,744,755,844,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,236,-149,-182,-227,236,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,236,236,-227,236,-210,-186,-182,236,-164,-184,-157,-227,-227,-185,-157,]),'LEQ':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,238,-149,-182,-227,238,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,238,-210,-186,-182,-164,-184,-157,-185,]),'NuLL':([14,42,43,121,126,132,135,148,149,184,201,202,203,204,205,206,218,221,222,223,224,225,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,282,288,289,290,292,295,297,298,299,301,302,306,308,309,310,312,315,316,317,318,319,320,321,322,323,324,326,328,329,331,333,351,354,355,356,359,360,362,363,387,421,432,436,438,439,440,442,444,447,448,449,454,455,459,460,463,465,466,471,474,476,491,514,527,540,566,568,569,570,571,573,574,578,585,586,592,594,596,599,604,605,612,615,616,618,633,635,657,662,681,697,702,704,706,712,713,716,720,722,731,765,775,783,786,789,790,792,795,801,806,809,813,821,822,837,848,849,857,858,859,860,864,868,882,883,886,890,891,905,911,912,913,927,938,941,950,953,],[-9,-2,123,207,-212,123,123,-211,123,300,-220,-219,123,-221,-218,-222,123,-191,-192,-193,123,123,123,123,-202,123,-206,-204,-215,-203,123,-200,-205,-213,-201,-214,123,123,-253,-258,-399,-245,-247,-255,-256,-241,123,-249,123,-243,-398,-254,300,-242,300,-246,-257,-238,-251,123,-400,-250,-236,123,-248,-240,-397,-244,507,123,123,123,123,-3,-194,-195,-207,123,-260,300,300,-390,-501,-389,300,300,300,123,-239,-252,-237,123,-299,-323,123,123,-282,-98,123,123,-99,123,-456,-259,-455,-266,300,123,300,300,-416,123,-395,-300,123,300,123,-283,123,-335,123,123,123,123,-336,-100,123,300,300,300,-294,-396,123,-261,300,-281,810,123,123,-457,300,300,300,300,300,-275,123,-8,810,123,123,123,-262,-391,300,300,-270,-287,894,810,123,123,-401,300,300,123,-413,-411,300,-412,123,123,-8,894,]),'REQUEUE':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[291,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,291,-242,291,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,291,291,-390,-501,-389,291,291,291,-239,-252,-237,-299,-323,-456,-259,-455,-266,291,291,291,-416,-395,-300,291,291,291,291,-294,-396,-261,291,-457,291,291,291,291,291,-275,-262,-391,291,291,-270,-287,-401,291,291,-413,-411,291,-412,]),'WITH':([0,2,3,5,7,10,11,14,15,17,20,21,22,23,24,26,28,29,34,35,40,41,42,44,46,47,48,52,53,54,114,115,118,119,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,155,157,164,166,170,185,200,207,208,213,215,219,220,226,227,246,262,265,269,349,352,353,360,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,405,407,427,483,496,497,499,502,504,506,512,513,515,565,636,637,638,649,666,667,670,734,748,755,762,766,802,814,827,834,836,842,901,904,],[-417,-8,9,-419,-428,-418,9,-9,-435,-432,-434,-430,-8,-431,-460,-436,-433,56,-424,-157,-426,-428,-2,-302,-325,-421,-301,-324,-461,-468,-429,-427,-8,-425,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-345,-149,-458,-459,-462,-303,-420,-182,351,-227,-196,-235,-234,-225,-208,-224,-347,-337,-344,-217,-232,-183,-3,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-338,-346,567,-52,-440,-439,-441,-437,-438,-186,-61,-62,-164,-322,-51,-53,-54,-184,763,-463,-464,813,-93,-185,832,-467,-94,868,-55,-465,-331,-373,-356,-466,]),'MOD':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,157,207,213,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,388,391,399,476,506,507,515,551,649,717,724,744,755,844,],[-157,201,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,-235,-234,-225,201,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,-227,201,526,618,-186,-182,-164,681,-184,-157,-227,-227,-185,-157,]),'BEGIN':([32,42,44,46,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,176,182,184,185,187,191,193,262,265,269,279,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,332,333,360,405,407,416,429,432,436,438,439,440,442,444,447,448,454,455,459,463,465,469,472,479,489,493,495,500,549,565,566,568,569,570,571,574,578,585,592,594,599,602,627,629,641,643,646,682,689,697,702,704,706,712,716,720,737,749,750,751,752,783,786,789,790,792,795,801,829,836,842,848,849,857,858,859,860,881,886,890,891,901,911,912,913,924,927,935,],[-131,-2,-302,-325,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,184,-17,-131,-138,-141,-14,-18,-132,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,-357,-349,-276,-303,-22,-142,-321,-347,-337,-344,-131,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-276,-242,-276,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-288,-244,-3,-338,-346,184,-277,-260,-276,-276,-390,-501,-389,-276,-276,-276,-239,-252,-237,-299,-323,184,-131,-131,-446,-444,-131,-131,-494,-322,-456,-259,-455,-266,-276,-276,-276,-416,-395,-300,-276,-289,-36,184,-342,-50,-321,-500,-445,-276,-276,-276,-294,-396,-261,-276,-442,-23,-341,-35,-443,-457,-276,-276,-276,-276,-276,-275,-131,-331,-373,-262,-391,-276,-276,-270,-287,-495,-401,-276,-276,-356,-413,-411,-276,-131,-412,184,]),'DECLARE':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,332,333,429,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[-276,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-276,-242,-276,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,472,-244,-277,-260,-276,-276,-390,-501,-389,-276,-276,-276,-239,-252,-237,-299,-323,-456,-259,-455,-266,-276,-276,-276,-416,-395,-300,-276,-276,-276,-276,-294,-396,-261,-276,-457,-276,-276,-276,-276,-276,-275,-262,-391,-276,-276,-270,-287,-401,-276,-276,-413,-411,-276,-412,]),'(':([12,13,33,35,36,43,45,66,67,68,121,125,126,130,132,133,134,135,137,138,142,148,149,156,157,158,169,186,199,201,202,203,204,205,206,213,218,220,221,222,223,224,225,228,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,249,254,255,282,284,294,301,306,321,326,327,337,351,354,355,356,357,359,362,363,367,368,369,370,371,372,373,374,375,376,382,387,388,399,406,408,421,427,431,446,449,460,466,467,468,471,474,476,482,483,491,514,515,540,573,586,596,604,605,612,616,618,633,635,669,671,672,681,690,707,710,713,717,722,724,744,765,772,775,798,806,821,822,837,844,874,882,883,884,905,921,938,941,],[-157,43,113,-157,-158,121,151,-308,151,-307,121,-163,-212,-152,121,-150,-153,121,-149,231,-151,-211,121,231,-149,251,231,334,-159,-220,-219,121,-221,-218,-222,231,121,231,-191,-192,-193,121,121,121,121,121,-202,121,-206,-204,-215,-203,121,-200,-205,-213,-201,-214,121,231,151,151,121,334,-157,121,121,121,121,231,334,121,121,121,121,121,121,-194,-195,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,231,-207,231,521,231,231,121,231,231,231,121,121,121,596,-393,121,-282,609,633,231,121,121,-164,121,121,121,121,121,-283,121,121,121,121,121,231,231,765,121,775,231,-157,121,-157,-281,231,231,121,840,121,-394,121,121,121,121,-157,231,121,121,151,121,151,121,121,]),'XOR':([35,120,123,125,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,207,208,213,215,219,220,226,227,246,349,352,353,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,382,383,386,388,390,391,419,433,451,461,464,506,507,509,511,513,515,552,591,595,642,649,673,717,718,730,732,733,748,755,770,863,880,],[-157,-209,-182,-163,223,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-182,223,-227,-196,-235,-234,-225,-208,-224,-217,-232,-183,-190,-189,223,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,223,-227,-196,-197,-199,-198,-210,223,223,223,223,223,-186,-182,223,223,-62,-164,223,223,223,223,-184,223,-157,223,223,223,223,223,-185,223,223,223,]),'NEW':([43,49,121,126,132,135,148,149,174,193,201,202,203,204,205,206,218,221,222,223,224,225,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,282,301,306,321,326,351,354,355,356,359,362,363,387,399,402,414,421,449,460,466,471,474,476,491,514,529,540,573,586,596,604,605,612,616,618,622,633,635,681,713,722,765,775,806,821,822,837,882,883,905,938,941,],[127,154,127,-212,127,127,-211,127,154,154,-220,-219,127,-221,-218,-222,127,-191,-192,-193,127,127,127,127,-202,127,-206,-204,-215,-203,127,-200,-205,-213,-201,-214,127,127,127,127,127,127,127,127,127,127,127,-194,-195,-207,534,539,154,127,127,127,127,127,-282,620,127,127,663,127,127,127,127,127,-283,127,127,127,735,127,127,127,127,-281,127,127,127,127,127,127,127,127,127,127,127,]),'PROTECTED':([32,42,44,46,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,174,176,182,185,187,191,193,262,265,267,269,271,272,279,348,360,405,407,410,412,472,479,489,493,495,500,549,565,627,641,643,646,682,689,737,749,750,751,752,829,836,842,881,901,924,],[74,-2,-302,-325,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,74,-138,-141,-14,-18,74,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,270,-357,-349,-303,-22,-142,-321,-347,-337,270,-344,270,-135,74,498,-3,-338,-346,-136,270,74,74,-446,-444,74,74,-494,-322,-36,-342,-50,-321,-500,-445,-442,-23,-341,-35,-443,74,-331,-373,-495,-356,74,]),'IDENTIFIER':([4,9,14,18,24,29,30,31,32,42,43,44,46,48,49,51,52,53,54,55,60,65,70,71,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,99,100,101,102,103,104,105,107,109,110,111,112,113,116,117,121,126,127,132,135,148,149,151,154,155,159,160,161,162,163,164,166,167,170,174,176,179,180,182,184,185,187,188,189,191,192,193,196,201,202,203,204,205,206,218,221,222,223,224,225,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,250,251,257,258,259,260,262,264,265,267,268,269,270,271,272,275,278,279,280,281,282,287,288,289,290,291,292,293,295,296,297,298,299,301,302,305,306,307,308,309,310,311,312,315,316,317,318,319,320,321,322,323,324,326,328,329,330,331,333,334,341,343,344,346,351,354,355,356,357,359,360,362,363,387,392,404,405,407,409,410,412,413,415,420,421,432,436,438,439,440,442,444,447,448,449,454,455,459,460,463,465,466,471,472,473,474,479,489,491,492,493,495,500,514,517,520,528,534,536,538,539,540,543,549,550,557,558,561,562,564,565,566,568,569,570,571,573,574,578,585,586,588,592,594,596,599,600,604,605,609,612,616,618,620,627,633,635,641,643,645,646,647,652,653,659,661,663,667,670,679,680,681,682,685,688,689,691,692,693,697,698,702,704,706,712,713,716,719,720,722,735,737,747,749,750,751,752,765,766,775,778,779,781,783,786,789,790,792,793,794,795,801,804,806,809,815,818,820,821,822,825,826,829,834,836,837,839,840,842,845,846,847,848,849,857,858,859,860,861,864,872,881,882,883,886,890,891,896,897,898,901,904,905,911,912,913,918,924,925,926,927,932,933,938,941,944,950,953,],[12,35,-9,35,-460,64,35,35,64,-2,35,-302,-325,-301,-321,35,-324,-461,-468,35,35,35,35,-343,35,181,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,64,-138,186,-141,-14,-18,35,64,-492,-13,-491,-19,-148,-139,-145,194,35,35,35,35,35,-212,35,35,35,-211,35,64,35,-345,35,35,35,-316,64,-458,-459,35,-462,64,-357,35,35,-349,294,-303,-22,35,35,-142,-27,-321,35,-220,-219,35,-221,-218,-222,35,-191,-192,-193,35,35,35,35,375,35,-202,35,-206,-204,-215,-203,35,-200,-205,-213,-201,-214,35,375,64,35,-320,-317,-318,-347,35,-337,64,35,-344,181,64,-135,35,35,64,35,375,35,35,-253,-258,-399,35,-245,428,-247,35,-255,-256,-241,35,-249,35,35,35,-243,-398,-254,35,294,-242,294,-246,-257,-238,-251,35,-400,-250,-236,35,-248,-240,35,-397,-244,64,35,-29,-28,35,35,35,35,35,375,35,-3,-194,-195,-207,64,-319,-338,-346,35,-136,64,35,35,-496,35,-260,294,294,-390,-501,-389,294,294,294,35,-239,-252,-237,35,-299,-323,35,35,64,603,-282,64,-446,35,-30,-444,64,64,35,64,-115,35,35,35,35,35,35,35,-494,-498,690,-368,-367,-369,-365,-322,-456,-259,-455,-266,294,35,294,294,-416,35,710,-395,-300,717,294,35,35,-283,726,35,35,35,35,-36,35,35,-342,-50,35,-321,35,-116,35,35,35,35,-463,-464,35,35,35,-500,772,35,-445,-366,35,64,294,35,294,294,-294,-396,35,-261,35,294,-281,35,-442,-83,-23,-341,-35,-443,35,-467,844,-370,-371,-372,-457,294,294,294,294,35,35,294,-275,726,35,-8,35,35,35,35,35,35,-84,64,-465,-331,35,-497,64,-373,-381,-83,-109,-262,-391,294,294,-270,-287,-284,64,-83,-495,35,35,-401,294,294,35,-8,-104,-356,-466,35,-413,-411,294,64,64,-382,-108,-412,-105,-499,35,35,35,-8,64,]),'STRING':([30,43,51,60,121,126,127,132,135,148,149,154,160,167,184,192,201,202,203,204,205,206,218,221,222,223,224,225,228,229,231,232,233,234,235,236,238,239,240,241,242,243,244,245,264,268,282,287,288,289,290,291,292,295,296,297,298,299,301,302,305,306,307,308,309,310,311,312,315,316,317,318,319,320,321,322,323,324,326,328,329,331,333,341,343,344,346,351,354,355,356,359,362,363,387,421,432,436,438,439,440,442,444,447,448,449,454,455,459,460,463,465,466,471,474,491,492,514,528,534,536,538,539,540,566,568,569,570,571,573,574,578,585,586,588,592,594,596,599,600,604,605,612,616,618,620,633,635,659,661,663,681,688,692,697,698,702,704,706,712,713,716,719,720,722,735,747,765,775,783,786,789,790,792,793,794,795,801,806,815,818,820,821,822,825,826,837,846,848,849,857,858,859,860,861,872,882,883,886,890,891,905,911,912,913,927,938,941,944,],[66,125,125,125,125,-212,125,125,125,-211,125,125,66,125,125,-27,-220,-219,125,-221,-218,-222,125,-191,-192,-193,125,125,125,125,125,-202,125,-206,-204,-215,-203,125,-200,-205,-213,-201,-214,125,125,125,125,66,-253,-258,-399,125,-245,-247,125,-255,-256,-241,125,-249,125,125,125,-243,-398,-254,125,125,-242,125,-246,-257,-238,-251,125,-400,-250,-236,125,-248,-240,-397,-244,125,-29,-28,125,125,125,125,125,125,-194,-195,-207,125,-260,125,125,-390,-501,-389,125,125,125,125,-239,-252,-237,125,-299,-323,125,125,-282,125,-30,125,125,125,125,125,125,125,-456,-259,-455,-266,125,125,125,125,-416,125,125,-395,-300,125,125,66,125,-283,125,125,125,125,125,125,125,125,125,125,66,66,125,66,125,125,-294,-396,125,-261,66,125,-281,125,-83,125,125,-457,125,125,125,125,125,125,125,-275,125,66,66,125,125,125,125,-84,125,-83,-262,-391,125,125,-270,-287,-284,-83,125,125,-401,125,125,125,-413,-411,125,-412,125,125,66,]),',':([35,36,37,38,57,61,64,106,120,122,123,124,125,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,168,169,198,199,211,219,220,226,227,246,261,263,349,352,353,358,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,397,406,452,506,507,508,511,512,513,515,649,650,717,723,724,726,727,728,729,742,743,744,745,746,755,780,802,803,844,862,873,875,876,],[-157,-158,116,-160,163,-24,-26,163,-209,218,-182,-4,-163,-6,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,264,-339,-161,-159,-127,-235,-234,-225,-208,-224,-25,264,-217,-232,-183,-126,-5,-190,-189,-7,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-170,-167,514,-168,-227,-196,-165,-169,-197,-199,-198,-210,163,-340,264,-186,-182,514,-187,-61,-62,-164,-184,-166,-26,-92,-93,-66,-67,804,-64,-89,820,-93,822,-85,-185,163,-94,-91,-26,-65,-86,-87,-90,]),'WHILE':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,332,333,429,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[-276,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-276,-242,-276,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,471,-244,-277,-260,-276,-276,-390,-501,-389,-276,-276,-276,-239,-252,-237,-299,-323,-456,-259,-455,-266,-276,-276,-276,-416,-395,-300,-276,-276,-276,-276,-294,-396,-261,-276,-457,-276,-276,-276,-276,-276,-275,-262,-391,-276,-276,-270,-287,-401,-276,-276,-413,-411,-276,-412,]),'OUT':([162,259,],[260,404,]),'*':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,157,207,213,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,388,391,506,507,515,649,717,724,744,755,844,],[-157,205,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,-235,-234,-225,205,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,-227,205,-186,-182,-164,-184,-157,-227,-227,-185,-157,]),'BODY':([31,74,100,112,270,275,278,498,503,505,],[70,179,189,196,409,413,415,645,647,70,]),'DO':([35,150,303,393,467,468,597,798,],[-157,-310,438,-311,-309,-393,-392,-394,]),'DELTA':([230,250,281,357,399,476,],[374,374,374,374,523,612,]),'RAISE':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[296,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,296,-242,296,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,296,296,-390,-501,-389,296,296,296,-239,-252,-237,-299,-323,-456,-259,-455,-266,296,296,296,-416,-395,-300,296,296,296,296,-294,-396,-261,296,-457,296,296,296,296,296,-275,-262,-391,296,296,-270,-287,-401,296,296,-413,-411,296,-412,]),'OF':([634,819,823,],[747,872,-88,]),'ABORT':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,567,568,569,570,571,574,578,583,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[307,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,307,-242,307,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,307,307,-390,-501,-389,307,307,307,-239,-252,-237,-299,-323,-456,694,-259,-455,-266,307,307,307,704,-416,-395,-300,307,307,307,307,-294,-396,-261,307,-457,307,307,307,307,307,-275,-262,-391,307,307,-270,-287,-401,307,307,-413,-411,307,-412,]),'CONSTANT':([192,344,528,],[343,492,661,]),'ABS':([43,121,126,135,148,201,202,203,204,205,206,218,221,222,223,224,225,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,282,301,306,321,326,351,354,355,356,359,362,363,387,421,449,460,466,471,474,491,514,540,573,586,596,604,605,612,616,618,633,635,681,713,722,765,775,806,821,822,837,882,883,905,938,941,],[132,132,-212,132,-211,-220,-219,132,-221,-218,-222,132,-191,-192,-193,132,132,132,132,-202,132,-206,-204,-215,-203,132,-200,-205,-213,-201,-214,132,132,132,132,132,132,132,132,132,132,132,-194,-195,-207,132,132,132,132,132,-282,132,132,132,132,132,132,132,-283,132,132,132,132,132,132,132,-281,132,132,132,132,132,132,132,132,132,132,132,]),'ENTRY':([14,42,76,102,104,285,339,360,422,424,480,481,549,553,554,558,561,562,563,564,565,631,682,683,684,687,691,693,738,740,771,773,778,779,781,817,828,845,847,881,922,923,925,926,948,952,],[-9,-2,-493,-492,-491,-363,-8,-3,-8,557,-379,557,-494,685,-374,-368,-367,-369,-364,-365,-322,-8,-500,-376,-8,-377,-366,557,-380,-8,-375,-378,-370,-371,-372,557,-8,-381,-109,-495,-385,-383,-382,-108,-384,-386,]),'DOTDOT':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,388,389,391,506,507,515,649,724,744,755,844,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,359,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,359,-227,359,-210,-186,-182,-164,-184,-227,-227,-185,-157,]),'/':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,157,207,213,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,388,391,506,507,515,649,717,724,744,755,844,],[-157,202,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,-235,-234,-225,202,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,-227,202,-186,-182,-164,-184,-157,-227,-227,-185,-157,]),'AT':([35,177,282,372,373,374,375,417,418,420,768,],[-157,-154,421,-179,-177,-178,-176,-156,-155,551,837,]),'RENAMES':([25,35,36,45,58,66,67,68,69,108,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,150,152,157,171,195,199,219,220,226,227,246,277,342,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,393,408,483,487,506,512,513,515,636,637,638,649,748,755,802,827,],[51,-157,-158,-309,51,-308,-306,-307,51,51,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-310,-304,-149,51,51,-159,-235,-234,-225,-208,-224,51,51,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-311,-305,-52,51,-186,-61,-62,-164,-51,-53,-54,-184,-93,-185,-94,-55,]),'INT':([43,121,126,132,135,148,149,201,202,203,204,205,206,218,221,222,223,224,225,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,282,301,306,321,326,351,354,355,356,359,362,363,387,421,449,460,466,471,474,491,514,540,573,586,596,604,605,612,616,618,633,635,681,713,722,765,775,806,821,822,837,882,883,905,938,941,],[143,143,-212,143,143,-211,143,-220,-219,143,-221,-218,-222,143,-191,-192,-193,143,143,143,143,-202,143,-206,-204,-215,-203,143,-200,-205,-213,-201,-214,143,143,143,143,143,143,143,143,143,143,143,-194,-195,-207,143,143,143,143,143,-282,143,143,143,143,143,143,143,-283,143,143,143,143,143,143,143,-281,143,143,143,143,143,143,143,143,143,143,143,]),'RETURN':([35,36,66,67,68,150,172,184,199,255,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,393,401,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[-157,-158,-308,-309,-307,-310,268,326,-159,-309,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,326,-242,326,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-311,538,-260,326,326,-390,-501,-389,326,326,326,-239,-252,-237,-299,-323,-456,-259,-455,-266,326,326,326,-416,-395,-300,326,326,326,326,-294,-396,-261,326,-457,326,326,326,326,326,-275,-262,-391,326,326,-270,-287,-401,326,326,-413,-411,326,-412,]),'ACCEPT':([184,288,289,290,292,295,297,298,299,302,305,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,699,702,703,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[330,-253,-258,-399,-245,-247,-255,-256,-241,-249,330,-243,-398,-254,330,-242,330,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,330,330,-390,-501,-389,330,330,330,-239,-252,-237,-299,-323,-456,-259,-455,-266,330,330,330,-416,-395,-300,330,330,330,330,330,330,-294,-396,-261,330,-457,330,330,330,330,330,-275,-262,-391,330,330,-270,-287,-401,330,330,-413,-411,330,-412,]),'+':([35,43,120,121,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,238,239,240,241,243,246,282,301,306,321,326,349,351,352,353,354,355,356,359,362,363,367,368,369,370,371,372,373,374,375,376,377,382,383,386,387,388,389,391,421,449,460,466,471,474,491,506,507,513,514,515,540,573,586,596,604,605,612,616,618,633,635,649,681,713,717,722,724,744,755,765,775,806,821,822,837,844,882,883,905,938,941,],[-157,148,-209,148,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,242,-149,-182,-227,242,148,-235,-234,-191,-192,-193,148,148,-225,-208,148,148,-202,148,-206,-204,-203,148,-200,-205,-201,-224,148,148,148,148,148,-217,148,-232,-183,148,148,148,148,-194,-195,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,242,242,-207,-227,242,-210,148,148,148,148,148,-282,148,-186,-182,242,148,-164,148,148,148,148,148,-283,148,148,148,148,148,-184,148,148,-157,-281,-227,-227,-185,148,148,148,148,148,148,-157,148,148,148,148,148,]),'REM':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,157,207,213,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,388,391,506,507,515,649,717,724,744,755,844,],[-157,204,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,-235,-234,-225,204,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,-227,204,-186,-182,-164,-184,-157,-227,-227,-185,-157,]),'TAGGED':([399,476,529,622,],[527,527,662,662,]),'RR':([428,],[568,]),'USE':([7,24,29,32,34,35,41,42,44,46,48,49,52,53,54,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,119,155,164,166,170,174,176,177,178,182,185,187,191,193,262,265,267,269,271,272,279,360,372,373,374,375,405,407,410,412,417,418,472,479,489,493,495,500,549,565,627,641,643,646,667,670,682,689,737,749,750,751,752,766,829,834,836,842,881,901,904,924,],[-428,-460,60,60,60,-157,-428,-2,-302,-325,-301,-321,-324,-461,-468,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,60,-138,-141,-14,-18,60,-492,-13,-491,-19,-148,-139,-145,-429,-427,60,-345,-458,-459,-462,60,-357,-154,282,-349,-303,-22,-142,-321,-347,-337,60,-344,60,-135,60,-3,-179,-177,-178,-176,-338,-346,-136,60,-156,-155,60,60,-446,-444,60,60,-494,-322,-36,-342,-50,-321,-463,-464,-500,-445,-442,-23,-341,-35,-443,-467,60,-465,-331,-373,-495,-356,-466,60,]),'FLOAT':([43,121,126,132,135,148,149,201,202,203,204,205,206,218,221,222,223,224,225,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,282,301,306,321,326,351,354,355,356,359,362,363,387,421,449,460,466,471,474,491,514,540,573,586,596,604,605,612,616,618,633,635,681,713,722,765,775,806,821,822,837,882,883,905,938,941,],[144,144,-212,144,144,-211,144,-220,-219,144,-221,-218,-222,144,-191,-192,-193,144,144,144,144,-202,144,-206,-204,-215,-203,144,-200,-205,-213,-201,-214,144,144,144,144,144,144,144,144,144,144,144,-194,-195,-207,144,144,144,144,144,-282,144,144,144,144,144,144,144,-283,144,144,144,144,144,144,144,-281,144,144,144,144,144,144,144,144,144,144,144,]),'.':([35,36,38,45,68,69,125,130,133,134,137,138,142,156,157,169,171,175,177,178,195,197,198,199,213,220,249,294,327,347,367,368,369,370,371,372,373,374,375,376,382,388,403,406,408,417,418,427,431,446,483,515,546,669,671,672,676,707,710,717,724,744,756,768,844,874,],[-157,-158,117,117,117,117,-163,-152,-150,-153,-149,229,-151,229,-149,229,117,117,-154,280,117,117,117,-159,229,229,229,-157,229,117,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,229,229,280,229,229,-156,-155,229,229,229,229,-164,117,229,229,229,117,229,-157,-157,229,229,280,280,-157,229,]),'SELECT':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,788,789,790,792,795,801,848,849,853,854,857,858,859,860,886,887,890,891,911,912,913,927,],[305,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,305,-242,305,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,305,305,-390,-501,-389,305,305,305,-239,-252,-237,-299,-323,-456,-259,-455,-266,305,305,305,-416,-395,-300,305,305,305,305,-294,-396,-261,305,-457,305,851,305,305,305,305,-275,-262,-391,888,889,305,305,-270,-287,-401,910,305,305,-413,-411,305,-412,]),'CASE':([14,42,184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,360,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,715,716,720,783,786,789,790,792,795,801,809,847,848,849,857,858,859,860,864,886,890,891,897,898,911,912,913,918,926,927,932,947,950,953,],[-9,-2,306,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,306,-242,306,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-3,-260,306,306,-390,-501,-389,306,306,306,-239,-252,-237,-299,-323,-456,-259,-455,-266,306,306,306,-416,-395,-300,306,306,306,306,-294,-396,797,-261,306,-457,306,306,306,306,306,-275,-8,-109,-262,-391,306,306,-270,-287,896,-401,306,306,-8,-104,-413,-411,306,896,-108,-412,-105,951,-8,896,]),'LIMITED':([399,476,525,527,615,662,],[-98,-98,657,-99,657,-100,]),'ACCESS':([162,230,250,281,357,399,476,520,],[258,372,372,372,372,528,528,652,]),'TICK':([35,125,130,133,134,137,138,142,156,157,169,177,178,213,220,249,294,327,367,368,369,370,371,372,373,374,375,376,382,388,403,406,408,417,418,427,431,446,483,515,669,671,672,707,710,717,724,744,756,768,844,874,],[-157,-163,-152,-150,-153,-149,230,-151,250,-149,250,-154,281,357,230,250,-157,230,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,357,357,281,250,250,-156,-155,250,250,250,250,-164,250,250,250,250,-157,-157,357,357,281,281,-157,250,]),'<':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,232,-149,-182,-227,232,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,232,-210,-186,-182,-164,-184,-157,-185,]),'ARROW':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,207,208,210,211,212,213,214,215,216,219,220,226,227,246,349,352,353,358,364,365,367,368,369,370,371,372,373,374,375,376,377,379,382,383,385,386,388,390,391,433,506,507,509,510,512,513,515,582,649,707,708,709,710,711,755,796,855,856,945,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,228,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-182,-123,-125,-127,355,-227,-121,-196,-124,-235,-234,-225,-208,-224,-217,-232,-183,-126,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-123,-227,-196,-124,-197,-199,-198,-210,-267,-186,-182,-123,-122,-61,-62,-164,703,-184,-453,-451,-454,-157,795,-185,858,890,-452,950,]),'GEQ':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,241,-149,-182,-227,241,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,241,-210,-186,-182,-164,-184,-157,-185,]),'CHAR':([229,609,804,],[370,727,727,]),'EXCEPTION':([192,288,289,290,292,295,297,298,299,302,308,309,310,315,316,317,318,319,320,322,323,324,328,329,331,333,432,439,440,454,455,459,463,465,566,569,585,592,594,706,712,716,783,801,848,849,859,860,886,911,912,927,],[342,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-242,457,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,-390,-501,-239,-252,-237,-299,-323,-456,-455,-416,-395,-300,-294,-396,-261,-457,-275,-262,-391,-270,-287,-401,-413,-411,-412,]),')':([35,36,63,120,122,123,124,125,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,177,197,199,207,208,209,211,213,215,219,220,226,227,246,247,248,349,350,352,353,358,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,394,395,396,398,403,417,418,475,506,507,508,511,512,513,515,516,541,648,649,650,651,654,673,717,718,723,724,726,727,728,729,742,743,744,745,746,755,756,802,803,830,835,843,844,862,873,875,876,906,],[-157,-158,-315,-209,217,-182,-4,-163,-6,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-154,348,-159,-182,352,353,-127,-227,-196,-235,-234,-225,-208,-224,393,-312,-217,506,-232,-183,-126,-5,-190,-189,-7,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-170,-167,515,-168,-227,-196,-165,-169,-197,-199,-198,-210,518,519,-111,-114,-33,-156,-155,606,-186,-182,649,-187,-61,-62,-164,-313,-314,755,-184,-166,-112,757,-34,-157,798,-92,-93,-66,-67,805,-64,-89,819,-93,823,-85,-185,-33,-94,-91,-113,879,884,-157,-65,-86,-87,-90,921,]),'OR':([35,120,123,125,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,207,208,213,215,219,220,226,227,246,288,289,290,292,295,297,298,299,302,308,309,310,315,317,318,319,320,322,323,324,328,329,331,333,349,352,353,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,382,383,386,388,390,391,419,432,433,439,440,441,442,443,444,447,448,451,454,455,459,461,463,464,465,506,507,509,511,513,515,552,566,569,576,577,578,579,580,581,585,591,592,594,595,642,649,673,706,712,716,717,718,730,732,733,748,755,770,783,786,787,791,801,848,849,850,859,860,863,880,886,911,912,927,],[-157,-209,-182,-163,222,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-182,222,-227,-196,-235,-234,-225,-208,-224,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-242,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-217,-232,-183,-190,-189,222,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,222,-227,-196,-197,-199,-198,-210,222,-260,222,-390,-501,-402,-389,-404,-414,-414,-414,222,-239,-252,-237,222,-299,222,-323,-186,-182,222,222,-62,-164,222,-456,-455,699,-407,-415,-408,701,-406,-416,222,-395,-300,222,222,-184,222,-294,-396,-261,-157,222,222,222,222,222,-185,222,-457,-414,-405,-403,-275,-262,-391,-407,-270,-287,222,222,-401,-413,-411,-412,]),':':([57,61,64,106,261,294,397,710,717,780,844,],[162,-24,-26,192,-25,429,520,793,-26,846,-26,]),'ALIASED':([192,747,846,872,],[344,826,826,826,]),'NOT':([35,43,120,121,123,125,126,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,157,201,202,203,204,205,206,207,213,215,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,282,301,306,321,326,349,351,352,353,354,355,356,359,362,363,367,368,369,370,371,372,373,374,375,376,377,382,383,387,391,421,449,460,466,471,474,491,506,507,514,515,540,573,586,596,604,605,612,616,618,633,635,649,681,713,717,722,755,765,775,806,821,822,837,882,883,905,938,941,],[-157,149,-209,149,-182,-163,-212,-231,-152,-230,-150,-153,149,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,237,-211,-149,-220,-219,149,-221,-218,-222,-182,-227,237,149,-235,-234,-191,-192,-193,149,149,-225,-208,149,149,-202,149,-206,-204,-215,-203,149,-200,-205,-213,-201,-214,149,-224,149,149,149,149,149,-217,149,-232,-183,149,149,149,149,-194,-195,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,237,-207,-210,149,149,149,149,149,-282,149,-186,-182,149,-164,149,149,149,149,149,-283,149,149,149,149,149,-184,149,149,-157,-281,-185,149,149,149,149,149,149,149,149,149,149,149,]),'IF':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,695,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[301,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,301,-242,301,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,301,301,-390,-501,-389,301,301,301,-239,-252,-237,-299,-323,-456,-259,-455,-266,301,301,301,-416,-395,-300,301,784,301,301,301,-294,-396,-261,301,-457,301,301,301,301,301,-275,-262,-391,301,301,-270,-287,-401,301,301,-413,-411,301,-412,]),'PACKAGE':([0,2,3,5,6,7,8,10,11,14,15,17,20,21,22,23,24,26,28,29,32,34,39,40,41,42,44,46,47,48,49,52,53,54,56,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,118,119,155,164,166,170,174,176,182,185,187,191,193,200,262,265,267,269,271,272,279,348,360,405,407,410,412,472,479,489,493,495,496,497,499,500,502,504,549,565,627,641,643,646,667,670,682,689,737,749,750,751,752,766,829,834,836,842,881,901,904,924,],[-417,-8,-422,-419,31,-428,-423,-418,-422,-9,-435,-432,-434,-430,-8,-431,-460,-436,-433,65,112,-424,31,-426,-428,-2,-302,-325,-421,-301,-321,-324,-461,-468,161,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,112,-138,-141,-14,-18,112,-492,-13,-491,-19,-148,-139,-145,-429,-427,-8,-425,-345,-458,-459,-462,278,-357,-349,-303,-22,-142,-321,-420,-347,-337,278,-344,278,-135,112,505,-3,-338,-346,-136,278,112,112,-446,-444,112,-440,-439,-441,112,-437,-438,-494,-322,-36,-342,-50,-321,-463,-464,-500,-445,-442,-23,-341,-35,-443,-467,112,-465,-331,-373,-495,-356,-466,112,]),'ELSIF':([288,289,290,292,295,297,298,299,302,308,309,310,315,317,318,319,320,322,323,324,328,329,331,333,432,435,437,439,440,454,455,459,463,465,566,569,571,585,592,594,696,706,712,716,783,801,848,849,859,860,886,911,912,927,],[-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-242,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,-263,573,-390,-501,-239,-252,-237,-299,-323,-456,-455,-265,-416,-395,-300,-264,-294,-396,-261,-457,-275,-262,-391,-270,-287,-401,-413,-411,-412,]),'TYPE':([24,29,32,42,44,46,48,49,52,53,54,60,71,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,100,101,102,103,104,105,107,109,110,155,164,166,170,174,176,182,185,187,191,193,262,265,267,269,270,271,272,275,279,360,405,407,410,412,472,479,489,493,495,500,549,565,627,641,643,646,667,670,682,689,737,749,750,751,752,766,829,834,836,842,881,901,904,924,],[-460,55,95,-2,-302,-325,-301,-321,-324,-461,-468,167,-343,180,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,95,-138,-141,-14,-18,188,95,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,-462,95,-357,-349,-303,-22,-142,-321,-347,-337,95,-344,180,95,-135,188,95,-3,-338,-346,-136,95,95,95,-446,-444,95,95,-494,-322,-36,-342,-50,-321,-463,-464,-500,-445,-442,-23,-341,-35,-443,-467,95,-465,-331,-373,-495,-356,-466,95,]),'EXIT':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[311,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,311,-242,311,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,311,311,-390,-501,-389,311,311,311,-239,-252,-237,-299,-323,-456,-259,-455,-266,311,311,311,-416,-395,-300,311,311,311,311,-294,-396,-261,311,-457,311,311,311,311,311,-275,-262,-391,311,311,-270,-287,-401,311,311,-413,-411,311,-412,]),'AND':([35,120,123,125,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,157,207,208,213,215,219,220,226,227,246,349,352,353,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,382,383,386,388,390,391,419,433,451,461,464,506,507,509,511,513,515,552,591,595,642,649,673,717,718,730,732,733,748,755,770,863,880,],[-157,-209,-182,-163,221,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-182,221,-227,-196,-235,-234,-225,-208,-224,-217,-232,-183,-190,-189,221,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,221,-227,-196,-197,-199,-198,-210,221,221,221,221,221,-186,-182,221,221,-62,-164,221,221,221,221,-184,221,-157,221,221,221,221,221,-185,221,221,221,]),'REVERSE':([474,722,],[605,-281,]),'UNTIL':([321,],[460,]),'THEN':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,219,220,221,226,227,246,288,289,290,292,295,297,298,299,302,308,309,310,315,317,318,319,320,322,323,324,328,329,331,333,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,432,433,434,439,440,442,444,447,450,454,455,459,463,465,506,513,515,566,569,577,578,580,585,592,594,649,706,712,716,755,783,801,848,849,859,860,886,911,912,927,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-235,-234,362,-225,-208,-224,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-242,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-260,-267,570,-390,-501,-389,-414,-414,583,-239,-252,-237,-299,-323,-186,-62,-164,-456,-455,-409,-415,-410,-416,-395,-300,-184,-294,-396,-261,-185,-457,-275,-262,-391,-270,-287,-401,-413,-411,-412,]),'=':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,240,-149,-182,-227,240,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,240,-210,-186,-182,-164,-184,-157,-185,]),'ALL':([229,528,],[368,659,]),'error':([14,24,29,32,42,44,46,48,49,52,53,54,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,151,155,164,166,170,174,176,182,184,185,187,191,193,231,251,262,265,267,269,271,272,279,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,334,351,360,392,405,407,410,412,432,436,438,439,440,442,444,447,448,454,455,459,463,465,472,479,489,493,495,500,514,517,549,558,561,562,564,565,566,568,569,570,571,574,578,585,592,594,596,599,627,641,643,646,667,670,682,689,691,693,697,702,704,706,712,716,720,737,749,750,751,752,765,766,775,778,779,781,783,786,789,790,792,795,801,809,829,834,836,840,842,845,847,848,849,857,858,859,860,864,881,886,890,891,897,898,901,904,911,912,913,918,924,925,926,927,932,950,953,],[-9,-460,63,98,-2,-302,-325,-301,-321,-324,-461,-468,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,98,-138,-141,-14,-18,98,-492,-13,-491,-19,-148,-139,-145,63,-345,-458,-459,-462,98,-357,-349,313,-303,-22,-142,-321,378,398,-347,-337,98,-344,98,-135,98,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,313,-242,313,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,398,378,-3,63,-338,-346,-136,98,-260,313,313,-390,-501,-389,313,313,313,-239,-252,-237,-299,-323,98,98,-446,-444,98,98,378,398,-494,-368,-367,-369,-365,-322,-456,-259,-455,-266,313,313,313,-416,-395,-300,63,313,-36,-342,-50,-321,-463,-464,-500,-445,-366,782,313,313,313,-294,-396,-261,313,-442,-23,-341,-35,-443,378,-467,63,-370,-371,-372,-457,313,313,313,313,313,-275,-8,98,-465,-331,63,-373,-381,-109,-262,-391,313,313,-270,-287,782,-495,-401,313,313,-8,-104,-356,-466,-413,-411,313,782,98,-382,-108,-412,-105,-8,782,]),'ASSIGN':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,177,219,220,226,227,246,294,327,343,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,403,417,418,483,484,485,486,487,488,506,512,513,515,636,637,638,649,748,755,756,802,824,827,877,885,902,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-154,-235,-234,-225,-208,-224,-157,466,491,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,540,-156,-155,-52,-78,-32,540,-31,-79,-186,-61,-62,-164,-51,-53,-54,-184,-93,-185,540,-94,-81,-55,-82,540,-80,]),'PROCEDURE':([0,2,3,5,6,7,8,10,11,14,15,17,20,21,22,23,24,26,28,29,32,34,39,40,41,42,44,46,47,48,49,52,53,54,56,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,118,119,155,164,166,170,174,176,182,185,187,191,193,200,262,265,267,269,271,272,279,285,348,360,405,407,410,412,422,424,472,479,489,493,495,496,497,499,500,502,504,549,553,554,558,561,562,563,564,565,627,641,643,646,667,670,682,683,684,687,689,691,693,737,749,750,751,752,766,771,773,778,779,781,828,829,834,836,842,845,847,881,901,904,922,923,924,925,926,948,952,],[-417,-8,-422,-419,18,-428,-423,-418,-422,-9,-435,-432,-434,-430,-8,-431,-460,-436,-433,18,18,-424,18,-426,-428,-2,-302,-325,-421,-301,-321,-324,-461,-468,159,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,18,-138,-141,-14,-18,18,-492,-13,-491,-19,-148,-139,-145,-429,-427,-8,-425,-345,-458,-459,-462,18,-357,-349,-303,-22,-142,-321,-420,-347,-337,18,-344,18,-135,18,-363,18,-3,-338,-346,-136,18,-8,18,18,18,-446,-444,18,-440,-439,-441,18,-437,-438,-494,18,-374,-368,-367,-369,-364,-365,-322,-36,-342,-50,-321,-463,-464,-500,-376,-8,-377,-445,-366,18,-442,-23,-341,-35,-443,-467,-375,-378,-370,-371,-372,-8,18,-465,-331,-373,-381,-109,-495,-356,-466,-385,-383,18,-382,-108,-384,-386,]),'NEQ':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,243,-149,-182,-227,243,-235,-234,-225,-208,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,243,-210,-186,-182,-164,-184,-157,-185,]),'-':([35,43,120,121,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,207,213,215,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,238,239,240,241,243,246,282,301,306,321,326,349,351,352,353,354,355,356,359,362,363,367,368,369,370,371,372,373,374,375,376,377,382,383,386,387,388,389,391,421,449,460,466,471,474,491,506,507,513,514,515,540,573,586,596,604,605,612,616,618,633,635,649,681,713,717,722,724,744,755,765,775,806,821,822,837,844,882,883,905,938,941,],[-157,126,-209,126,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,244,-149,-182,-227,244,126,-235,-234,-191,-192,-193,126,126,-225,-208,126,126,-202,126,-206,-204,-203,126,-200,-205,-201,-224,126,126,126,126,126,-217,126,-232,-183,126,126,126,126,-194,-195,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,244,244,-207,-227,244,-210,126,126,126,126,126,-282,126,-186,-182,244,126,-164,126,126,126,126,126,-283,126,126,126,126,126,-184,126,126,-157,-281,-227,-227,-185,126,126,126,126,126,126,-157,126,126,126,126,126,]),'|':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,207,208,210,211,212,213,214,215,216,219,220,226,227,246,349,352,353,358,364,365,367,368,369,370,371,372,373,374,375,376,377,379,382,383,385,386,388,390,391,506,507,509,510,512,513,515,649,707,708,709,710,711,755,796,855,856,945,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-182,-123,-125,-127,354,-227,-121,-196,-124,-235,-234,-225,-208,-224,-217,-232,-183,-126,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-123,-227,-196,-124,-197,-199,-198,-210,-186,-182,-123,-122,-61,-62,-164,-184,-453,-451,-454,-157,794,-185,354,794,-452,354,]),'IN':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,157,162,207,213,215,219,220,226,227,237,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,383,391,506,507,515,603,649,717,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,234,-149,259,-182,-227,234,-235,-234,-225,-208,387,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,234,-210,-186,-182,-164,722,-184,-157,-185,]),'RANGE':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,213,219,220,226,227,246,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,382,386,388,390,391,399,476,483,506,513,515,649,724,730,732,744,748,755,844,863,874,880,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,356,-235,-234,-225,-208,-224,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,356,-197,-199,-198,-210,533,356,356,-186,-62,-164,-184,356,356,356,821,356,-185,-157,356,903,905,]),'LL':([184,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,702,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[293,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,293,-242,293,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,293,293,-390,-501,-389,293,293,293,-239,-252,-237,-299,-323,-456,-259,-455,-266,293,293,293,-416,-395,-300,293,293,293,293,-294,-396,-261,293,-457,293,293,293,293,293,-275,-262,-391,293,293,-270,-287,-401,293,293,-413,-411,293,-412,]),'TASK':([32,42,44,46,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,174,176,182,185,187,191,193,262,265,267,269,271,272,279,348,360,405,407,410,412,472,479,489,493,495,500,549,565,627,641,643,646,682,689,737,749,750,751,752,829,836,842,881,901,924,],[100,-2,-302,-325,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,100,-138,-141,-14,-18,100,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,275,-357,-349,-303,-22,-142,-321,-347,-337,275,-344,275,-135,100,503,-3,-338,-346,-136,275,100,100,-446,-444,100,100,-494,-322,-36,-342,-50,-321,-500,-445,-442,-23,-341,-35,-443,100,-331,-373,-495,-356,100,]),'OTHERS':([121,231,351,354,514,588,713,765,793,794,941,],[210,210,210,210,210,709,210,210,709,709,210,]),'DELAY':([184,288,289,290,292,295,297,298,299,302,305,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,333,432,436,438,439,440,442,444,447,448,454,455,459,463,465,566,568,569,570,571,574,578,585,592,594,599,697,699,701,702,703,704,706,712,716,720,783,786,789,790,792,795,801,848,849,857,858,859,860,886,890,891,911,912,913,927,],[321,-253,-258,-399,-245,-247,-255,-256,-241,-249,321,-243,-398,-254,321,-242,321,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,321,321,-390,-501,-389,321,321,321,-239,-252,-237,-299,-323,-456,-259,-455,-266,321,321,321,-416,-395,-300,321,321,321,321,321,321,321,-294,-396,-261,321,-457,321,321,321,321,321,-275,-262,-391,321,321,-270,-287,-401,321,321,-413,-411,321,-412,]),'END':([14,42,44,46,48,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,174,176,182,183,185,187,191,262,265,267,269,271,272,273,279,285,288,289,290,292,295,297,298,299,302,308,309,310,314,315,316,317,318,319,320,322,323,324,325,328,329,331,333,339,360,405,407,410,411,412,416,420,422,424,432,435,437,439,440,441,443,444,448,454,455,456,458,459,462,463,465,480,481,489,493,495,544,547,548,549,550,553,554,558,560,561,562,563,564,565,566,569,571,572,575,576,577,578,579,581,584,585,589,590,592,593,594,598,627,631,632,641,643,680,682,683,684,687,689,691,693,696,697,700,706,712,714,716,720,736,737,738,739,740,741,749,750,751,752,771,773,778,779,781,783,786,787,789,790,791,792,801,816,817,828,836,839,842,845,847,848,849,850,852,857,859,860,870,881,886,891,893,895,897,898,901,911,912,913,914,915,918,919,922,923,925,926,927,928,931,932,933,937,939,940,942,946,948,952,954,955,],[-9,-2,-302,-325,-301,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,-138,-141,-14,-18,-132,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,-133,-357,-349,287,-303,-22,-142,-347,-337,-133,-344,-134,-135,-327,-131,-363,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-290,-242,-292,-246,-257,-238,-251,-400,-250,-236,-8,-248,-240,-397,-244,-8,-3,-338,-346,-136,543,-133,-332,-496,-8,-361,-260,-263,-268,-390,-501,-402,-404,-414,-414,-239,-252,-291,-293,-237,-272,-299,-323,-379,-387,-446,-444,-131,-328,679,-333,-494,-498,688,-374,-368,692,-367,-369,-364,-365,-322,-456,-455,-265,695,698,-268,-407,-415,-408,-406,-271,-416,-447,-448,-395,715,-300,719,-36,-8,-354,-342,-50,769,-500,-376,-8,-377,-445,-366,-362,-264,-269,788,-294,-396,-273,-261,800,815,-442,-380,-8,-8,818,-23,-341,-35,-443,-375,-378,-370,-371,-372,-457,-414,-405,-414,853,-403,854,-275,-388,-387,-8,-331,-497,-373,-381,-109,-262,-391,-407,887,-449,-270,-287,-355,-495,-401,-274,-8,916,-8,-104,-356,-413,-411,-450,-102,-8,-106,-101,-385,-383,-382,-108,-412,-103,-8,-105,-499,-107,944,-118,947,-119,-384,-386,-117,-120,]),'DIGITS':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,219,220,226,227,230,246,250,281,349,352,353,357,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,399,476,483,506,513,515,649,655,730,755,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-235,-234,-225,-208,373,-224,373,373,-217,-232,-183,373,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,530,616,635,-186,-62,-164,-184,758,806,-185,]),'RECORD':([207,282,476,507,527,615,657,662,731,769,810,813,868,916,],[350,420,-98,648,-99,-335,-336,-100,809,838,865,809,809,929,]),'TERMINATE':([305,699,703,],[445,445,445,]),'BOX':([251,334,521,523,526,530,533,536,758,765,821,903,],[395,475,654,655,658,664,665,668,831,835,875,875,]),'ARRAY':([192,341,343,344,399,476,492,],[-27,482,-29,-28,482,482,-30,]),'ELSE':([222,288,289,290,292,295,297,298,299,302,308,309,310,315,317,318,319,320,322,323,324,328,329,331,333,432,435,437,439,440,441,442,443,444,447,448,454,455,459,463,465,566,569,571,576,577,578,579,580,581,585,592,594,696,706,712,716,783,786,787,791,801,848,849,850,859,860,886,911,912,927,],[363,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-242,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-244,-260,-263,574,-390,-501,-402,-389,-404,-414,-414,-414,-239,-252,-237,-299,-323,-456,-455,-265,574,-407,-415,-408,702,-406,-416,-395,-300,-264,-294,-396,-261,-457,-414,-405,-403,-275,-262,-391,-407,-270,-287,-401,-413,-411,-412,]),'PRAGMA':([0,2,5,7,11,14,15,17,20,21,22,23,26,28,32,34,40,41,42,44,46,47,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,118,119,155,164,166,174,176,182,185,187,191,193,200,262,265,267,269,271,272,279,285,325,339,360,405,407,410,412,422,424,462,472,479,480,489,493,495,496,497,499,500,502,504,549,554,558,561,562,563,564,565,584,627,631,641,643,646,682,683,684,687,689,691,693,737,738,739,740,749,750,751,752,771,773,778,779,781,809,816,828,829,836,842,845,847,864,881,893,897,898,901,914,915,918,922,923,924,925,926,928,930,931,932,936,937,948,950,952,953,954,],[4,-8,4,-428,4,-9,-435,-432,-434,-430,-8,-431,-436,-433,4,-424,-426,-428,-2,-302,-325,4,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,4,-138,-141,-14,-18,4,-492,-13,-491,-19,-148,-139,-145,-429,-427,-8,-425,-345,-458,-459,4,-357,-349,-303,-22,-142,-321,4,-347,-337,4,-344,4,-135,4,-363,-8,-8,-3,-338,-346,-136,4,-8,4,4,4,4,4,-446,-444,4,-440,-439,-441,4,-437,-438,-494,4,-368,-367,-369,-364,-365,-322,-271,-36,-8,-342,-50,-321,-500,-376,-8,-377,-445,-366,4,-442,4,-8,-8,-23,-341,-35,-443,4,-378,-370,-371,-372,-8,4,-8,4,-331,-373,-381,-109,4,-495,-8,-8,-104,-356,4,-8,4,-385,-383,4,-382,-108,4,-8,-8,-105,4,4,-384,-8,-386,4,-117,]),'IS':([25,35,36,45,66,67,68,69,108,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,150,152,157,158,171,175,181,186,190,194,195,199,219,220,226,227,246,252,253,254,256,277,283,284,335,336,337,338,347,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,393,400,408,423,433,451,478,501,506,513,515,518,519,542,545,546,606,649,671,686,753,754,755,907,917,943,],[49,-157,-158,-309,-308,-306,-307,174,193,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-310,-304,-149,-469,267,279,285,-37,339,346,174,-159,-235,-234,-225,-208,-224,-470,399,-309,402,414,422,-37,-38,476,-37,479,495,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-311,536,-305,285,-267,584,339,646,-186,-62,-164,-110,-471,674,677,678,-39,-184,536,646,828,829,-185,924,930,924,]),'WHEN':([14,35,42,125,130,133,134,142,150,157,288,289,290,292,295,297,298,299,302,305,308,309,310,311,315,317,318,319,320,322,323,324,325,328,329,331,333,360,367,368,369,370,371,372,373,374,375,376,393,431,432,439,440,453,454,455,457,458,459,462,463,465,515,566,569,584,585,589,590,592,593,594,699,706,712,714,716,772,783,801,841,847,848,849,857,859,860,886,891,893,897,898,911,912,913,914,915,918,919,921,926,927,928,930,931,932,934,936,937,940,942,946,954,955,],[-9,-157,-2,-163,-152,-150,-153,-151,-310,-149,-253,-258,-399,-245,-247,-255,-256,-241,-249,449,-243,-398,-254,-295,-242,-246,-257,-238,-251,-400,-250,-236,-8,-248,-240,-397,-244,-3,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-311,-296,-260,-390,-501,586,-239,-252,588,588,-237,-272,-299,-323,-164,-456,-455,-271,-416,-447,-448,-395,713,-300,449,-294,-396,-273,-261,-309,-457,-275,883,-109,-262,-391,-449,-270,-287,-401,-274,-8,-8,-104,-413,-411,-450,-102,-8,-106,-101,-309,-108,-412,-103,-8,-8,-105,938,941,-107,-118,941,-119,-117,-120,]),'GENERIC':([0,2,3,5,6,7,8,10,11,14,15,17,20,21,22,23,26,28,32,34,39,40,41,42,44,46,47,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,118,119,155,164,166,174,176,182,185,187,191,193,200,262,265,267,269,271,272,279,360,405,407,410,412,472,479,489,493,495,496,497,499,500,502,504,549,565,627,641,643,646,682,689,737,749,750,751,752,829,836,842,881,901,924,],[-417,-8,-422,-419,24,-428,-423,-418,-422,-9,-435,-432,-434,-430,-8,-431,-436,-433,24,-424,24,-426,-428,-2,-302,-325,-421,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,24,-138,-141,-14,-18,24,-492,-13,-491,-19,-148,-139,-145,-429,-427,-8,-425,-345,-458,-459,24,-357,-349,-303,-22,-142,-321,-420,-347,-337,24,-344,24,-135,24,-3,-338,-346,-136,24,24,24,-446,-444,24,-440,-439,-441,24,-437,-438,-494,-322,-36,-342,-50,-321,-500,-445,-442,-23,-341,-35,-443,24,-331,-373,-495,-356,24,]),'PRIVATE':([0,2,3,5,7,10,11,14,15,17,20,21,22,23,26,28,34,40,41,42,44,46,47,48,52,71,75,76,78,79,80,81,84,85,86,87,92,94,97,99,102,103,104,105,109,114,115,118,119,155,164,166,174,176,182,185,187,200,262,265,267,269,271,272,273,285,339,360,399,405,407,410,424,476,480,481,489,493,496,497,499,502,504,525,527,549,558,561,563,564,565,615,627,631,632,641,643,656,657,662,682,689,691,731,737,738,739,749,750,751,752,763,813,816,832,836,842,845,868,881,901,925,],[-417,-8,8,-419,-428,-418,8,-9,-435,-432,-434,-430,-8,-431,-436,-433,-424,-426,-428,-2,-302,-325,-421,-301,-324,-343,-11,-493,-140,-15,-12,-16,-137,-10,-20,-21,-17,-138,-14,-18,-492,-13,-491,-19,-139,-429,-427,-8,-425,-345,-458,-459,-133,-357,-349,-303,-22,-420,-347,-337,-133,-344,-134,-135,412,-363,-8,-3,-98,-338,-346,-136,562,-98,-379,-387,-446,-444,-440,-439,-441,-437,-438,-335,-99,-494,-368,-367,-364,-365,-322,-335,-36,-8,740,-342,-50,759,-336,-100,-500,-445,-366,759,-442,-380,-8,-23,-341,-35,-443,833,866,-388,878,-331,-373,-381,900,-495,-356,-382,]),'$end':([0,1,2,3,5,10,14,15,17,20,21,22,23,26,28,42,44,46,47,48,52,118,155,164,166,185,200,262,269,360,407,496,497,499,502,504,565,836,842,901,],[-417,0,-8,-1,-419,-418,-9,-435,-432,-434,-430,-8,-431,-436,-433,-2,-302,-325,-421,-301,-324,-8,-345,-458,-459,-303,-420,-347,-344,-3,-346,-440,-439,-441,-437,-438,-322,-331,-373,-356,]),'SUBTYPE':([32,42,44,46,48,49,52,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,155,164,166,174,176,182,185,187,191,193,262,265,267,269,271,272,279,360,405,407,410,412,472,479,489,493,495,500,549,565,627,641,643,646,682,689,737,749,750,751,752,829,836,842,881,901,924,],[111,-2,-302,-325,-301,-321,-324,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,111,-138,-141,-14,-18,111,-492,-13,-491,-19,-148,-139,-145,-345,-458,-459,111,-357,-349,-303,-22,-142,-321,-347,-337,111,-344,111,-135,111,-3,-338,-346,-136,111,111,111,-446,-444,111,111,-494,-322,-36,-342,-50,-321,-500,-445,-442,-23,-341,-35,-443,111,-331,-373,-495,-356,111,]),'FUNCTION':([0,2,3,5,6,7,8,10,11,14,15,17,20,21,22,23,24,26,28,29,32,34,39,40,41,42,44,46,47,48,49,52,53,54,56,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,101,102,103,104,105,107,109,110,114,115,118,119,155,164,166,170,174,176,182,185,187,191,193,200,262,265,267,269,271,272,279,285,348,360,405,407,410,412,422,424,472,479,489,493,495,496,497,499,500,502,504,549,553,554,558,561,562,563,564,565,627,641,643,646,667,670,682,683,684,687,689,691,693,737,749,750,751,752,766,771,773,778,779,781,828,829,834,836,842,845,847,881,901,904,922,923,924,925,926,948,952,],[-417,-8,-422,-419,30,-428,-423,-418,-422,-9,-435,-432,-434,-430,-8,-431,-460,-436,-433,30,30,-424,30,-426,-428,-2,-302,-325,-421,-301,-321,-324,-461,-468,160,-343,-11,-493,-140,-15,-12,-16,-144,-147,-137,-10,-20,-21,-146,-143,-17,30,-138,-141,-14,-18,30,-492,-13,-491,-19,-148,-139,-145,-429,-427,-8,-425,-345,-458,-459,-462,30,-357,-349,-303,-22,-142,-321,-420,-347,-337,30,-344,30,-135,30,-363,30,-3,-338,-346,-136,30,-8,30,30,30,-446,-444,30,-440,-439,-441,30,-437,-438,-494,30,-374,-368,-367,-369,-364,-365,-322,-36,-342,-50,-321,-463,-464,-500,-376,-8,-377,-445,-366,30,-442,-23,-341,-35,-443,-467,-375,-378,-370,-371,-372,-8,30,-465,-331,-373,-381,-109,-495,-356,-466,-385,-383,30,-382,-108,-384,-386,]),'LOOP':([35,120,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,157,184,219,220,226,227,246,288,289,290,292,295,297,298,299,302,308,309,310,312,315,316,317,318,319,320,322,323,324,328,329,331,332,333,349,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,386,388,390,391,429,432,433,436,438,439,440,442,444,447,448,454,455,459,463,465,470,506,512,513,515,566,568,569,570,571,574,578,585,592,594,599,601,649,697,702,704,706,712,716,720,723,724,725,755,783,786,789,790,792,795,800,801,802,803,848,849,857,858,859,860,886,890,891,911,912,913,927,],[-157,-209,-182,-163,-231,-152,-230,-150,-153,-223,-227,-226,-228,-229,-151,-180,-181,-216,-196,-188,-149,-276,-235,-234,-225,-208,-224,-253,-258,-399,-245,-247,-255,-256,-241,-249,-243,-398,-254,-276,-242,-276,-246,-257,-238,-251,-400,-250,-236,-248,-240,-397,-278,-244,-217,-232,-183,-190,-189,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-197,-199,-198,-210,-277,-260,-267,-276,-276,-390,-501,-389,-276,-276,-276,-239,-252,-237,-299,-323,599,-186,-61,-62,-164,-456,-259,-455,-266,-276,-276,-276,-416,-395,-300,-276,-279,-184,-276,-276,-276,-294,-396,-261,-276,-92,-93,-280,-185,-457,-276,-276,-276,-276,-276,861,-275,-94,-91,-262,-391,-276,-276,-270,-287,-401,-276,-276,-413,-411,-276,-412,]),'SEPARATE':([0,2,3,5,6,7,8,10,11,14,15,17,20,21,22,23,26,28,34,39,40,41,42,44,46,47,48,52,114,115,118,119,155,164,166,185,193,200,262,265,269,360,405,407,414,422,479,495,496,497,499,502,504,565,674,677,678,836,842,901,],[-417,-8,-422,-419,33,-428,-423,-418,-422,-9,-435,-432,-434,-430,-8,-431,-436,-433,-424,33,-426,-428,-2,-302,-325,-421,-301,-324,-429,-427,-8,-425,-345,-458,-459,-303,345,-420,-347,-337,-344,-3,-338,-346,345,555,630,644,-440,-439,-441,-437,-438,-322,555,630,644,-331,-373,-356,]),'ABSTRACT':([32,49,93,193,274,399,414,476,],[91,-321,91,-321,91,529,-321,622,]),'STARSTAR':([35,120,123,125,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,157,207,213,219,220,226,227,246,349,352,353,367,368,369,370,371,372,373,374,375,376,377,382,388,391,506,507,515,649,717,724,744,755,844,],[-157,206,-182,-163,-231,-152,-230,-150,-153,-223,-149,-227,-226,-228,-229,-151,-180,-181,-216,-149,-182,-227,-235,-234,-225,206,-224,-217,-232,-183,-173,-174,-171,-162,-172,-179,-177,-178,-176,-175,-233,-227,-227,206,-186,-182,-164,-184,-157,-227,-227,-185,-157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([43,121,135,218,224,225,228,231,233,239,245,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[120,120,227,120,120,120,120,120,120,120,391,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'reverse_opt':([474,],[604,]),'variant':([936,942,],[940,946,]),'private_type':([399,476,],[524,613,]),'fixed_type':([476,],[625,]),'timed_entry_call':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,]),'multiplying':([120,227,391,],[203,203,203,]),'comp_loc_s':([550,],[680,]),'basic_loop':([470,],[600,]),'rename_unit':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[26,71,26,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'iter_discrete_range_s':([633,],[745,]),'prot_op_body':([553,],[684,]),'rep_spec_s':([481,817,],[632,870,]),'enumeration_type':([476,],[619,]),'address_spec':([32,93,101,174,267,271,279,412,424,472,479,495,500,632,693,829,870,924,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'task_spec':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'param':([29,151,392,596,775,840,],[62,248,516,248,248,248,]),'subunit_body':([348,],[502,]),'type_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'prot_def':([181,423,],[286,556,]),'aggregate':([43,121,132,135,149,203,218,224,225,228,230,231,233,239,245,282,301,306,321,326,351,354,355,356,357,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'decl_item':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[82,82,82,272,272,410,82,272,82,82,82,82,82,82,]),'object_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'init_opt':([403,486,756,885,],[541,639,830,909,]),'task_private_opt':([632,],[741,]),'decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'record_type':([476,],[626,]),'stmts_opt':([444,447,448,786,789,],[577,580,581,850,852,]),'id_opt':([287,600,688,692,698,719,815,818,944,],[426,721,774,777,785,799,869,871,949,]),'unary':([43,121,218,224,225,228,231,233,239,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'pkg_body':([6,32,39,93,101,279,348,472,479,495,500,829,924,],[23,88,23,88,88,88,497,88,88,88,88,88,88,]),'limited_opt':([525,615,],[656,731,]),'range_spec_opt':([732,863,],[812,892,]),'body':([32,93,101,279,472,479,495,500,829,924,],[89,89,89,89,89,89,89,89,89,89,]),'enum_id_s':([609,],[728,]),'or_select':([443,],[576,]),'accept_hdr':([184,305,312,316,436,438,444,447,448,571,574,578,599,697,699,702,703,704,720,786,789,790,792,795,857,858,890,891,913,],[303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,]),'delay_stmt':([184,305,312,316,436,438,444,447,448,571,574,578,599,697,699,701,702,703,704,720,786,789,790,792,795,857,858,890,891,913,],[295,444,295,295,295,295,295,295,295,295,295,295,295,295,786,789,295,786,295,295,295,295,295,295,295,295,295,295,295,295,]),'entry_call':([305,],[447,]),'qualified':([43,121,127,132,135,149,184,203,218,224,225,228,231,233,239,245,282,301,306,312,316,321,326,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,540,571,573,574,578,586,596,599,604,612,616,618,633,635,681,697,702,704,713,720,765,775,786,789,790,792,795,806,821,822,837,857,858,882,883,890,891,905,913,938,941,],[141,141,219,141,141,141,304,141,141,141,141,141,141,141,141,141,141,141,141,304,304,141,141,141,141,141,141,141,141,304,304,304,304,304,141,141,141,141,141,141,141,304,141,304,304,141,141,304,141,141,141,141,141,141,141,304,304,304,141,304,141,141,304,304,304,304,304,141,141,141,141,304,304,141,141,304,304,141,304,141,141,]),'mark':([73,257,653,680,],[178,403,756,768,]),'variant_part_opt':([897,],[919,]),'subprog_body':([6,32,39,93,101,279,348,472,479,495,500,553,829,924,],[28,110,28,110,110,110,504,110,110,110,110,687,110,110,]),'generic_discrim_part_opt':([158,],[253,]),'pkg_spec':([6,29,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[27,59,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'range':([121,231,239,351,354,356,514,604,633,713,765,775,821,822,882,905,941,],[211,211,390,211,211,512,211,723,723,211,211,723,512,723,723,920,211,]),'subprog_spec_is_push':([6,32,39,93,101,174,267,271,279,348,412,472,479,495,500,553,829,924,],[32,93,32,93,93,274,274,274,93,500,274,93,93,93,93,500,93,93,]),'membership':([146,215,383,],[239,239,239,]),'context_spec':([3,],[11,]),'index':([633,820,],[746,873,]),'generic_type_def':([399,],[535,]),'entry_decl_s':([339,740,],[481,817,]),'cond_clause_s':([301,],[437,]),'attribute_id':([230,250,281,357,],[376,376,418,376,]),'assign_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,]),'generic_formal':([29,],[53,]),'use_clause':([29,32,34,93,101,119,174,267,271,279,412,472,479,495,500,829,924,],[54,94,114,94,94,114,94,94,94,94,94,94,94,94,94,94,94,]),'private_part':([273,],[411,]),'discrete_range':([604,633,775,822,882,],[725,742,843,876,906,]),'decl_item_or_body':([32,93,101,279,472,479,495,500,829,924,],[96,96,191,96,96,96,96,96,96,96,]),'range_spec':([476,730,732,863,],[614,807,811,811,]),'return_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,]),'enum_id':([609,804,],[729,862,]),'operator_symbol':([43,51,60,121,127,132,135,149,154,167,184,203,218,224,225,228,229,231,233,239,245,264,268,282,291,296,301,305,306,307,311,312,316,321,326,341,346,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,571,573,574,578,586,588,596,599,604,612,616,618,620,633,635,659,661,663,681,697,702,704,713,720,735,765,775,786,789,790,792,793,794,795,806,820,821,822,825,837,857,858,882,883,890,891,905,913,938,941,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,367,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'alternative_s':([462,],[593,]),'subprog_decl':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[17,97,17,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'float_type':([476,],[608,]),'compilation':([0,],[3,]),'handled_stmt_s':([184,438,],[314,575,]),'name_s':([60,167,307,],[168,263,452,]),'procedure_call':([184,305,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[317,442,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,]),'private_opt':([3,11,],[6,39,]),'unlabeled':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,]),'exception_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'generic_derived_type':([399,],[531,]),'array_type':([341,399,476,],[485,532,623,]),'comp_assoc':([121,231,351,514,765,],[209,381,381,381,381,]),'pragma_s':([2,22,118,325,339,422,631,684,739,740,809,828,893,897,915,930,931,950,],[5,47,200,462,480,554,738,771,816,480,864,554,914,918,928,936,937,953,]),'block_body':([90,416,469,629,935,],[183,548,598,736,939,]),'task_def':([190,478,],[340,628,]),'record_type_spec':([32,93,101,174,267,271,279,412,424,472,479,495,500,632,693,829,870,924,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'designator':([30,160,287,600,688,692,698,719,815,818,944,],[67,255,425,425,425,425,425,425,425,425,425,]),'generic_inst':([49,174,193,414,],[153,276,153,153,]),'discrim_spec_s':([251,334,],[394,394,]),'access_type':([399,476,],[522,610,]),'entry_body_part':([907,943,],[923,948,]),'constraint':([483,],[636,]),'primary':([43,121,132,135,149,203,218,224,225,228,231,233,239,245,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[136,136,226,136,246,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'attrib_def':([32,93,101,174,267,271,279,412,424,472,479,495,500,632,693,829,870,924,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'abort_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,]),'except_handler_part_opt':([316,],[456,]),'range_constraint':([213,382,476,483,724,730,732,744,748,863,],[358,358,617,637,802,617,617,802,802,617,]),'except_choice_s':([588,793,],[711,855,]),'record_def':([731,813,868,],[808,867,899,]),'comp_unit':([3,],[10,]),'formal_part_opt':([45,67,254,255,467,690,772,884,921,],[152,172,400,401,597,776,841,908,934,]),'unconstr_array_type':([341,399,476,],[484,484,484,]),'prot_body':([32,93,101,279,348,472,479,495,500,829,924,],[107,107,107,107,499,107,107,107,107,107,107,]),'null_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,]),'mode':([162,],[257,]),'param_s':([151,596,775,840,],[247,247,247,247,]),'aliased_opt':([747,846,872,],[825,825,825,]),'cond_clause':([301,573,],[435,696,]),'cond_part':([301,573,],[436,436,]),'rep_spec':([32,93,101,174,267,271,279,412,424,472,479,495,500,632,693,829,870,924,],[109,109,109,109,109,109,109,109,561,109,109,109,109,739,561,109,739,109,]),'except_choice':([588,793,794,],[708,708,856,]),'label_opt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,]),'case_hdr':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,]),'generic_formal_part':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'discrim_part':([158,186,284,337,],[252,335,335,335,]),'iter_part':([332,840,],[474,882,]),'constr_array_type':([341,399,476,],[488,488,488,]),'index_s':([633,],[743,]),'real_type':([476,],[607,]),'if_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,]),'type_def':([476,],[624,]),'alternative':([593,],[714,]),'else_opt':([437,576,],[572,700,]),'select_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,]),'formal_part':([45,67,254,255,467,690,772,884,921,],[150,150,150,150,150,150,150,150,150,]),'select_alt':([305,699,703,],[441,441,791,]),'range_constr_opt':([724,744,748,],[803,803,827,]),'generic_subp_inst':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'prot_spec':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'use_clause_opt':([7,41,],[34,119,]),'used_char':([229,],[371,]),'literal':([43,121,132,135,149,203,218,224,225,228,231,233,239,245,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'expression':([43,121,218,228,231,282,301,306,321,326,351,354,355,421,449,460,466,471,491,514,540,573,586,596,612,616,618,635,681,713,765,806,837,883,938,941,],[128,208,128,366,379,419,433,451,461,464,379,509,511,552,433,591,595,433,642,379,673,433,433,718,730,732,733,748,770,509,379,863,880,433,433,509,]),'parenthesized_primary':([43,121,132,135,149,203,218,224,225,228,230,231,233,239,245,282,301,306,321,326,351,354,355,356,357,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[131,131,131,131,131,131,131,131,131,131,377,131,131,131,131,131,131,131,131,131,131,131,131,131,377,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'decl_item_s1':([174,267,412,],[271,271,271,]),'number_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'generic_pkg_inst':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'comp_decl_s':([864,953,],[897,897,]),'pragma':([0,5,11,32,47,93,101,174,200,267,271,279,412,424,462,472,479,480,495,500,554,693,738,771,816,829,864,914,918,924,928,936,937,953,],[2,14,40,78,14,78,78,78,14,78,78,78,78,558,14,78,78,14,78,78,14,558,14,14,14,78,14,14,14,78,14,14,14,14,]),'comp_list':([864,953,],[895,955,]),'access_opt':([520,],[653,]),'pkg_decl':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[21,79,21,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'object_subtype_def':([341,],[486,]),'guarded_select_alt':([305,699,],[443,787,]),'align_opt':([420,],[550,]),'task_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'attribute':([43,51,60,121,127,132,135,149,154,167,184,203,218,224,225,228,231,233,239,245,264,268,282,291,296,301,305,306,307,311,312,316,321,326,341,346,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,571,573,574,578,586,588,596,599,604,612,616,618,620,633,635,659,661,663,681,697,702,704,713,720,735,765,775,786,789,790,792,793,794,795,806,820,821,822,825,837,857,858,882,883,890,891,905,913,938,941,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'task_body':([32,93,101,279,348,472,479,495,500,829,924,],[83,83,83,83,496,83,83,83,83,83,83,]),'entry_decl':([424,481,693,817,],[564,631,564,631,]),'loop_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,]),'type_completion':([336,],[477,]),'goal_symbol':([0,],[1,]),'generic_decl':([6,32,39,93,101,174,267,271,279,412,472,479,495,500,829,924,],[15,86,15,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'choice_s':([121,231,351,514,713,765,941,],[212,212,212,212,796,212,945,]),'integer_type':([476,],[621,]),'variant_part':([864,918,953,],[893,931,893,]),'decl_item_s':([174,267,412,],[273,273,544,]),'logical':([128,208,366,379,419,433,451,461,464,509,511,552,591,595,642,673,718,730,732,733,748,770,863,880,],[225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'tagged_opt':([399,476,],[525,615,]),'block_decl':([332,],[469,]),'raise_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,]),'subtype_ind':([341,346,528,534,620,659,661,663,735,825,],[487,494,660,666,734,760,761,762,814,877,]),'simple_name':([4,9,18,30,31,43,51,55,60,65,70,73,100,112,113,116,117,121,127,132,135,149,154,159,160,161,167,179,180,184,188,189,196,203,218,224,225,228,229,231,233,239,245,257,264,268,275,278,280,282,287,291,296,301,305,306,307,311,312,316,321,326,330,341,346,351,354,355,356,359,409,413,415,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,543,571,573,574,578,586,588,596,599,600,604,612,616,618,620,633,635,645,647,653,659,661,663,679,680,681,688,692,697,698,702,704,713,719,720,735,765,775,786,789,790,792,793,794,795,806,815,818,820,821,822,825,837,857,858,882,883,890,891,896,905,913,938,941,944,],[13,36,36,36,36,137,157,158,157,36,36,177,190,36,36,36,199,157,157,157,157,157,157,254,36,256,157,283,284,157,337,338,36,157,137,157,157,157,369,157,157,157,157,177,157,157,190,36,417,157,36,157,157,157,157,157,157,157,157,157,157,157,468,157,157,157,157,157,157,157,542,545,36,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,36,157,157,157,157,157,157,157,157,36,157,157,157,157,157,157,157,753,754,177,157,157,157,36,177,157,36,36,157,36,157,157,157,36,157,157,157,157,157,157,157,157,157,157,157,157,36,36,157,157,157,157,157,157,157,157,157,157,157,917,157,157,157,157,36,]),'c_id_opt':([543,679,],[675,767,]),'derived_type':([476,],[611,]),'c_name_list':([9,],[37,]),'short_circuit':([128,208,366,379,419,433,451,461,464,509,511,552,591,595,642,673,718,730,732,733,748,770,863,880,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'decl_part':([32,93,279,472,479,495,500,829,924,],[90,90,416,602,629,416,90,629,935,]),'renames':([25,58,69,108,171,195,277,342,487,],[50,165,173,50,266,173,50,490,640,]),'prot_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'decimal_digits_constraint':([483,],[638,]),'simple_expression':([43,121,218,224,225,228,231,233,239,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[146,215,146,146,146,146,383,386,389,146,146,146,146,146,383,383,146,389,513,146,146,146,146,146,146,383,146,146,146,146,389,146,146,146,389,146,146,383,383,389,146,389,389,146,389,146,389,146,383,]),'delay_or_entry_alt':([305,],[450,]),'subprog_spec':([6,29,32,39,93,101,174,267,271,279,348,412,424,472,479,495,500,553,693,829,924,],[25,58,108,25,108,108,277,277,277,108,501,277,559,108,108,108,108,686,559,108,108,]),'factor':([43,121,135,203,218,224,225,228,231,233,239,245,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[145,145,145,349,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'choice':([121,231,351,354,514,713,765,941,],[214,214,214,510,214,214,214,214,]),'prot_elem_decl':([693,],[778,]),'async_select':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,]),'entry_name':([330,],[467,]),'case_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,]),'relational':([146,215,383,],[233,233,233,]),'pragma_arg_s':([43,],[122,]),'prot_elem_decl_s':([562,],[693,]),'label':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,]),'pragma_arg':([43,218,],[124,361,]),'statement_s':([184,436,438,444,447,448,574,599,702,704,786,789,795,858,890,],[316,571,316,578,578,578,697,720,790,792,578,578,857,891,913,]),'adding':([146,215,383,386,389,513,],[245,245,245,245,245,245,]),'block':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,]),'body_stub':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'body_opt':([416,],[547,]),'select_wait':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,]),'subunit':([6,39,],[20,20,]),'with_clause':([3,11,],[7,41,]),'relation':([43,121,218,224,225,228,231,282,301,306,321,326,351,354,355,421,449,460,466,471,491,514,540,573,586,596,612,616,618,635,681,713,765,806,837,883,938,941,],[147,147,147,364,365,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'prot_op_body_s':([422,828,],[553,553,]),'exception_handler':([457,458,],[589,590,]),'def_id':([29,32,93,101,151,163,174,251,267,271,279,334,392,412,472,479,495,500,517,596,693,775,829,840,864,918,924,953,],[61,61,61,61,61,261,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'prot_op_decl':([424,693,],[563,779,]),'compound_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,]),'requeue_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,]),'decl_item_or_body_s1':([32,93,279,472,479,495,500,829,924,],[101,101,101,101,101,101,101,101,101,]),'cond_entry_call':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,]),'indexed_comp':([43,51,60,121,127,132,135,149,154,167,184,203,218,224,225,228,231,233,239,245,264,268,282,291,296,301,305,306,307,311,312,316,321,326,341,346,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,571,573,574,578,586,588,596,599,604,612,616,618,620,633,635,659,661,663,681,697,702,704,713,720,735,765,775,786,789,790,792,793,794,795,806,820,821,822,825,837,857,858,882,883,890,891,905,913,938,941,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'unit':([6,39,],[22,118,]),'iteration':([332,],[470,]),'entry_body':([553,],[683,]),'object_qualifier_opt':([192,],[341,]),'subtype_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'except_handler_part':([316,],[458,]),'compound_name':([9,18,30,31,65,70,112,113,116,160,196,278,287,415,543,600,679,688,692,698,719,815,818,944,],[38,45,68,69,171,175,195,197,198,68,347,195,68,546,676,68,676,68,68,68,68,68,68,68,]),'code_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,]),'accept_stmt':([184,305,312,316,436,438,444,447,448,571,574,578,599,697,699,702,703,704,720,786,789,790,792,795,857,858,890,891,913,],[318,448,318,318,318,318,318,318,318,318,318,318,318,318,448,318,448,318,318,318,318,318,318,318,318,318,318,318,318,]),'statement':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[324,454,459,324,324,324,324,324,459,324,459,324,459,324,324,459,324,324,459,459,324,459,324,324,459,459,]),'def_id_s':([29,32,93,101,151,174,251,267,271,279,334,392,412,472,479,495,500,517,596,693,775,829,840,864,918,924,953,],[57,106,106,106,57,106,397,106,106,106,397,57,106,106,106,106,106,397,57,780,57,106,57,780,780,106,780,]),'when_opt':([453,],[587,]),'name':([43,51,60,121,127,132,135,149,154,167,184,203,218,224,225,228,231,233,239,245,264,268,282,291,296,301,305,306,307,311,312,316,321,326,341,346,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,571,573,574,578,586,588,596,599,604,612,616,618,620,633,635,659,661,663,681,697,702,704,713,720,735,765,775,786,789,790,792,793,794,795,806,820,821,822,825,837,857,858,882,883,890,891,905,913,938,941,],[138,156,169,213,220,138,138,138,249,169,327,138,138,138,138,138,382,138,388,138,406,408,138,427,431,138,446,138,169,431,327,327,138,138,483,483,382,382,138,138,138,138,327,327,327,327,327,138,138,138,138,138,382,483,483,669,671,672,138,327,138,327,327,138,707,138,327,724,138,138,138,483,744,138,483,483,483,138,327,327,327,382,327,483,382,724,327,327,327,327,707,707,327,138,874,138,724,483,138,327,327,724,138,327,327,138,327,138,382,]),'value_s':([231,351,765,],[380,508,380,]),'condition':([301,449,471,573,586,883,938,],[434,582,601,434,705,907,943,]),'variant_s':([936,],[942,]),'selected_comp':([43,51,60,121,127,132,135,149,154,167,184,203,218,224,225,228,231,233,239,245,264,268,282,291,296,301,305,306,307,311,312,316,321,326,341,346,351,354,355,356,359,421,436,438,444,447,448,449,460,466,471,491,514,528,534,536,538,539,540,571,573,574,578,586,588,596,599,604,612,616,618,620,633,635,659,661,663,681,697,702,704,713,720,735,765,775,786,789,790,792,793,794,795,806,820,821,822,825,837,857,858,882,883,890,891,905,913,938,941,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'prot_op_decl_s':([285,],[424,]),'simple_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,]),'discrim_part_opt':([186,284,337,],[336,423,478,]),'iter_index_constraint':([482,],[634,]),'prot_private_opt':([424,],[560,]),'comp_decl':([693,864,918,953,],[781,898,932,898,]),'subp_default':([400,671,],[537,764,]),'allocator':([43,121,132,135,149,203,218,224,225,228,231,233,239,245,282,301,306,321,326,351,354,355,356,359,421,449,460,466,471,491,514,540,573,586,596,604,612,616,618,633,635,681,713,765,775,806,821,822,837,882,883,905,938,941,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'discrim_spec':([251,334,517,],[396,396,651,]),'component_subtype_def':([747,846,872,],[824,885,902,]),'exit_stmt':([184,312,316,436,438,444,447,448,571,574,578,599,697,702,704,720,786,789,790,792,795,857,858,890,891,913,],[333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,]),'name_opt':([296,311,],[430,453,]),'rename_decl':([32,93,101,174,267,271,279,412,472,479,495,500,829,924,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'value':([231,351,514,765,],[384,384,650,384,]),'discrete_with_range':([121,231,351,354,514,713,765,941,],[216,385,385,216,385,216,385,216,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal_symbol","S'",1,None,None,None),
  ('goal_symbol -> compilation','goal_symbol',1,'p_goal_symbol','grammar.py',31),
  ('pragma -> PRAGMA IDENTIFIER ;','pragma',3,'p_pragma','grammar.py',38),
  ('pragma -> PRAGMA simple_name ( pragma_arg_s ) ;','pragma',6,'p_pragma','grammar.py',39),
  ('pragma_arg_s -> pragma_arg','pragma_arg_s',1,'p_pragma_arg_s','grammar.py',48),
  ('pragma_arg_s -> pragma_arg_s , pragma_arg','pragma_arg_s',3,'p_pragma_arg_s','grammar.py',49),
  ('pragma_arg -> expression','pragma_arg',1,'p_pragma_arg','grammar.py',58),
  ('pragma_arg -> simple_name ARROW expression','pragma_arg',3,'p_pragma_arg','grammar.py',59),
  ('pragma_s -> <empty>','pragma_s',0,'p_pragma_s','grammar.py',68),
  ('pragma_s -> pragma_s pragma','pragma_s',2,'p_pragma_s','grammar.py',69),
  ('decl -> object_decl','decl',1,'p_decl','grammar.py',77),
  ('decl -> number_decl','decl',1,'p_decl','grammar.py',78),
  ('decl -> type_decl','decl',1,'p_decl','grammar.py',79),
  ('decl -> subtype_decl','decl',1,'p_decl','grammar.py',80),
  ('decl -> subprog_decl','decl',1,'p_decl','grammar.py',81),
  ('decl -> pkg_decl','decl',1,'p_decl','grammar.py',82),
  ('decl -> task_decl','decl',1,'p_decl','grammar.py',83),
  ('decl -> prot_decl','decl',1,'p_decl','grammar.py',84),
  ('decl -> exception_decl','decl',1,'p_decl','grammar.py',85),
  ('decl -> rename_decl','decl',1,'p_decl','grammar.py',86),
  ('decl -> generic_decl','decl',1,'p_decl','grammar.py',87),
  ('decl -> body_stub','decl',1,'p_decl','grammar.py',88),
  ('decl -> error ;','decl',2,'p_decl','grammar.py',89),
  ('object_decl -> def_id_s : object_qualifier_opt object_subtype_def init_opt ;','object_decl',6,'p_object_decl','grammar.py',95),
  ('def_id_s -> def_id','def_id_s',1,'p_def_id_s','grammar.py',101),
  ('def_id_s -> def_id_s , def_id','def_id_s',3,'p_def_id_s','grammar.py',102),
  ('def_id -> IDENTIFIER','def_id',1,'p_def_id','grammar.py',112),
  ('object_qualifier_opt -> <empty>','object_qualifier_opt',0,'p_object_qualifier_opt','grammar.py',117),
  ('object_qualifier_opt -> ALIASED','object_qualifier_opt',1,'p_object_qualifier_opt','grammar.py',118),
  ('object_qualifier_opt -> CONSTANT','object_qualifier_opt',1,'p_object_qualifier_opt','grammar.py',119),
  ('object_qualifier_opt -> ALIASED CONSTANT','object_qualifier_opt',2,'p_object_qualifier_opt','grammar.py',120),
  ('object_subtype_def -> subtype_ind','object_subtype_def',1,'p_object_subtype_def','grammar.py',128),
  ('object_subtype_def -> array_type','object_subtype_def',1,'p_object_subtype_def','grammar.py',129),
  ('init_opt -> <empty>','init_opt',0,'p_init_opt','grammar.py',135),
  ('init_opt -> ASSIGN expression','init_opt',2,'p_init_opt','grammar.py',136),
  ('number_decl -> def_id_s : CONSTANT ASSIGN expression ;','number_decl',6,'p_number_decl','grammar.py',144),
  ('type_decl -> TYPE IDENTIFIER discrim_part_opt type_completion ;','type_decl',5,'p_type_decl','grammar.py',149),
  ('discrim_part_opt -> <empty>','discrim_part_opt',0,'p_discrim_part_opt','grammar.py',155),
  ('discrim_part_opt -> discrim_part','discrim_part_opt',1,'p_discrim_part_opt','grammar.py',156),
  ('discrim_part_opt -> ( BOX )','discrim_part_opt',3,'p_discrim_part_opt','grammar.py',157),
  ('type_completion -> <empty>','type_completion',0,'p_type_completion','grammar.py',168),
  ('type_completion -> IS type_def','type_completion',2,'p_type_completion','grammar.py',169),
  ('type_def -> enumeration_type','type_def',1,'p_type_def','grammar.py',177),
  ('type_def -> integer_type','type_def',1,'p_type_def','grammar.py',178),
  ('type_def -> real_type','type_def',1,'p_type_def','grammar.py',179),
  ('type_def -> array_type','type_def',1,'p_type_def','grammar.py',180),
  ('type_def -> record_type','type_def',1,'p_type_def','grammar.py',181),
  ('type_def -> access_type','type_def',1,'p_type_def','grammar.py',182),
  ('type_def -> derived_type','type_def',1,'p_type_def','grammar.py',183),
  ('type_def -> private_type','type_def',1,'p_type_def','grammar.py',184),
  ('subtype_decl -> SUBTYPE IDENTIFIER IS subtype_ind ;','subtype_decl',5,'p_subtype_decl','grammar.py',190),
  ('subtype_ind -> name constraint','subtype_ind',2,'p_subtype_ind','grammar.py',195),
  ('subtype_ind -> name','subtype_ind',1,'p_subtype_ind','grammar.py',196),
  ('constraint -> range_constraint','constraint',1,'p_constraint','grammar.py',205),
  ('constraint -> decimal_digits_constraint','constraint',1,'p_constraint','grammar.py',206),
  ('decimal_digits_constraint -> DIGITS expression range_constr_opt','decimal_digits_constraint',3,'p_decimal_digits_constraint','grammar.py',213),
  ('derived_type -> NEW subtype_ind','derived_type',2,'p_derived_type','grammar.py',218),
  ('derived_type -> NEW subtype_ind WITH PRIVATE','derived_type',4,'p_derived_type','grammar.py',219),
  ('derived_type -> NEW subtype_ind WITH record_def','derived_type',4,'p_derived_type','grammar.py',220),
  ('derived_type -> ABSTRACT NEW subtype_ind WITH PRIVATE','derived_type',5,'p_derived_type','grammar.py',221),
  ('derived_type -> ABSTRACT NEW subtype_ind WITH record_def','derived_type',5,'p_derived_type','grammar.py',222),
  ('range_constraint -> RANGE range','range_constraint',2,'p_range_constraint','grammar.py',232),
  ('range -> simple_expression DOTDOT simple_expression','range',3,'p_range','grammar.py',238),
  ('enumeration_type -> ( enum_id_s )','enumeration_type',3,'p_enumeration_type','grammar.py',243),
  ('enum_id_s -> enum_id','enum_id_s',1,'p_enum_id_s','grammar.py',248),
  ('enum_id_s -> enum_id_s , enum_id','enum_id_s',3,'p_enum_id_s','grammar.py',249),
  ('enum_id -> IDENTIFIER','enum_id',1,'p_enum_id','grammar.py',257),
  ('enum_id -> CHAR','enum_id',1,'p_enum_id','grammar.py',258),
  ('integer_type -> range_spec','integer_type',1,'p_integer_type','grammar.py',263),
  ('integer_type -> MOD expression','integer_type',2,'p_integer_type','grammar.py',264),
  ('range_spec -> range_constraint','range_spec',1,'p_range_spec','grammar.py',272),
  ('range_spec_opt -> <empty>','range_spec_opt',0,'p_range_spec_opt','grammar.py',277),
  ('range_spec_opt -> range_spec','range_spec_opt',1,'p_range_spec_opt','grammar.py',278),
  ('real_type -> float_type','real_type',1,'p_real_type','grammar.py',286),
  ('real_type -> fixed_type','real_type',1,'p_real_type','grammar.py',287),
  ('float_type -> DIGITS expression range_spec_opt','float_type',3,'p_float_type','grammar.py',292),
  ('fixed_type -> DELTA expression range_spec','fixed_type',3,'p_fixed_type','grammar.py',297),
  ('fixed_type -> DELTA expression DIGITS expression range_spec_opt','fixed_type',5,'p_fixed_type','grammar.py',298),
  ('array_type -> unconstr_array_type','array_type',1,'p_array_type','grammar.py',306),
  ('array_type -> constr_array_type','array_type',1,'p_array_type','grammar.py',307),
  ('unconstr_array_type -> ARRAY ( index_s ) OF component_subtype_def','unconstr_array_type',6,'p_unconstr_array_type','grammar.py',313),
  ('constr_array_type -> ARRAY iter_index_constraint OF component_subtype_def','constr_array_type',4,'p_constr_array_type','grammar.py',318),
  ('component_subtype_def -> aliased_opt subtype_ind','component_subtype_def',2,'p_component_subtype_def','grammar.py',323),
  ('aliased_opt -> <empty>','aliased_opt',0,'p_aliased_opt','grammar.py',328),
  ('aliased_opt -> ALIASED','aliased_opt',1,'p_aliased_opt','grammar.py',329),
  ('index_s -> index','index_s',1,'p_index_s','grammar.py',337),
  ('index_s -> index_s , index','index_s',3,'p_index_s','grammar.py',338),
  ('index -> name RANGE BOX','index',3,'p_index','grammar.py',347),
  ('iter_index_constraint -> ( iter_discrete_range_s )','iter_index_constraint',3,'p_iter_index_constraint','grammar.py',352),
  ('iter_discrete_range_s -> discrete_range','iter_discrete_range_s',1,'p_iter_discrete_range_s','grammar.py',358),
  ('iter_discrete_range_s -> iter_discrete_range_s , discrete_range','iter_discrete_range_s',3,'p_iter_discrete_range_s','grammar.py',359),
  ('discrete_range -> name range_constr_opt','discrete_range',2,'p_discrete_range','grammar.py',368),
  ('discrete_range -> range','discrete_range',1,'p_discrete_range','grammar.py',369),
  ('range_constr_opt -> <empty>','range_constr_opt',0,'p_range_constr_opt','grammar.py',378),
  ('range_constr_opt -> range_constraint','range_constr_opt',1,'p_range_constr_opt','grammar.py',379),
  ('record_type -> tagged_opt limited_opt record_def','record_type',3,'p_record_type','grammar.py',388),
  ('record_def -> RECORD pragma_s comp_list END RECORD','record_def',5,'p_record_def','grammar.py',393),
  ('record_def -> NuLL RECORD','record_def',2,'p_record_def','grammar.py',394),
  ('tagged_opt -> <empty>','tagged_opt',0,'p_tagged_opt','grammar.py',403),
  ('tagged_opt -> TAGGED','tagged_opt',1,'p_tagged_opt','grammar.py',404),
  ('tagged_opt -> ABSTRACT TAGGED','tagged_opt',2,'p_tagged_opt','grammar.py',405),
  ('comp_list -> comp_decl_s variant_part_opt','comp_list',2,'p_comp_list','grammar.py',413),
  ('comp_list -> variant_part pragma_s','comp_list',2,'p_comp_list','grammar.py',414),
  ('comp_list -> NuLL ; pragma_s','comp_list',3,'p_comp_list','grammar.py',415),
  ('comp_decl_s -> comp_decl','comp_decl_s',1,'p_comp_decl_s','grammar.py',423),
  ('comp_decl_s -> comp_decl_s pragma_s comp_decl','comp_decl_s',3,'p_comp_decl_s','grammar.py',424),
  ('variant_part_opt -> pragma_s','variant_part_opt',1,'p_variant_part_opt','grammar.py',433),
  ('variant_part_opt -> pragma_s variant_part pragma_s','variant_part_opt',3,'p_variant_part_opt','grammar.py',434),
  ('comp_decl -> def_id_s : component_subtype_def init_opt ;','comp_decl',5,'p_comp_decl','grammar.py',443),
  ('comp_decl -> error ;','comp_decl',2,'p_comp_decl','grammar.py',444),
  ('discrim_part -> ( discrim_spec_s )','discrim_part',3,'p_discrim_part','grammar.py',452),
  ('discrim_spec_s -> discrim_spec','discrim_spec_s',1,'p_discrim_spec_s','grammar.py',457),
  ('discrim_spec_s -> discrim_spec_s ; discrim_spec','discrim_spec_s',3,'p_discrim_spec_s','grammar.py',458),
  ('discrim_spec -> def_id_s : access_opt mark init_opt','discrim_spec',5,'p_discrim_spec','grammar.py',463),
  ('discrim_spec -> error','discrim_spec',1,'p_discrim_spec','grammar.py',464),
  ('access_opt -> <empty>','access_opt',0,'p_access_opt','grammar.py',469),
  ('access_opt -> ACCESS','access_opt',1,'p_access_opt','grammar.py',470),
  ('variant_part -> CASE simple_name IS pragma_s variant_s END CASE ;','variant_part',8,'p_variant_part','grammar.py',478),
  ('variant_s -> variant','variant_s',1,'p_variant_s','grammar.py',483),
  ('variant_s -> variant_s variant','variant_s',2,'p_variant_s','grammar.py',484),
  ('variant -> WHEN choice_s ARROW pragma_s comp_list','variant',5,'p_variant','grammar.py',492),
  ('choice_s -> choice','choice_s',1,'p_choice_s','grammar.py',497),
  ('choice_s -> choice_s | choice','choice_s',3,'p_choice_s','grammar.py',498),
  ('choice -> expression','choice',1,'p_choice','grammar.py',507),
  ('choice -> discrete_with_range','choice',1,'p_choice','grammar.py',508),
  ('choice -> OTHERS','choice',1,'p_choice','grammar.py',509),
  ('discrete_with_range -> name range_constraint','discrete_with_range',2,'p_discrete_with_range','grammar.py',518),
  ('discrete_with_range -> range','discrete_with_range',1,'p_discrete_with_range','grammar.py',519),
  ('access_type -> ACCESS subtype_ind','access_type',2,'p_access_type','grammar.py',528),
  ('access_type -> ACCESS CONSTANT subtype_ind','access_type',3,'p_access_type','grammar.py',529),
  ('access_type -> ACCESS ALL subtype_ind','access_type',3,'p_access_type','grammar.py',530),
  ('decl_part -> <empty>','decl_part',0,'p_decl_part','grammar.py',541),
  ('decl_part -> decl_item_or_body_s1','decl_part',1,'p_decl_part','grammar.py',542),
  ('decl_item_s -> <empty>','decl_item_s',0,'p_decl_item_s','grammar.py',551),
  ('decl_item_s -> decl_item_s1','decl_item_s',1,'p_decl_item_s','grammar.py',552),
  ('decl_item_s1 -> decl_item','decl_item_s1',1,'p_decl_item_s1','grammar.py',560),
  ('decl_item_s1 -> decl_item_s1 decl_item','decl_item_s1',2,'p_decl_item_s1','grammar.py',561),
  ('decl_item -> decl','decl_item',1,'p_decl_item','grammar.py',569),
  ('decl_item -> use_clause','decl_item',1,'p_decl_item','grammar.py',570),
  ('decl_item -> rep_spec','decl_item',1,'p_decl_item','grammar.py',571),
  ('decl_item -> pragma','decl_item',1,'p_decl_item','grammar.py',572),
  ('decl_item_or_body_s1 -> decl_item_or_body','decl_item_or_body_s1',1,'p_decl_item_or_body_s1','grammar.py',578),
  ('decl_item_or_body_s1 -> decl_item_or_body_s1 decl_item_or_body','decl_item_or_body_s1',2,'p_decl_item_or_body_s1','grammar.py',579),
  ('decl_item_or_body -> body','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',588),
  ('decl_item_or_body -> decl_item','decl_item_or_body',1,'p_decl_item_or_body','grammar.py',589),
  ('body -> subprog_body','body',1,'p_body','grammar.py',595),
  ('body -> pkg_body','body',1,'p_body','grammar.py',596),
  ('body -> task_body','body',1,'p_body','grammar.py',597),
  ('body -> prot_body','body',1,'p_body','grammar.py',598),
  ('name -> simple_name','name',1,'p_name','grammar.py',604),
  ('name -> indexed_comp','name',1,'p_name','grammar.py',605),
  ('name -> selected_comp','name',1,'p_name','grammar.py',606),
  ('name -> attribute','name',1,'p_name','grammar.py',607),
  ('name -> operator_symbol','name',1,'p_name','grammar.py',608),
  ('mark -> simple_name','mark',1,'p_mark','grammar.py',614),
  ('mark -> mark TICK attribute_id','mark',3,'p_mark','grammar.py',615),
  ('mark -> mark . simple_name','mark',3,'p_mark','grammar.py',616),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','grammar.py',625),
  ('compound_name -> simple_name','compound_name',1,'p_compound_name','grammar.py',630),
  ('compound_name -> compound_name . simple_name','compound_name',3,'p_compound_name','grammar.py',631),
  ('c_name_list -> compound_name','c_name_list',1,'p_c_name_list','grammar.py',640),
  ('c_name_list -> c_name_list , compound_name','c_name_list',3,'p_c_name_list','grammar.py',641),
  ('used_char -> CHAR','used_char',1,'p_used_char','grammar.py',650),
  ('operator_symbol -> STRING','operator_symbol',1,'p_operator_symbol','grammar.py',655),
  ('indexed_comp -> name ( value_s )','indexed_comp',4,'p_indexed_comp','grammar.py',660),
  ('value_s -> value','value_s',1,'p_value_s','grammar.py',667),
  ('value_s -> value_s , value','value_s',3,'p_value_s','grammar.py',668),
  ('value -> expression','value',1,'p_value','grammar.py',678),
  ('value -> comp_assoc','value',1,'p_value','grammar.py',679),
  ('value -> discrete_with_range','value',1,'p_value','grammar.py',680),
  ('value -> error','value',1,'p_value','grammar.py',681),
  ('selected_comp -> name . simple_name','selected_comp',3,'p_selected_comp','grammar.py',688),
  ('selected_comp -> name . used_char','selected_comp',3,'p_selected_comp','grammar.py',689),
  ('selected_comp -> name . operator_symbol','selected_comp',3,'p_selected_comp','grammar.py',690),
  ('selected_comp -> name . ALL','selected_comp',3,'p_selected_comp','grammar.py',691),
  ('attribute -> name TICK attribute_id','attribute',3,'p_attribute','grammar.py',697),
  ('attribute_id -> IDENTIFIER','attribute_id',1,'p_attribute_id','grammar.py',702),
  ('attribute_id -> DIGITS','attribute_id',1,'p_attribute_id','grammar.py',703),
  ('attribute_id -> DELTA','attribute_id',1,'p_attribute_id','grammar.py',704),
  ('attribute_id -> ACCESS','attribute_id',1,'p_attribute_id','grammar.py',705),
  ('literal -> INT','literal',1,'p_literal','grammar.py',710),
  ('literal -> FLOAT','literal',1,'p_literal','grammar.py',711),
  ('literal -> NuLL','literal',1,'p_literal','grammar.py',712),
  ('aggregate -> ( comp_assoc )','aggregate',3,'p_aggregate','grammar.py',717),
  ('aggregate -> ( expression WITH value_s )','aggregate',5,'p_aggregate','grammar.py',718),
  ('aggregate -> ( expression WITH NuLL RECORD )','aggregate',6,'p_aggregate','grammar.py',719),
  ('aggregate -> ( NuLL RECORD )','aggregate',4,'p_aggregate','grammar.py',720),
  ('comp_assoc -> choice_s ARROW expression','comp_assoc',3,'p_comp_assoc','grammar.py',726),
  ('expression -> relation','expression',1,'p_expression','grammar.py',731),
  ('expression -> expression logical relation','expression',3,'p_expression','grammar.py',732),
  ('expression -> expression short_circuit relation','expression',3,'p_expression','grammar.py',733),
  ('logical -> AND','logical',1,'p_logical','grammar.py',742),
  ('logical -> OR','logical',1,'p_logical','grammar.py',743),
  ('logical -> XOR','logical',1,'p_logical','grammar.py',744),
  ('short_circuit -> AND THEN','short_circuit',2,'p_short_circuit','grammar.py',749),
  ('short_circuit -> OR ELSE','short_circuit',2,'p_short_circuit','grammar.py',750),
  ('relation -> simple_expression','relation',1,'p_relation','grammar.py',755),
  ('relation -> simple_expression relational simple_expression','relation',3,'p_relation','grammar.py',756),
  ('relation -> simple_expression membership range','relation',3,'p_relation','grammar.py',757),
  ('relation -> simple_expression membership name','relation',3,'p_relation','grammar.py',758),
  ('relational -> =','relational',1,'p_relational','grammar.py',767),
  ('relational -> NEQ','relational',1,'p_relational','grammar.py',768),
  ('relational -> <','relational',1,'p_relational','grammar.py',769),
  ('relational -> LEQ','relational',1,'p_relational','grammar.py',770),
  ('relational -> >','relational',1,'p_relational','grammar.py',771),
  ('relational -> GEQ','relational',1,'p_relational','grammar.py',772),
  ('membership -> IN','membership',1,'p_membership','grammar.py',777),
  ('membership -> NOT IN','membership',2,'p_membership','grammar.py',778),
  ('simple_expression -> unary term','simple_expression',2,'p_simple_expression','grammar.py',783),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','grammar.py',784),
  ('simple_expression -> simple_expression adding term','simple_expression',3,'p_simple_expression','grammar.py',785),
  ('unary -> +','unary',1,'p_unary','grammar.py',796),
  ('unary -> -','unary',1,'p_unary','grammar.py',797),
  ('adding -> +','adding',1,'p_adding','grammar.py',802),
  ('adding -> -','adding',1,'p_adding','grammar.py',803),
  ('adding -> &','adding',1,'p_adding','grammar.py',804),
  ('term -> factor','term',1,'p_term','grammar.py',809),
  ('term -> term multiplying factor','term',3,'p_term','grammar.py',810),
  ('multiplying -> *','multiplying',1,'p_multiplying','grammar.py',819),
  ('multiplying -> /','multiplying',1,'p_multiplying','grammar.py',820),
  ('multiplying -> MOD','multiplying',1,'p_multiplying','grammar.py',821),
  ('multiplying -> REM','multiplying',1,'p_multiplying','grammar.py',822),
  ('multiplying -> STARSTAR','multiplying',1,'p_multiplying','grammar.py',823),
  ('factor -> primary','factor',1,'p_factor','grammar.py',828),
  ('factor -> NOT primary','factor',2,'p_factor','grammar.py',829),
  ('factor -> ABS primary','factor',2,'p_factor','grammar.py',830),
  ('primary -> literal','primary',1,'p_primary','grammar.py',839),
  ('primary -> name','primary',1,'p_primary','grammar.py',840),
  ('primary -> allocator','primary',1,'p_primary','grammar.py',841),
  ('primary -> qualified','primary',1,'p_primary','grammar.py',842),
  ('primary -> parenthesized_primary','primary',1,'p_primary','grammar.py',843),
  ('parenthesized_primary -> aggregate','parenthesized_primary',1,'p_parenthesized_primary','grammar.py',850),
  ('parenthesized_primary -> ( expression )','parenthesized_primary',3,'p_parenthesized_primary','grammar.py',851),
  ('qualified -> name TICK parenthesized_primary','qualified',3,'p_qualified','grammar.py',859),
  ('allocator -> NEW name','allocator',2,'p_allocator','grammar.py',864),
  ('allocator -> NEW qualified','allocator',2,'p_allocator','grammar.py',865),
  ('statement_s -> statement','statement_s',1,'p_statement_s','grammar.py',870),
  ('statement_s -> statement_s statement','statement_s',2,'p_statement_s','grammar.py',871),
  ('statement -> unlabeled','statement',1,'p_statement','grammar.py',881),
  ('statement -> label statement','statement',2,'p_statement','grammar.py',882),
  ('unlabeled -> simple_stmt','unlabeled',1,'p_unlabeled','grammar.py',891),
  ('unlabeled -> compound_stmt','unlabeled',1,'p_unlabeled','grammar.py',892),
  ('simple_stmt -> null_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',899),
  ('simple_stmt -> assign_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',900),
  ('simple_stmt -> exit_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',901),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',902),
  ('simple_stmt -> procedure_call','simple_stmt',1,'p_simple_stmt','grammar.py',903),
  ('simple_stmt -> delay_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',904),
  ('simple_stmt -> abort_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',905),
  ('simple_stmt -> raise_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',906),
  ('simple_stmt -> code_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',907),
  ('simple_stmt -> requeue_stmt','simple_stmt',1,'p_simple_stmt','grammar.py',908),
  ('simple_stmt -> error ;','simple_stmt',2,'p_simple_stmt','grammar.py',909),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',916),
  ('compound_stmt -> case_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',917),
  ('compound_stmt -> loop_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',918),
  ('compound_stmt -> block','compound_stmt',1,'p_compound_stmt','grammar.py',919),
  ('compound_stmt -> accept_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',920),
  ('compound_stmt -> select_stmt','compound_stmt',1,'p_compound_stmt','grammar.py',921),
  ('label -> LL IDENTIFIER RR','label',3,'p_label','grammar.py',927),
  ('null_stmt -> NuLL ;','null_stmt',2,'p_null_stmt','grammar.py',932),
  ('assign_stmt -> name ASSIGN expression ;','assign_stmt',4,'p_assign_stmt','grammar.py',937),
  ('if_stmt -> IF cond_clause_s else_opt END IF ;','if_stmt',6,'p_if_stmt','grammar.py',942),
  ('cond_clause_s -> cond_clause','cond_clause_s',1,'p_cond_clause_s','grammar.py',947),
  ('cond_clause_s -> cond_clause_s ELSIF cond_clause','cond_clause_s',3,'p_cond_clause_s','grammar.py',948),
  ('cond_clause -> cond_part statement_s','cond_clause',2,'p_cond_clause','grammar.py',958),
  ('cond_part -> condition THEN','cond_part',2,'p_cond_part','grammar.py',963),
  ('condition -> expression','condition',1,'p_condition','grammar.py',968),
  ('else_opt -> <empty>','else_opt',0,'p_else_opt','grammar.py',974),
  ('else_opt -> ELSE statement_s','else_opt',2,'p_else_opt','grammar.py',975),
  ('case_stmt -> case_hdr pragma_s alternative_s END CASE ;','case_stmt',6,'p_case_stmt','grammar.py',986),
  ('case_hdr -> CASE expression IS','case_hdr',3,'p_case_hdr','grammar.py',991),
  ('alternative_s -> <empty>','alternative_s',0,'p_alternative_s','grammar.py',998),
  ('alternative_s -> alternative_s alternative','alternative_s',2,'p_alternative_s','grammar.py',999),
  ('alternative -> WHEN choice_s ARROW statement_s','alternative',4,'p_alternative','grammar.py',1007),
  ('loop_stmt -> label_opt iteration basic_loop id_opt ;','loop_stmt',5,'p_loop_stmt','grammar.py',1012),
  ('label_opt -> <empty>','label_opt',0,'p_label_opt','grammar.py',1017),
  ('label_opt -> IDENTIFIER :','label_opt',2,'p_label_opt','grammar.py',1018),
  ('iteration -> <empty>','iteration',0,'p_iteration','grammar.py',1026),
  ('iteration -> WHILE condition','iteration',2,'p_iteration','grammar.py',1027),
  ('iteration -> iter_part reverse_opt discrete_range','iteration',3,'p_iteration','grammar.py',1028),
  ('iter_part -> FOR IDENTIFIER IN','iter_part',3,'p_iter_part','grammar.py',1038),
  ('reverse_opt -> <empty>','reverse_opt',0,'p_reverse_opt','grammar.py',1044),
  ('reverse_opt -> REVERSE','reverse_opt',1,'p_reverse_opt','grammar.py',1045),
  ('basic_loop -> LOOP statement_s END LOOP','basic_loop',4,'p_basic_loop','grammar.py',1053),
  ('id_opt -> <empty>','id_opt',0,'p_id_opt','grammar.py',1058),
  ('id_opt -> designator','id_opt',1,'p_id_opt','grammar.py',1059),
  ('block -> label_opt block_decl block_body END id_opt ;','block',6,'p_block','grammar.py',1067),
  ('block_decl -> <empty>','block_decl',0,'p_block_decl','grammar.py',1072),
  ('block_decl -> DECLARE decl_part','block_decl',2,'p_block_decl','grammar.py',1073),
  ('block_body -> BEGIN handled_stmt_s','block_body',2,'p_block_body','grammar.py',1081),
  ('handled_stmt_s -> statement_s except_handler_part_opt','handled_stmt_s',2,'p_handled_stmt_s','grammar.py',1086),
  ('except_handler_part_opt -> <empty>','except_handler_part_opt',0,'p_except_handler_part_opt','grammar.py',1091),
  ('except_handler_part_opt -> except_handler_part','except_handler_part_opt',1,'p_except_handler_part_opt','grammar.py',1092),
  ('exit_stmt -> EXIT name_opt when_opt ;','exit_stmt',4,'p_exit_stmt','grammar.py',1101),
  ('name_opt -> <empty>','name_opt',0,'p_name_opt','grammar.py',1106),
  ('name_opt -> name','name_opt',1,'p_name_opt','grammar.py',1107),
  ('when_opt -> <empty>','when_opt',0,'p_when_opt','grammar.py',1115),
  ('when_opt -> WHEN condition','when_opt',2,'p_when_opt','grammar.py',1116),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt','grammar.py',1124),
  ('return_stmt -> RETURN expression ;','return_stmt',3,'p_return_stmt','grammar.py',1125),
  ('subprog_decl -> subprog_spec ;','subprog_decl',2,'p_subprog_decl','grammar.py',1134),
  ('subprog_decl -> generic_subp_inst ;','subprog_decl',2,'p_subprog_decl','grammar.py',1135),
  ('subprog_decl -> subprog_spec_is_push ABSTRACT ;','subprog_decl',3,'p_subprog_decl','grammar.py',1136),
  ('subprog_spec -> PROCEDURE compound_name formal_part_opt','subprog_spec',3,'p_subprog_spec','grammar.py',1141),
  ('subprog_spec -> FUNCTION designator formal_part_opt RETURN name','subprog_spec',5,'p_subprog_spec','grammar.py',1142),
  ('subprog_spec -> FUNCTION designator','subprog_spec',2,'p_subprog_spec','grammar.py',1143),
  ('designator -> compound_name','designator',1,'p_designator','grammar.py',1155),
  ('designator -> STRING','designator',1,'p_designator','grammar.py',1156),
  ('formal_part_opt -> <empty>','formal_part_opt',0,'p_formal_part_opt','grammar.py',1166),
  ('formal_part_opt -> formal_part','formal_part_opt',1,'p_formal_part_opt','grammar.py',1167),
  ('formal_part -> ( param_s )','formal_part',3,'p_formal_part','grammar.py',1176),
  ('param_s -> param','param_s',1,'p_param_s','grammar.py',1182),
  ('param_s -> param_s ; param','param_s',3,'p_param_s','grammar.py',1183),
  ('param -> def_id_s : mode mark init_opt','param',5,'p_param','grammar.py',1192),
  ('param -> error','param',1,'p_param','grammar.py',1193),
  ('mode -> <empty>','mode',0,'p_mode','grammar.py',1202),
  ('mode -> IN','mode',1,'p_mode','grammar.py',1203),
  ('mode -> OUT','mode',1,'p_mode','grammar.py',1204),
  ('mode -> IN OUT','mode',2,'p_mode','grammar.py',1205),
  ('mode -> ACCESS','mode',1,'p_mode','grammar.py',1206),
  ('subprog_spec_is_push -> subprog_spec IS','subprog_spec_is_push',2,'p_subprog_spec_is_push','grammar.py',1217),
  ('subprog_body -> subprog_spec_is_push decl_part block_body END id_opt ;','subprog_body',6,'p_subprog_body','grammar.py',1222),
  ('procedure_call -> name ;','procedure_call',2,'p_procedure_call','grammar.py',1227),
  ('pkg_decl -> pkg_spec ;','pkg_decl',2,'p_pkg_decl','grammar.py',1234),
  ('pkg_decl -> generic_pkg_inst ;','pkg_decl',2,'p_pkg_decl','grammar.py',1235),
  ('pkg_spec -> PACKAGE compound_name IS decl_item_s private_part END c_id_opt','pkg_spec',7,'p_pkg_spec','grammar.py',1240),
  ('private_part -> <empty>','private_part',0,'p_private_part','grammar.py',1245),
  ('private_part -> PRIVATE decl_item_s','private_part',2,'p_private_part','grammar.py',1246),
  ('c_id_opt -> <empty>','c_id_opt',0,'p_c_id_opt','grammar.py',1254),
  ('c_id_opt -> compound_name','c_id_opt',1,'p_c_id_opt','grammar.py',1255),
  ('pkg_body -> PACKAGE BODY compound_name IS decl_part body_opt END c_id_opt ;','pkg_body',9,'p_pkg_body','grammar.py',1263),
  ('body_opt -> <empty>','body_opt',0,'p_body_opt','grammar.py',1268),
  ('body_opt -> block_body','body_opt',1,'p_body_opt','grammar.py',1269),
  ('private_type -> tagged_opt limited_opt PRIVATE','private_type',3,'p_private_type','grammar.py',1277),
  ('limited_opt -> <empty>','limited_opt',0,'p_limited_opt','grammar.py',1282),
  ('limited_opt -> LIMITED','limited_opt',1,'p_limited_opt','grammar.py',1283),
  ('use_clause -> USE name_s ;','use_clause',3,'p_use_clause','grammar.py',1291),
  ('use_clause -> USE TYPE name_s ;','use_clause',4,'p_use_clause','grammar.py',1292),
  ('name_s -> name','name_s',1,'p_name_s','grammar.py',1300),
  ('name_s -> name_s , name','name_s',3,'p_name_s','grammar.py',1301),
  ('rename_decl -> def_id_s : object_qualifier_opt subtype_ind renames ;','rename_decl',6,'p_rename_decl','grammar.py',1312),
  ('rename_decl -> def_id_s : EXCEPTION renames ;','rename_decl',5,'p_rename_decl','grammar.py',1313),
  ('rename_decl -> rename_unit','rename_decl',1,'p_rename_decl','grammar.py',1314),
  ('rename_unit -> PACKAGE compound_name renames ;','rename_unit',4,'p_rename_unit','grammar.py',1325),
  ('rename_unit -> subprog_spec renames ;','rename_unit',3,'p_rename_unit','grammar.py',1326),
  ('rename_unit -> generic_formal_part PACKAGE compound_name renames ;','rename_unit',5,'p_rename_unit','grammar.py',1327),
  ('rename_unit -> generic_formal_part subprog_spec renames ;','rename_unit',4,'p_rename_unit','grammar.py',1328),
  ('renames -> RENAMES name','renames',2,'p_renames','grammar.py',1342),
  ('task_decl -> task_spec ;','task_decl',2,'p_task_decl','grammar.py',1346),
  ('task_spec -> TASK simple_name task_def','task_spec',3,'p_task_spec','grammar.py',1351),
  ('task_spec -> TASK TYPE simple_name discrim_part_opt task_def','task_spec',5,'p_task_spec','grammar.py',1352),
  ('task_def -> <empty>','task_def',0,'p_task_def','grammar.py',1358),
  ('task_def -> IS entry_decl_s rep_spec_s task_private_opt END id_opt','task_def',6,'p_task_def','grammar.py',1359),
  ('task_private_opt -> <empty>','task_private_opt',0,'p_task_private_opt','grammar.py',1364),
  ('task_private_opt -> PRIVATE entry_decl_s rep_spec_s','task_private_opt',3,'p_task_private_opt','grammar.py',1365),
  ('task_body -> TASK BODY simple_name IS decl_part block_body END id_opt ;','task_body',9,'p_task_body','grammar.py',1373),
  ('prot_decl -> prot_spec ;','prot_decl',2,'p_prot_decl','grammar.py',1378),
  ('prot_spec -> PROTECTED IDENTIFIER prot_def','prot_spec',3,'p_prot_spec','grammar.py',1383),
  ('prot_spec -> PROTECTED TYPE simple_name discrim_part_opt prot_def','prot_spec',5,'p_prot_spec','grammar.py',1384),
  ('prot_def -> IS prot_op_decl_s prot_private_opt END id_opt','prot_def',5,'p_prot_def','grammar.py',1392),
  ('prot_private_opt -> <empty>','prot_private_opt',0,'p_prot_private_opt','grammar.py',1398),
  ('prot_private_opt -> PRIVATE prot_elem_decl_s','prot_private_opt',2,'p_prot_private_opt','grammar.py',1399),
  ('prot_op_decl_s -> <empty>','prot_op_decl_s',0,'p_prot_op_decl_s','grammar.py',1407),
  ('prot_op_decl_s -> prot_op_decl_s prot_op_decl','prot_op_decl_s',2,'p_prot_op_decl_s','grammar.py',1408),
  ('prot_op_decl -> entry_decl','prot_op_decl',1,'p_prot_op_decl','grammar.py',1417),
  ('prot_op_decl -> subprog_spec ;','prot_op_decl',2,'p_prot_op_decl','grammar.py',1418),
  ('prot_op_decl -> rep_spec','prot_op_decl',1,'p_prot_op_decl','grammar.py',1419),
  ('prot_op_decl -> pragma','prot_op_decl',1,'p_prot_op_decl','grammar.py',1420),
  ('prot_elem_decl_s -> <empty>','prot_elem_decl_s',0,'p_prot_elem_decl_s','grammar.py',1425),
  ('prot_elem_decl_s -> prot_elem_decl_s prot_elem_decl','prot_elem_decl_s',2,'p_prot_elem_decl_s','grammar.py',1426),
  ('prot_elem_decl -> prot_op_decl','prot_elem_decl',1,'p_prot_elem_decl','grammar.py',1434),
  ('prot_elem_decl -> comp_decl','prot_elem_decl',1,'p_prot_elem_decl','grammar.py',1435),
  ('prot_body -> PROTECTED BODY simple_name IS prot_op_body_s END id_opt ;','prot_body',8,'p_prot_body','grammar.py',1439),
  ('prot_op_body_s -> pragma_s','prot_op_body_s',1,'p_prot_op_body_s','grammar.py',1444),
  ('prot_op_body_s -> prot_op_body_s prot_op_body pragma_s','prot_op_body_s',3,'p_prot_op_body_s','grammar.py',1445),
  ('prot_op_body -> entry_body','prot_op_body',1,'p_prot_op_body','grammar.py',1453),
  ('prot_op_body -> subprog_body','prot_op_body',1,'p_prot_op_body','grammar.py',1454),
  ('prot_op_body -> subprog_spec ;','prot_op_body',2,'p_prot_op_body','grammar.py',1455),
  ('entry_decl_s -> pragma_s','entry_decl_s',1,'p_entry_decl_s','grammar.py',1461),
  ('entry_decl_s -> entry_decl_s entry_decl pragma_s','entry_decl_s',3,'p_entry_decl_s','grammar.py',1462),
  ('entry_decl -> ENTRY IDENTIFIER formal_part_opt ;','entry_decl',4,'p_entry_decl','grammar.py',1470),
  ('entry_decl -> ENTRY IDENTIFIER ( discrete_range ) formal_part_opt ;','entry_decl',7,'p_entry_decl','grammar.py',1471),
  ('entry_body -> ENTRY IDENTIFIER formal_part_opt WHEN condition entry_body_part','entry_body',6,'p_entry_body','grammar.py',1479),
  ('entry_body -> ENTRY IDENTIFIER ( iter_part discrete_range ) formal_part_opt WHEN condition entry_body_part','entry_body',10,'p_entry_body','grammar.py',1480),
  ('entry_body_part -> ;','entry_body_part',1,'p_entry_body_part','grammar.py',1488),
  ('entry_body_part -> IS decl_part block_body END id_opt ;','entry_body_part',6,'p_entry_body_part','grammar.py',1489),
  ('rep_spec_s -> <empty>','rep_spec_s',0,'p_rep_spec_s','grammar.py',1497),
  ('rep_spec_s -> rep_spec_s rep_spec pragma_s','rep_spec_s',3,'p_rep_spec_s','grammar.py',1498),
  ('entry_call -> procedure_call','entry_call',1,'p_entry_call','grammar.py',1506),
  ('accept_stmt -> accept_hdr ;','accept_stmt',2,'p_accept_stmt','grammar.py',1511),
  ('accept_stmt -> accept_hdr DO handled_stmt_s END id_opt ;','accept_stmt',6,'p_accept_stmt','grammar.py',1512),
  ('accept_hdr -> ACCEPT entry_name formal_part_opt','accept_hdr',3,'p_accept_hdr','grammar.py',1520),
  ('entry_name -> simple_name','entry_name',1,'p_entry_name','grammar.py',1525),
  ('entry_name -> entry_name ( expression )','entry_name',4,'p_entry_name','grammar.py',1526),
  ('delay_stmt -> DELAY expression ;','delay_stmt',3,'p_delay_stmt','grammar.py',1534),
  ('delay_stmt -> DELAY UNTIL expression ;','delay_stmt',4,'p_delay_stmt','grammar.py',1535),
  ('select_stmt -> select_wait','select_stmt',1,'p_select_stmt','grammar.py',1543),
  ('select_stmt -> async_select','select_stmt',1,'p_select_stmt','grammar.py',1544),
  ('select_stmt -> timed_entry_call','select_stmt',1,'p_select_stmt','grammar.py',1545),
  ('select_stmt -> cond_entry_call','select_stmt',1,'p_select_stmt','grammar.py',1546),
  ('select_wait -> SELECT guarded_select_alt or_select else_opt END SELECT ;','select_wait',7,'p_select_wait','grammar.py',1551),
  ('guarded_select_alt -> select_alt','guarded_select_alt',1,'p_guarded_select_alt','grammar.py',1556),
  ('guarded_select_alt -> WHEN condition ARROW select_alt','guarded_select_alt',4,'p_guarded_select_alt','grammar.py',1557),
  ('or_select -> <empty>','or_select',0,'p_or_select','grammar.py',1565),
  ('or_select -> or_select OR guarded_select_alt','or_select',3,'p_or_select','grammar.py',1566),
  ('select_alt -> accept_stmt stmts_opt','select_alt',2,'p_select_alt','grammar.py',1575),
  ('select_alt -> delay_stmt stmts_opt','select_alt',2,'p_select_alt','grammar.py',1576),
  ('select_alt -> TERMINATE ;','select_alt',2,'p_select_alt','grammar.py',1577),
  ('delay_or_entry_alt -> delay_stmt stmts_opt','delay_or_entry_alt',2,'p_delay_or_entry_alt','grammar.py',1586),
  ('delay_or_entry_alt -> entry_call stmts_opt','delay_or_entry_alt',2,'p_delay_or_entry_alt','grammar.py',1587),
  ('async_select -> SELECT delay_or_entry_alt THEN ABORT statement_s END SELECT ;','async_select',8,'p_async_select','grammar.py',1591),
  ('timed_entry_call -> SELECT entry_call stmts_opt OR delay_stmt stmts_opt END SELECT ;','timed_entry_call',9,'p_timed_entry_call','grammar.py',1595),
  ('cond_entry_call -> SELECT entry_call stmts_opt ELSE statement_s END SELECT ;','cond_entry_call',8,'p_cond_entry_call','grammar.py',1599),
  ('stmts_opt -> <empty>','stmts_opt',0,'p_stmts_opt','grammar.py',1604),
  ('stmts_opt -> statement_s','stmts_opt',1,'p_stmts_opt','grammar.py',1605),
  ('abort_stmt -> ABORT name_s ;','abort_stmt',3,'p_abort_stmt','grammar.py',1613),
  ('compilation -> <empty>','compilation',0,'p_compilation','grammar.py',1618),
  ('compilation -> compilation comp_unit','compilation',2,'p_compilation','grammar.py',1619),
  ('compilation -> pragma pragma_s','compilation',2,'p_compilation','grammar.py',1620),
  ('comp_unit -> context_spec private_opt unit pragma_s','comp_unit',4,'p_comp_unit','grammar.py',1631),
  ('comp_unit -> private_opt unit pragma_s','comp_unit',3,'p_comp_unit','grammar.py',1632),
  ('private_opt -> <empty>','private_opt',0,'p_private_opt','grammar.py',1640),
  ('private_opt -> PRIVATE','private_opt',1,'p_private_opt','grammar.py',1641),
  ('context_spec -> with_clause use_clause_opt','context_spec',2,'p_context_spec','grammar.py',1649),
  ('context_spec -> context_spec with_clause use_clause_opt','context_spec',3,'p_context_spec','grammar.py',1650),
  ('context_spec -> context_spec pragma','context_spec',2,'p_context_spec','grammar.py',1651),
  ('with_clause -> WITH c_name_list ;','with_clause',3,'p_with_clause','grammar.py',1661),
  ('use_clause_opt -> <empty>','use_clause_opt',0,'p_use_clause_opt','grammar.py',1666),
  ('use_clause_opt -> use_clause_opt use_clause','use_clause_opt',2,'p_use_clause_opt','grammar.py',1667),
  ('unit -> pkg_decl','unit',1,'p_unit','grammar.py',1675),
  ('unit -> pkg_body','unit',1,'p_unit','grammar.py',1676),
  ('unit -> subprog_decl','unit',1,'p_unit','grammar.py',1677),
  ('unit -> subprog_body','unit',1,'p_unit','grammar.py',1678),
  ('unit -> subunit','unit',1,'p_unit','grammar.py',1679),
  ('unit -> generic_decl','unit',1,'p_unit','grammar.py',1680),
  ('unit -> rename_unit','unit',1,'p_unit','grammar.py',1681),
  ('subunit -> SEPARATE ( compound_name ) subunit_body','subunit',5,'p_subunit','grammar.py',1686),
  ('subunit_body -> subprog_body','subunit_body',1,'p_subunit_body','grammar.py',1691),
  ('subunit_body -> pkg_body','subunit_body',1,'p_subunit_body','grammar.py',1692),
  ('subunit_body -> task_body','subunit_body',1,'p_subunit_body','grammar.py',1693),
  ('subunit_body -> prot_body','subunit_body',1,'p_subunit_body','grammar.py',1694),
  ('body_stub -> TASK BODY simple_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1698),
  ('body_stub -> PACKAGE BODY compound_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1699),
  ('body_stub -> subprog_spec IS SEPARATE ;','body_stub',4,'p_body_stub','grammar.py',1700),
  ('body_stub -> PROTECTED BODY simple_name IS SEPARATE ;','body_stub',6,'p_body_stub','grammar.py',1701),
  ('exception_decl -> def_id_s : EXCEPTION ;','exception_decl',4,'p_exception_decl','grammar.py',1713),
  ('except_handler_part -> EXCEPTION exception_handler','except_handler_part',2,'p_except_handler_part','grammar.py',1718),
  ('except_handler_part -> except_handler_part exception_handler','except_handler_part',2,'p_except_handler_part','grammar.py',1719),
  ('exception_handler -> WHEN except_choice_s ARROW statement_s','exception_handler',4,'p_exception_handler','grammar.py',1728),
  ('exception_handler -> WHEN IDENTIFIER : except_choice_s ARROW statement_s','exception_handler',6,'p_exception_handler','grammar.py',1729),
  ('except_choice_s -> except_choice','except_choice_s',1,'p_except_choice_s','grammar.py',1738),
  ('except_choice_s -> except_choice_s | except_choice','except_choice_s',3,'p_except_choice_s','grammar.py',1739),
  ('except_choice -> name','except_choice',1,'p_except_choice','grammar.py',1749),
  ('except_choice -> OTHERS','except_choice',1,'p_except_choice','grammar.py',1750),
  ('raise_stmt -> RAISE name_opt ;','raise_stmt',3,'p_raise_stmt','grammar.py',1759),
  ('requeue_stmt -> REQUEUE name ;','requeue_stmt',3,'p_requeue_stmt','grammar.py',1764),
  ('requeue_stmt -> REQUEUE name WITH ABORT ;','requeue_stmt',5,'p_requeue_stmt','grammar.py',1765),
  ('generic_decl -> generic_formal_part subprog_spec ;','generic_decl',3,'p_generic_decl','grammar.py',1773),
  ('generic_decl -> generic_formal_part pkg_spec ;','generic_decl',3,'p_generic_decl','grammar.py',1774),
  ('generic_formal_part -> GENERIC','generic_formal_part',1,'p_generic_formal_part','grammar.py',1779),
  ('generic_formal_part -> generic_formal_part generic_formal','generic_formal_part',2,'p_generic_formal_part','grammar.py',1780),
  ('generic_formal -> param ;','generic_formal',2,'p_generic_formal','grammar.py',1788),
  ('generic_formal -> TYPE simple_name generic_discrim_part_opt IS generic_type_def ;','generic_formal',6,'p_generic_formal','grammar.py',1789),
  ('generic_formal -> WITH PROCEDURE simple_name formal_part_opt subp_default ;','generic_formal',6,'p_generic_formal','grammar.py',1790),
  ('generic_formal -> WITH FUNCTION designator formal_part_opt RETURN name subp_default ;','generic_formal',8,'p_generic_formal','grammar.py',1791),
  ('generic_formal -> WITH PACKAGE simple_name IS NEW name ( BOX ) ;','generic_formal',10,'p_generic_formal','grammar.py',1792),
  ('generic_formal -> WITH PACKAGE simple_name IS NEW name ;','generic_formal',7,'p_generic_formal','grammar.py',1793),
  ('generic_formal -> use_clause','generic_formal',1,'p_generic_formal','grammar.py',1794),
  ('generic_discrim_part_opt -> <empty>','generic_discrim_part_opt',0,'p_generic_discrim_part_opt','grammar.py',1812),
  ('generic_discrim_part_opt -> discrim_part','generic_discrim_part_opt',1,'p_generic_discrim_part_opt','grammar.py',1813),
  ('generic_discrim_part_opt -> ( BOX )','generic_discrim_part_opt',3,'p_generic_discrim_part_opt','grammar.py',1814),
  ('subp_default -> <empty>','subp_default',0,'p_subp_default','grammar.py',1824),
  ('subp_default -> IS name','subp_default',2,'p_subp_default','grammar.py',1825),
  ('subp_default -> IS BOX','subp_default',2,'p_subp_default','grammar.py',1826),
  ('generic_type_def -> ( BOX )','generic_type_def',3,'p_generic_type_def','grammar.py',1834),
  ('generic_type_def -> RANGE BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1835),
  ('generic_type_def -> MOD BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1836),
  ('generic_type_def -> DELTA BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1837),
  ('generic_type_def -> DELTA BOX DIGITS BOX','generic_type_def',4,'p_generic_type_def','grammar.py',1838),
  ('generic_type_def -> DIGITS BOX','generic_type_def',2,'p_generic_type_def','grammar.py',1839),
  ('generic_type_def -> array_type','generic_type_def',1,'p_generic_type_def','grammar.py',1840),
  ('generic_type_def -> access_type','generic_type_def',1,'p_generic_type_def','grammar.py',1841),
  ('generic_type_def -> private_type','generic_type_def',1,'p_generic_type_def','grammar.py',1842),
  ('generic_type_def -> generic_derived_type','generic_type_def',1,'p_generic_type_def','grammar.py',1843),
  ('generic_derived_type -> NEW subtype_ind','generic_derived_type',2,'p_generic_derived_type','grammar.py',1861),
  ('generic_derived_type -> NEW subtype_ind WITH PRIVATE','generic_derived_type',4,'p_generic_derived_type','grammar.py',1862),
  ('generic_derived_type -> ABSTRACT NEW subtype_ind WITH PRIVATE','generic_derived_type',5,'p_generic_derived_type','grammar.py',1863),
  ('generic_subp_inst -> subprog_spec IS generic_inst','generic_subp_inst',3,'p_generic_subp_inst','grammar.py',1873),
  ('generic_pkg_inst -> PACKAGE compound_name IS generic_inst','generic_pkg_inst',4,'p_generic_pkg_inst','grammar.py',1878),
  ('generic_inst -> NEW name','generic_inst',2,'p_generic_inst','grammar.py',1883),
  ('rep_spec -> attrib_def','rep_spec',1,'p_rep_spec','grammar.py',1888),
  ('rep_spec -> record_type_spec','rep_spec',1,'p_rep_spec','grammar.py',1889),
  ('rep_spec -> address_spec','rep_spec',1,'p_rep_spec','grammar.py',1890),
  ('attrib_def -> FOR mark USE expression ;','attrib_def',5,'p_attrib_def','grammar.py',1895),
  ('record_type_spec -> FOR mark USE RECORD align_opt comp_loc_s END RECORD ;','record_type_spec',9,'p_record_type_spec','grammar.py',1900),
  ('align_opt -> <empty>','align_opt',0,'p_align_opt','grammar.py',1905),
  ('align_opt -> AT MOD expression ;','align_opt',4,'p_align_opt','grammar.py',1906),
  ('comp_loc_s -> <empty>','comp_loc_s',0,'p_comp_loc_s','grammar.py',1914),
  ('comp_loc_s -> comp_loc_s mark AT expression RANGE range ;','comp_loc_s',7,'p_comp_loc_s','grammar.py',1915),
  ('address_spec -> FOR mark USE AT expression ;','address_spec',6,'p_address_spec','grammar.py',1923),
  ('code_stmt -> qualified ;','code_stmt',2,'p_code_stmt','grammar.py',1927),
]
